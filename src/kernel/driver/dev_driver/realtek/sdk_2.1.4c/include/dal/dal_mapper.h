/*
 * Copyright (C) 2009 Realtek Semiconductor Corp.
 * All Rights Reserved.
 *
 * This program is the proprietary software of Realtek Semiconductor
 * Corporation and/or its licensors, and only be used, duplicated,
 * modified or distributed under the authorized license from Realtek.
 *
 * ANY USE OF THE SOFTWARE OTHER THAN AS AUTHORIZED UNDER
 * THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.
 *
 * $Revision: 53061 $
 * $Date: 2014-11-14 16:25:10 +0800 (Fri, 14 Nov 2014) $
 *
 * Purpose : Mapper Layer is used to seperate different kind of software or hardware platform
 *
 * Feature : Just dispatch information to Multiplex layer
 *
 */
#ifndef __DAL_MAPPER_H__
#define __DAL_MAPPER_H__

/*
 * Include Files
 */
#include <common/rt_autoconf.h>
#include <common/rt_type.h>
#include <common/rt_error.h>
#include <dal/dal_common.h>
#include <rtk/vlan.h>
#include <rtk/l2.h>
#include <rtk/l3.h>
#include <rtk/trunk.h>
#include <rtk/stp.h>
#include <rtk/rate.h>
#include <rtk/qos.h>
#include <rtk/trap.h>
#include <rtk/stat.h>
#include <rtk/switch.h>
#include <rtk/dot1x.h>
#include <rtk/mirror.h>
#include <rtk/filter.h>
#include <rtk/flowctrl.h>
#include <rtk/svlan.h>
#include <rtk/sec.h>
#include <rtk/oam.h>
#include <rtk/pie.h>
#include <rtk/eee.h>
#include <rtk/led.h>
#include <rtk/time.h>
#include <rtk/acl.h>
#include <rtk/mpls.h>
#include <rtk/diag.h>

/*
 * Symbol Definition
 */

/*
 * Data Declaration
 */
typedef struct dal_mapper_s {
    uint32  family_id;
    int32   (*_init)(uint32 );

    /* VLAN */
    int32   (*vlan_init)(uint32 );
    int32   (*vlan_create)(uint32 , rtk_vlan_t );
    int32   (*vlan_destroy)(uint32, rtk_vlan_t);
    int32   (*vlan_destroyAll)(uint32 , uint32 );
    int32   (*vlan_fid_get)(uint32 , rtk_vlan_t , rtk_fid_t *);
    int32   (*vlan_fid_set)(uint32 , rtk_vlan_t , rtk_fid_t );
    int32   (*vlan_port_add)(uint32 , rtk_vlan_t , rtk_port_t , uint32 );
    int32   (*vlan_port_del)(uint32 , rtk_vlan_t , rtk_port_t );
    int32   (*vlan_port_get)(uint32 , rtk_vlan_t , rtk_portmask_t * , rtk_portmask_t *);
    int32   (*vlan_port_set)(uint32 , rtk_vlan_t , rtk_portmask_t *, rtk_portmask_t *);
    int32   (*vlan_stg_get)(uint32 , rtk_vlan_t , rtk_stg_t *);
    int32   (*vlan_stg_set)(uint32 , rtk_vlan_t , rtk_stg_t );
    int32   (*vlan_portAcceptFrameType_get)(uint32 ,rtk_port_t , rtk_vlan_acceptFrameType_t *);
    int32   (*vlan_portAcceptFrameType_set)(uint32 , rtk_port_t , rtk_vlan_acceptFrameType_t );
    int32   (*vlan_portOuterAcceptFrameType_get)(uint32, rtk_port_t, rtk_vlan_acceptFrameType_t *);
    int32   (*vlan_portOuterAcceptFrameType_set)(uint32, rtk_port_t, rtk_vlan_acceptFrameType_t);
    int32   (*vlan_vlanFunctionEnable_get)(uint32 , rtk_enable_t *);
    int32   (*vlan_vlanFunctionEnable_set)(uint32 , rtk_enable_t );
    int32   (*vlan_portIgrFilter_get)(uint32 , rtk_port_t , rtk_vlan_ifilter_t *);
    int32   (*vlan_portIgrFilter_set)(uint32 , rtk_port_t , rtk_vlan_ifilter_t);
    int32   (*vlan_portIgrFilterEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*vlan_portIgrFilterEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*vlan_igrFilterEnable_get)(uint32 , rtk_enable_t *);
    int32   (*vlan_igrFilterEnable_set)(uint32 , rtk_enable_t );
    int32   (*vlan_portEgrFilterEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*vlan_portEgrFilterEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*vlan_mcastLeakyEnable_get)(uint32 , rtk_enable_t *);
    int32   (*vlan_mcastLeakyEnable_set)(uint32 , rtk_enable_t );
    int32   (*vlan_mcastLeakyPortEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*vlan_mcastLeakyPortEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*vlan_portPvid_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*vlan_portPvid_set)(uint32 , rtk_port_t , uint32 );
    int32   (*vlan_portOuterPvid_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*vlan_portOuterPvid_set)(uint32 , rtk_port_t , uint32 );
    int32   (*vlan_protoGroup_get)(uint32 , uint32 , rtk_vlan_protoGroup_t *);
    int32   (*vlan_protoGroup_set)(uint32 , uint32 , rtk_vlan_protoGroup_t *);
    int32   (*vlan_portProtoVlan_get)(uint32 , rtk_port_t , uint32 , rtk_vlan_protoVlanCfg_t *);
    int32   (*vlan_portProtoVlan_set)(uint32 , rtk_port_t , uint32 , rtk_vlan_protoVlanCfg_t *);
    int32   (*vlan_portOuterProtoVlan_get)(uint32 , rtk_port_t , uint32 , rtk_vlan_protoVlanCfg_t *);
    int32   (*vlan_portOuterProtoVlan_set)(uint32 , rtk_port_t , uint32 , rtk_vlan_protoVlanCfg_t *);
    int32   (*vlan_portTpidEntry_get)(uint32 , rtk_port_t , uint32 , uint32 *);
    int32   (*vlan_portTpidEntry_set)(uint32 , rtk_port_t , uint32 , uint32 );
    int32   (*vlan_portEgrInnerTpidMode_get)(uint32 , rtk_port_t , rtk_vlan_egrTpidMode_t *);
    int32   (*vlan_portEgrInnerTpidMode_set)(uint32 , rtk_port_t , rtk_vlan_egrTpidMode_t );
    int32   (*vlan_portIgrInnerTpid_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*vlan_portIgrInnerTpid_set)(uint32 , rtk_port_t , uint32 );
    int32   (*vlan_portEgrInnerTpid_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*vlan_portEgrInnerTpid_set)(uint32 , rtk_port_t , uint32 );
    int32   (*vlan_portEgrOuterTpidMode_get)(uint32 , rtk_port_t , rtk_vlan_egrTpidMode_t *);
    int32   (*vlan_portEgrOuterTpidMode_set)(uint32 , rtk_port_t , rtk_vlan_egrTpidMode_t );
    int32   (*vlan_portIgrOuterTpid_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*vlan_portIgrOuterTpid_set)(uint32 , rtk_port_t , uint32 );
    int32   (*vlan_portEgrOuterTpid_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*vlan_portEgrOuterTpid_set)(uint32 , rtk_port_t , uint32 );
    int32   (*vlan_portIgrExtraTpid_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*vlan_portIgrExtraTpid_set)(uint32 , rtk_port_t , uint32 );
    int32   (*vlan_portIgrIgnoreInnerTagEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*vlan_portIgrIgnoreInnerTagEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*vlan_portIgrIgnoreOuterTagEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*vlan_portIgrIgnoreOuterTagEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*vlan_portEgrInnerTagEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*vlan_portEgrInnerTagEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*vlan_portEgrOuterTagEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*vlan_portEgrOuterTagEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*vlan_portIgrExtraTagEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*vlan_portIgrExtraTagEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*vlan_portEgrExtraTagEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*vlan_portEgrExtraTagEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*vlan_portEgrInnerVidSource_get)(uint32 , rtk_port_t , rtk_vlan_tagSource_t *);
    int32   (*vlan_portEgrInnerVidSource_set)(uint32 , rtk_port_t , rtk_vlan_tagSource_t );
    int32   (*vlan_portEgrInnerPriSource_get)(uint32 , rtk_port_t , rtk_vlan_tagSource_t *);
    int32   (*vlan_portEgrInnerPriSource_set)(uint32 , rtk_port_t , rtk_vlan_tagSource_t );
    int32   (*vlan_portEgrOuterVidSource_get)(uint32 , rtk_port_t , rtk_vlan_tagSource_t *);
    int32   (*vlan_portEgrOuterVidSource_set)(uint32 , rtk_port_t , rtk_vlan_tagSource_t );
    int32   (*vlan_portEgrOuterPriSource_get)(uint32 , rtk_port_t , rtk_vlan_tagSource_t *);
    int32   (*vlan_portEgrOuterPriSource_set)(uint32 , rtk_port_t , rtk_vlan_tagSource_t );
    int32   (*vlan_tagMode_get)(uint32 , rtk_port_t , rtk_vlan_tagMode_t *);
    int32   (*vlan_tagMode_set)(uint32 , rtk_port_t , rtk_vlan_tagMode_t );
    int32   (*vlan_portIgrTagKeepEnable_get)(uint32 , rtk_port_t , rtk_enable_t *, rtk_enable_t *);
    int32   (*vlan_portIgrTagKeepEnable_set)(uint32 , rtk_port_t , rtk_enable_t , rtk_enable_t );
    int32   (*vlan_portEgrTagKeepEnable_get)(uint32 , rtk_port_t , rtk_enable_t *, rtk_enable_t *);
    int32   (*vlan_portEgrTagKeepEnable_set)(uint32 , rtk_port_t , rtk_enable_t , rtk_enable_t );
    int32   (*vlan_fwdMode_get)(uint32 , rtk_vlan_t , rtk_vlan_fwdMode_t *);
    int32   (*vlan_fwdMode_set)(uint32 , rtk_vlan_t , rtk_vlan_fwdMode_t );
    int32   (*vlan_portPvidMode_get)(uint32 , rtk_port_t , rtk_vlan_pbVlan_mode_t *);
    int32   (*vlan_portPvidMode_set)(uint32 , rtk_port_t , rtk_vlan_pbVlan_mode_t );
    int32   (*vlan_portOuterPvidMode_get)(uint32 , rtk_port_t , rtk_vlan_pbVlan_mode_t *);
    int32   (*vlan_portOuterPvidMode_set)(uint32 , rtk_port_t , rtk_vlan_pbVlan_mode_t );
    int32   (*vlan_igrVlanCnvtBlkMode_get)(uint32 , uint32 , rtk_vlan_igrVlanCnvtBlk_mode_t *);
    int32   (*vlan_igrVlanCnvtBlkMode_set)(uint32 , uint32 , rtk_vlan_igrVlanCnvtBlk_mode_t );
    int32   (*vlan_igrVlanCnvtEntry_get)(uint32 , uint32 , rtk_vlan_igrVlanCnvtEntry_t *);
    int32   (*vlan_igrVlanCnvtEntry_set)(uint32 , uint32 , rtk_vlan_igrVlanCnvtEntry_t *);
    int32   (*vlan_l2UcastLookupMode_get)(uint32 , rtk_vlan_t , rtk_l2_ucastLookupMode_t *);
    int32   (*vlan_l2UcastLookupMode_set)(uint32 , rtk_vlan_t , rtk_l2_ucastLookupMode_t );
    int32   (*vlan_l2McastLookupMode_get)(uint32 , rtk_vlan_t , rtk_l2_mcastLookupMode_t *);
    int32   (*vlan_l2McastLookupMode_set)(uint32 , rtk_vlan_t , rtk_l2_mcastLookupMode_t );
    int32   (*vlan_profileIdx_get)(uint32 , rtk_vlan_t , uint32 *);
    int32   (*vlan_profileIdx_set)(uint32 , rtk_vlan_t , uint32 );
    int32   (*vlan_profile_get)(uint32 , uint32 , rtk_vlan_profile_t *);
    int32   (*vlan_profile_set)(uint32 , uint32 , rtk_vlan_profile_t *);
    int32   (*vlan_innerTpidEntry_get)(uint32 , uint32 , uint32 *);
    int32   (*vlan_innerTpidEntry_set)(uint32 , uint32 , uint32 );
    int32   (*vlan_outerTpidEntry_get)(uint32 , uint32 , uint32 *);
    int32   (*vlan_outerTpidEntry_set)(uint32 , uint32 , uint32 );
    int32   (*vlan_extraTpidEntry_get)(uint32 , uint32 , uint32 *);
    int32   (*vlan_extraTpidEntry_set)(uint32 , uint32 , uint32 );
    int32   (*vlan_macBasedVlan_get)(uint32 , uint32 , uint32 *, rtk_mac_t *, rtk_vlan_t *, rtk_pri_t *);
    int32   (*vlan_macBasedVlan_set)(uint32 , uint32 , uint32 , rtk_mac_t *, rtk_vlan_t, rtk_pri_t);
    int32   (*vlan_macBasedVlanWithMsk_get)(uint32 , uint32 , uint32 *, rtk_mac_t *, rtk_mac_t *, rtk_vlan_t *, rtk_pri_t *);
    int32   (*vlan_macBasedVlanWithMsk_set)(uint32 , uint32 , uint32 , rtk_mac_t *, rtk_mac_t *, rtk_vlan_t, rtk_pri_t);
    int32   (*vlan_macBasedVlanWithPort_get)(uint32 , uint32 , uint32 *, rtk_mac_t *, rtk_mac_t *, rtk_port_t *, rtk_port_t *, rtk_vlan_t *, rtk_pri_t *);
    int32   (*vlan_macBasedVlanWithPort_set)(uint32 , uint32 , uint32 , rtk_mac_t *, rtk_mac_t *, rtk_port_t , rtk_port_t , rtk_vlan_t , rtk_pri_t);
    int32   (*vlan_ipSubnetBasedVlan_get)(uint32 , uint32 , uint32 *, ipaddr_t *,  ipaddr_t *, rtk_vlan_t *, rtk_pri_t *);
    int32   (*vlan_ipSubnetBasedVlan_set)(uint32 , uint32 , uint32 , ipaddr_t , ipaddr_t , rtk_vlan_t, rtk_pri_t);
    int32   (*vlan_ipSubnetBasedVlanWithPort_get)(uint32 , uint32 , uint32 *, ipaddr_t *,  ipaddr_t *, rtk_port_t *, rtk_port_t *, rtk_vlan_t *, rtk_pri_t *);
    int32   (*vlan_ipSubnetBasedVlanWithPort_set)(uint32 , uint32 , uint32 , ipaddr_t , ipaddr_t , rtk_port_t , rtk_port_t , rtk_vlan_t, rtk_pri_t);
    int32   (*vlan_portVlanAggrEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*vlan_portVlanAggrEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*vlan_egrVlanCnvtDblTagEnable_get)(uint32 , rtk_enable_t *);
    int32   (*vlan_egrVlanCnvtDblTagEnable_set)(uint32 , rtk_enable_t );
    int32   (*vlan_egrVlanCnvtVidSource_get)(uint32 , rtk_l2_vlanMode_t *);
    int32   (*vlan_egrVlanCnvtVidSource_set)(uint32 , rtk_l2_vlanMode_t );
    int32   (*vlan_egrVlanCnvtEntry_get)(uint32 , uint32 , rtk_vlan_egrVlanCnvtEntry_t *);
    int32   (*vlan_egrVlanCnvtEntry_set)(uint32 , uint32 , rtk_vlan_egrVlanCnvtEntry_t *);
    int32   (*vlan_portEgrInnerTagSts_get)(uint32 , rtk_port_t , rtk_vlan_tagSts_t *);
    int32   (*vlan_portEgrInnerTagSts_set)(uint32 , rtk_port_t , rtk_vlan_tagSts_t );
    int32   (*vlan_portEgrOuterTagSts_get)(uint32 , rtk_port_t , rtk_vlan_tagSts_t *);
    int32   (*vlan_portEgrOuterTagSts_set)(uint32 , rtk_port_t , rtk_vlan_tagSts_t );
    int32   (*vlan_leakyStpFilter_get)(uint32 , rtk_enable_t *);
    int32   (*vlan_leakyStpFilter_set)(uint32 , rtk_enable_t );
    int32   (*vlan_except_get)(uint32 , rtk_action_t *);
    int32   (*vlan_except_set)(uint32 , rtk_action_t );
    int32   (*vlan_portIgrCnvtDfltAct_get)(uint32, rtk_port_t, rtk_action_t *);
    int32   (*vlan_portIgrCnvtDfltAct_set)(uint32, rtk_port_t, rtk_action_t);
    int32   (*vlan_igrVlanCnvtEntry_delAll)(uint32);
    int32   (*vlan_egrVlanCnvtEntry_delAll)(uint32);
    int32   (*vlan_egrVlanCnvtRangeCheckVid_get)(uint32, uint32, rtk_vlan_egrVlanCnvtRangeCheck_vid_t *);
    int32   (*vlan_egrVlanCnvtRangeCheckVid_set)(uint32, uint32, rtk_vlan_egrVlanCnvtRangeCheck_vid_t *);
    int32   (*vlan_portIgrTagKeepType_get)(uint32 , rtk_port_t , rtk_vlan_tagKeepType_t *, rtk_vlan_tagKeepType_t *);
    int32   (*vlan_portIgrTagKeepType_set)(uint32 , rtk_port_t , rtk_vlan_tagKeepType_t , rtk_vlan_tagKeepType_t );
    int32   (*vlan_portEgrTagKeepType_get)(uint32 , rtk_port_t , rtk_vlan_tagKeepType_t *, rtk_vlan_tagKeepType_t *);
    int32   (*vlan_portEgrTagKeepType_set)(uint32 , rtk_port_t , rtk_vlan_tagKeepType_t , rtk_vlan_tagKeepType_t );
    int32   (*vlan_portVlanAggrVidSource_get)(uint32 , rtk_port_t , rtk_l2_vlanMode_t *);
    int32   (*vlan_portVlanAggrVidSource_set)(uint32 , rtk_port_t , rtk_l2_vlanMode_t );
    int32   (*vlan_portVlanAggrPriTagVidSource_get)(uint32 , rtk_port_t , rtk_vlan_priTagVidSrc_t *);
    int32   (*vlan_portVlanAggrPriTagVidSource_set)(uint32 , rtk_port_t , rtk_vlan_priTagVidSrc_t );
    int32   (*vlan_portEgrVlanCnvtVidSource_get)(uint32 , rtk_port_t , rtk_l2_vlanMode_t *);
    int32   (*vlan_portEgrVlanCnvtVidSource_set)(uint32 , rtk_port_t , rtk_l2_vlanMode_t );
    int32   (*vlan_portEgrVlanCnvtVidTarget_get)(uint32 , rtk_port_t , rtk_l2_vlanMode_t *);
    int32   (*vlan_portEgrVlanCnvtVidTarget_set)(uint32 , rtk_port_t , rtk_l2_vlanMode_t );
    int32   (*vlan_portEgrVlanCnvtLookupMissAct_get)(uint32 , rtk_port_t , rtk_vlan_lookupMissAct_t *);
    int32   (*vlan_portEgrVlanCnvtLookupMissAct_set)(uint32 , rtk_port_t , rtk_vlan_lookupMissAct_t );

    /* L2 */
    int32   (*l2_init)(uint32 );
    int32   (*l2_flushLinkDownPortAddrEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_flushLinkDownPortAddrEnable_set)(uint32 , rtk_enable_t );
    int32   (*l2_flushType_set)(uint32 , rtk_l2_flushType_t , rtk_vlan_t , uint32 );
    int32   (*l2_ucastAddr_flush)(uint32 , rtk_l2_flushCfg_t *);
    int32   (*l2_learningCnt_get)(uint32 , uint32 *);
    int32   (*l2_limitLearningCnt_get)(uint32 , uint32 *);
    int32   (*l2_limitLearningCnt_set)(uint32 , uint32 );
    int32   (*l2_limitLearningCntAction_get)(uint32 , rtk_l2_limitLearnCntAction_t *);
    int32   (*l2_limitLearningCntAction_set)(uint32 , rtk_l2_limitLearnCntAction_t );
    int32   (*l2_portLearningCnt_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*l2_portLimitLearningCntEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*l2_portLimitLearningCntEnable_set)(uint32 , rtk_port_t , rtk_enable_t);
    int32   (*l2_portLimitLearningCnt_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*l2_portLimitLearningCnt_set)(uint32 , rtk_port_t , uint32 );
    int32   (*l2_portLimitLearningCntAction_get)(uint32 , rtk_port_t , rtk_l2_limitLearnCntAction_t *);
    int32   (*l2_portLimitLearningCntAction_set)(uint32 , rtk_port_t , rtk_l2_limitLearnCntAction_t );
    int32   (*l2_portLastLearnedMac_get)(uint32 , rtk_port_t , rtk_fid_t *, rtk_mac_t *);
    int32   (*l2_fidLimitLearningEntry_get)(uint32 , uint32 , rtk_l2_fidMacLimitEntry_t *);
    int32   (*l2_fidLimitLearningEntry_set)(uint32 , uint32 , rtk_l2_fidMacLimitEntry_t *);
    int32   (*l2_fidLearningCnt_get)(uint32 , uint32 , uint32 *);
    int32   (*l2_fidLearningCnt_reset)(uint32 , uint32 );
    int32   (*l2_fidLastLearnedMac_get)(uint32 , uint32 , rtk_fid_t *, rtk_mac_t *);
    int32   (*l2_fidLearningCntAction_get)(uint32 , rtk_l2_limitLearnCntAction_t *);
    int32   (*l2_fidLearningCntAction_set)(uint32 , rtk_l2_limitLearnCntAction_t );
    int32   (*l2_limitLearningTrapPri_get)(uint32 , rtk_pri_t *);
    int32   (*l2_limitLearningTrapPri_set)(uint32 , rtk_pri_t );
    int32   (*l2_limitLearningTrapPriEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_limitLearningTrapPriEnable_set)(uint32 , rtk_enable_t );
    int32   (*l2_limitLearningTrapDP_get)(uint32 , uint32 *);
    int32   (*l2_limitLearningTrapDP_set)(uint32 , uint32);
    int32   (*l2_limitLearningTrapDPEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_limitLearningTrapDPEnable_set)(uint32 , rtk_enable_t );
    int32   (*l2_limitLearningTrapAddCPUTagEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_limitLearningTrapAddCPUTagEnable_set)(uint32 , rtk_enable_t);
    int32   (*l2_aging_get)(uint32 , uint32 *);
    int32   (*l2_aging_set)(uint32 , uint32 );
    int32   (*l2_portAgingEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*l2_portAgingEnable_set)(uint32 , rtk_port_t , rtk_enable_t);
    int32   (*l2_camEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_camEnable_set)(uint32 , rtk_enable_t);
    int32   (*l2_hashAlgo_get)(uint32 , uint32 *);
    int32   (*l2_hashAlgo_set)(uint32 , uint32 );
    int32   (*l2_vlanMode_get)(uint32 , rtk_port_t , rtk_l2_vlanMode_t *);
    int32   (*l2_vlanMode_set)(uint32 , rtk_port_t , rtk_l2_vlanMode_t );
    int32   (*l2_learningEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*l2_learningEnable_set)(uint32 , rtk_port_t , rtk_enable_t);
    int32   (*l2_newMacOp_get)(uint32 , rtk_port_t , rtk_l2_newMacLrnMode_t *, rtk_action_t *);
    int32   (*l2_newMacOp_set)(uint32 , rtk_port_t , rtk_l2_newMacLrnMode_t , rtk_action_t );
    int32   (*l2_LRUEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_LRUEnable_set)(uint32 , rtk_enable_t);
    int32   (*l2_ucastLookupMode_get)(uint32 , rtk_l2_ucastLookupMode_t *);
    int32   (*l2_ucastLookupMode_set)(uint32 , rtk_l2_ucastLookupMode_t );
    int32   (*l2_addr_init)(uint32 , rtk_vlan_t , rtk_mac_t *, rtk_l2_ucastAddr_t *);
    int32   (*l2_addr_add)(uint32 , rtk_l2_ucastAddr_t *);
    int32   (*l2_addr_del)(uint32 , rtk_vlan_t , rtk_mac_t *);
    int32   (*l2_addr_get)(uint32 , rtk_l2_ucastAddr_t *);
    int32   (*l2_addr_set)(uint32 , rtk_l2_ucastAddr_t *);
    int32   (*l2_addr_delAll)(uint32 , uint32 );
    int32   (*l2_nextValidAddr_get)(uint32 , int32 *, uint32 , rtk_l2_ucastAddr_t *);
    int32   (*l2_nextValidMcastAddr_get)(uint32 , int32 *, rtk_l2_mcastAddr_t *);
    int32   (*l2_nextValidIpMcastAddr_get)(uint32 , int32 *, rtk_l2_ipMcastAddr_t *);
    int32   (*l2_mcastLookupMode_get)(uint32 , rtk_l2_mcastLookupMode_t *, rtk_fid_t *);
    int32   (*l2_mcastLookupMode_set)(uint32 , rtk_l2_mcastLookupMode_t , rtk_fid_t );
    int32   (*l2_mcastBlockPortmask_get)(uint32 , rtk_portmask_t *);
    int32   (*l2_mcastBlockPortmask_set)(uint32 , rtk_portmask_t *);
    int32   (*l2_mcastAddr_init)(uint32 , rtk_vlan_t , rtk_mac_t *, rtk_l2_mcastAddr_t *);
    int32   (*l2_mcastAddr_add)(uint32 , rtk_l2_mcastAddr_t *);
    int32   (*l2_mcastAddr_del)(uint32 , rtk_vlan_t , rtk_mac_t *);
    int32   (*l2_mcastAddr_get)(uint32 , rtk_l2_mcastAddr_t *);
    int32   (*l2_mcastAddr_set)(uint32 , rtk_l2_mcastAddr_t *);
    int32   (*l2_mcastAddr_add_with_index)(uint32 , rtk_l2_mcastAddr_t *);
    int32   (*l2_mcastAddr_get_with_index)(uint32 , rtk_l2_mcastAddr_t *);
    int32   (*l2_ipmcEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_ipmcEnable_set)(uint32 , rtk_enable_t);
    int32   (*l2_ipmcMode_get)(uint32 , rtk_l2_ipmcMode_t *);
    int32   (*l2_ipmcMode_set)(uint32 , rtk_l2_ipmcMode_t );
    int32   (*l2_ipMcastAddr_init)(uint32 , ipaddr_t , ipaddr_t , rtk_l2_ipMcastAddr_t *);
    int32   (*l2_ipMcastAddrExt_init)(uint32 , rtk_l2_ipMcastHashKey_t * , rtk_l2_ipMcastAddr_t *);
    int32   (*l2_ipMcastAddr_add)(uint32 , rtk_l2_ipMcastAddr_t *);
    int32   (*l2_ipMcastAddr_del)(uint32 , ipaddr_t , ipaddr_t , rtk_vlan_t );
    int32   (*l2_ipMcastAddr_get)(uint32 , rtk_l2_ipMcastAddr_t *);
    int32   (*l2_ipMcastAddr_set)(uint32 , rtk_l2_ipMcastAddr_t *);
    int32   (*l2_ipMcastAddr_add_with_index)(uint32 , rtk_l2_ipMcastAddr_t *);
    int32   (*l2_ipMcastAddr_get_with_index)(uint32 , rtk_l2_ipMcastAddr_t *);
    int32   (*l2_ipMcastAddrChkEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_ipMcastAddrChkEnable_set)(uint32 , rtk_enable_t );
    int32   (*l2_ipMcstFidVidCompareEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_ipMcstFidVidCompareEnable_set)(uint32 , rtk_enable_t );
    int32   (*l2_ipmc_routerPorts_get)(uint32 , rtk_portmask_t *);
    int32   (*l2_ipmc_routerPorts_set)(uint32 , rtk_portmask_t *);
    int32   (*l2_ipmcDstAddrMismatchAction_get)(uint32 , rtk_l2_ipmc_mismatchType_t , rtk_l2_ipmcMismatch_action_t *);
    int32   (*l2_ipmcDstAddrMismatchAction_set)(uint32 , rtk_l2_ipmc_mismatchType_t , rtk_l2_ipmcMismatch_action_t );
    int32   (*l2_ipmcDstAddrMismatchPri_get)(uint32 , rtk_l2_ipmc_mismatchType_t , rtk_pri_t *);
    int32   (*l2_ipmcDstAddrMismatchPri_set)(uint32 , rtk_l2_ipmc_mismatchType_t , rtk_pri_t );
    int32   (*l2_ipmcDstAddrMismatchPriEnable_get)(uint32 , rtk_l2_ipmc_mismatchType_t , rtk_enable_t *);
    int32   (*l2_ipmcDstAddrMismatchPriEnable_set)(uint32 , rtk_l2_ipmc_mismatchType_t , rtk_enable_t );
    int32   (*l2_ipmcDstAddrMismatchDP_get)(uint32 , rtk_l2_ipmc_mismatchType_t , uint32 *);
    int32   (*l2_ipmcDstAddrMismatchDP_set)(uint32 , rtk_l2_ipmc_mismatchType_t , uint32);
    int32   (*l2_ipmcDstAddrMismatchDPEnable_get)(uint32 , rtk_l2_ipmc_mismatchType_t , rtk_enable_t *);
    int32   (*l2_ipmcDstAddrMismatchDPEnable_set)(uint32 , rtk_l2_ipmc_mismatchType_t , rtk_enable_t );
    int32   (*l2_ipmcDstAddrMismatchAddCPUTagEnable_get)(uint32 , rtk_l2_ipmc_mismatchType_t , rtk_enable_t *);
    int32   (*l2_ipmcDstAddrMismatchAddCPUTagEnable_set)(uint32 , rtk_l2_ipmc_mismatchType_t , rtk_enable_t);
    int32   (*l2_ip6mcMode_get)(uint32 , rtk_l2_ipmcMode_t *);
    int32   (*l2_ip6mcMode_set)(uint32 , rtk_l2_ipmcMode_t );
    int32   (*l2_ip6CareByte_get)(uint32 , rtk_l2_ip6_careByte_type_t , uint32 *);
    int32   (*l2_ip6CareByte_set)(uint32 , rtk_l2_ip6_careByte_type_t , uint32);
    int32   (*l2_ip6McastAddrExt_init)(uint32 , rtk_l2_ip6McastHashKey_t * , rtk_l2_ip6McastAddr_t *);
    int32   (*l2_ip6McastAddr_add)(uint32 , rtk_l2_ip6McastAddr_t *);
    int32   (*l2_ip6McastAddr_del)(uint32 , rtk_ipv6_addr_t , rtk_ipv6_addr_t , rtk_vlan_t );
    int32   (*l2_ip6McastAddr_get)(uint32 , rtk_l2_ip6McastAddr_t *);
    int32   (*l2_ip6McastAddr_set)(uint32 , rtk_l2_ip6McastAddr_t *);
    int32   (*l2_ip6McastAddr_add_with_index)(uint32 , rtk_l2_ip6McastAddr_t *);
    int32   (*l2_ip6McastAddr_get_with_index)(uint32 , rtk_l2_ip6McastAddr_t *);
    int32   (*l2_nextValidIp6McastAddr_get)(uint32 , int32 *, rtk_l2_ip6McastAddr_t *);
    int32   (*l2_mcastFwdIndex_alloc)(uint32 , int32 *);
    int32   (*l2_mcastFwdIndex_free)(uint32 , int32 );
    int32   (*l2_mcastFwdIndexFreeCount_get)(uint32 , uint32 *);
    int32   (*l2_mcastFwdPortmask_set)(uint32 , int32 , rtk_portmask_t *, uint32);
    int32   (*l2_mcastFwdPortmask_get)(uint32 , int32 , rtk_portmask_t *, uint32 *);
    int32   (*l2_cpuMacAddr_add)(uint32 , rtk_vlan_t , rtk_mac_t *);
    int32   (*l2_cpuMacAddr_del)(uint32 , rtk_vlan_t , rtk_mac_t *);
    int32   (*l2_legalMoveToPorts_get)(uint32 , rtk_port_t , rtk_portmask_t *);
    int32   (*l2_legalMoveToPorts_set)(uint32 , rtk_port_t , rtk_portmask_t *);
    int32   (*l2_illegalPortMoveAction_get)(uint32 , rtk_port_t , rtk_action_t *);
    int32   (*l2_illegalPortMoveAction_set)(uint32 , rtk_port_t , rtk_action_t );
    int32   (*l2_legalPortMoveAction_get)(uint32 , rtk_port_t , rtk_action_t *);
    int32   (*l2_legalPortMoveAction_set)(uint32 , rtk_port_t , rtk_action_t );
    int32   (*l2_legalPortMoveflushAddrEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*l2_legalPortMoveflushAddrEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*l2_staticPortMoveAction_get)(uint32 , rtk_port_t , rtk_action_t *);
    int32   (*l2_staticPortMoveAction_set)(uint32 , rtk_port_t , rtk_action_t );
    int32   (*l2_lookupMissFloodPortMask_get)(uint32 , rtk_l2_lookupMissType_t , rtk_portmask_t *);
    int32   (*l2_lookupMissFloodPortMask_set)(uint32 , rtk_l2_lookupMissType_t , rtk_portmask_t *);
    int32   (*l2_lookupMissFloodPortMask_add)(uint32 , rtk_l2_lookupMissType_t , rtk_port_t );
    int32   (*l2_lookupMissFloodPortMask_del)(uint32 , rtk_l2_lookupMissType_t , rtk_port_t );
    int32   (*l2_lookupMissFloodPortMask_set_with_idx)(uint32 , rtk_l2_lookupMissType_t , uint32, rtk_portmask_t *);
    int32   (*l2_lookupMissFloodPortMaskIdx_get)(uint32 , rtk_l2_lookupMissType_t , uint32 *);
    int32   (*l2_lookupMissFloodPortMaskIdx_set)(uint32 , rtk_l2_lookupMissType_t , uint32 );
    int32   (*l2_lookupMissAction_get)(uint32 , rtk_l2_lookupMissType_t , rtk_action_t *);
    int32   (*l2_lookupMissAction_set)(uint32 , rtk_l2_lookupMissType_t , rtk_action_t );
    int32   (*l2_portLookupMissAction_get)(uint32 , rtk_port_t , rtk_l2_lookupMissType_t , rtk_action_t *);
    int32   (*l2_portLookupMissAction_set)(uint32 , rtk_port_t , rtk_l2_lookupMissType_t , rtk_action_t );
    int32   (*l2_lookupMissPri_get)(uint32 , rtk_pri_t *);
    int32   (*l2_lookupMissPri_set)(uint32 , rtk_pri_t );
    int32   (*l2_lookupMissPriEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_lookupMissPriEnable_set)(uint32 , rtk_enable_t );
    int32   (*l2_lookupMissDP_get)(uint32 , uint32 *);
    int32   (*l2_lookupMissDP_set)(uint32 , uint32);
    int32   (*l2_lookupMissDPEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_lookupMissDPEnable_set)(uint32 , rtk_enable_t );
    int32   (*l2_lookupMissAddCPUTagEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_lookupMissAddCPUTagEnable_set)(uint32 , rtk_enable_t);
    int32   (*l2_srcPortEgrFilterMask_get)(uint32 , rtk_portmask_t *);
    int32   (*l2_srcPortEgrFilterMask_set)(uint32 , rtk_portmask_t *);
    int32   (*l2_srcPortEgrFilterMask_add)(uint32 , rtk_port_t );
    int32   (*l2_srcPortEgrFilterMask_del)(uint32 , rtk_port_t );
    int32   (*l2_exceptionAddrAction_get)(uint32 , rtk_l2_exceptionAddrType_t , rtk_action_t *);
    int32   (*l2_exceptionAddrAction_set)(uint32 , rtk_l2_exceptionAddrType_t , rtk_action_t );
    int32   (*l2_notificationEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_notificationEnable_set)(uint32 , rtk_enable_t );
    int32   (*l2_notificationEventEnable_get)(uint32 , rtk_l2_notifyEvent_t, rtk_enable_t *);
    int32   (*l2_notificationEventEnable_set)(uint32 , rtk_l2_notifyEvent_t, rtk_enable_t );
    int32   (*l2_notificationBackPressureThresh_get)(uint32 , uint32 *);
    int32   (*l2_notificationBackPressureThresh_set)(uint32 , uint32 );
    int32   (*l2_notificationFifoEmptyStatus_get)(uint32 , rtk_l2_notifyFifoStatus_t *);
    int32   (*l2_notificationEventHandler_register)(uint32 ,rtk_l2_notification_callback_t , rtk_l2_notification_bufferRunOut_callback_t );
    int32   (*l2_notificationEventHandler_unregister)(uint32 );
    int32   (*l2_trapPri_get)(uint32 , rtk_pri_t *);
    int32   (*l2_trapPri_set)(uint32 , rtk_pri_t );
    int32   (*l2_trapPriEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_trapPriEnable_set)(uint32 , rtk_enable_t );
    int32   (*l2_trapAddCPUTagEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_trapAddCPUTagEnable_set)(uint32 , rtk_enable_t);
    int32   (*l2_addrEntry_get)(uint32 , uint32, rtk_l2_entry_t *);
    int32   (*l2_conflictAddr_get)(uint32 , rtk_l2_entry_t * , rtk_l2_entry_t * , uint32 , uint32 *);
    int32   (*l2_zeroSALearningEnable_get)(uint32 , rtk_enable_t *);
    int32   (*l2_zeroSALearningEnable_set)(uint32 , rtk_enable_t);
    int32   (*l2_secureMacMode_get)(uint32, rtk_enable_t *);
    int32   (*l2_secureMacMode_set)(uint32, rtk_enable_t);
    int32   (*l2_portDynamicPortMoveForbidEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*l2_portDynamicPortMoveForbidEnable_set)(uint32 , rtk_port_t , rtk_enable_t);
    int32   (*l2_dynamicPortMoveForbidAction_get)(uint32 , rtk_action_t *);
    int32   (*l2_dynamicPortMoveForbidAction_set)(uint32 , rtk_action_t);
    int32   (*l2_portMacFilterEnable_get)(uint32 , rtk_port_t , rtk_l2_macFilterMode_t , rtk_enable_t *);
    int32   (*l2_portMacFilterEnable_set)(uint32 , rtk_port_t , rtk_l2_macFilterMode_t , rtk_enable_t);
    int32   (*l2_hwNextValidAddr_get)(uint32, int32 *, rtk_l2_nextValidType_t , rtk_l2_entry_t  *);

    /* PORT */
    int32   (*port_init)(uint32 );
    int32   (*port_link_get)(uint32 , rtk_port_t , rtk_port_linkStatus_t *);
    int32   (*port_speedDuplex_get)(uint32 , rtk_port_t , rtk_port_speed_t *, rtk_port_duplex_t *);
    int32   (*port_flowctrl_get)(uint32 , rtk_port_t , uint32 *, uint32 *);
    int32   (*port_phyAutoNegoEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*port_phyAutoNegoEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*port_phyAutoNegoAbility_get)(uint32 , rtk_port_t , rtk_port_phy_ability_t *);
    int32   (*port_phyAutoNegoAbility_set)(uint32 , rtk_port_t , rtk_port_phy_ability_t *);
    int32   (*port_phyForceModeAbility_get)(uint32 , rtk_port_t , rtk_port_speed_t *, rtk_port_duplex_t *, rtk_enable_t *);
    int32   (*port_phyForceModeAbility_set)(uint32 , rtk_port_t , rtk_port_speed_t , rtk_port_duplex_t , rtk_enable_t );
    int32   (*port_phyMasterSlave_get)(uint32 , rtk_port_t, rtk_port_masterSlave_t *, rtk_port_masterSlave_t *);
    int32   (*port_phyMasterSlave_set)(uint32 , rtk_port_t, rtk_port_masterSlave_t );
    int32   (*port_phyReg_get)(uint32 , rtk_port_t , uint32 , rtk_port_phy_reg_t , uint32 *);
    int32   (*port_phyReg_set)(uint32 , rtk_port_t , uint32 , rtk_port_phy_reg_t , uint32 );
    int32   (*port_phyReg_broadcast_set)(uint32, uint32, rtk_port_phy_reg_t, uint32);
    int32   (*port_phyReg_broadcastID_set)(uint32, uint32);
    int32   (*port_phyExtParkPageReg_get)(uint32 , rtk_port_t , uint32 , uint32 , uint32 , rtk_port_phy_reg_t , uint32 *);
    int32   (*port_phyExtParkPageReg_set)(uint32 , rtk_port_t , uint32 , uint32 , uint32 , rtk_port_phy_reg_t , uint32);
    int32   (*port_phymaskExtParkPageReg_set)(uint32 , rtk_portmask_t *, uint32 , uint32 , uint32 , rtk_port_phy_reg_t , uint32);
    int32   (*port_phyMmdReg_get)(uint32 , rtk_port_t , uint32 , uint32 , uint32 *);
    int32   (*port_phyMmdReg_set)(uint32 , rtk_port_t , uint32 , uint32 , uint32);
    int32   (*port_phymaskMmdReg_set)(uint32 , rtk_portmask_t *, uint32 , uint32 , uint32);
    int32   (*port_cpuPortId_get)(uint32 , rtk_port_t *);
    int32   (*port_cpuPortId_set)(uint32 , rtk_port_t );
    int32   (*port_isolation_get)(uint32 , rtk_port_t , rtk_portmask_t *);
    int32   (*port_isolation_set)(uint32 , rtk_port_t , rtk_portmask_t );
    int32   (*port_isolation_add)(uint32 , rtk_port_t , rtk_port_t );
    int32   (*port_isolation_del)(uint32 , rtk_port_t , rtk_port_t );
    int32   (*port_phyComboPortMedia_get)(uint32 , rtk_port_t , rtk_port_media_t *);
    int32   (*port_phyComboPortMedia_set)(uint32 , rtk_port_t , rtk_port_media_t );
    int32   (*port_adminEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*port_adminEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*port_backpressureEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*port_backpressureEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*port_linkChange_register)(uint32, dal_link_change_callback_f);
    int32   (*port_linkChange_unregister)(uint32);
    int32   (*port_greenEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*port_greenEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*port_udldEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*port_udldEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*port_udldLinkUpAutoTriggerEnable_get)(uint32 , rtk_enable_t *);
    int32   (*port_udldLinkUpAutoTriggerEnable_set)(uint32 , rtk_enable_t );
    int32   (*port_udldTrigger_start)(uint32 , rtk_port_t );
    int32   (*port_udldStatus_get)(uint32 , rtk_port_t , rtk_port_udldStatus_t *);
    int32   (*port_udldAutoDisableFailedPortEnable_get)(uint32 , rtk_enable_t *);
    int32   (*port_udldAutoDisableFailedPortEnable_set)(uint32 , rtk_enable_t );
    int32   (*port_udldInterval_get)(uint32 , rtk_port_udldInterval_t *);
    int32   (*port_udldInterval_set)(uint32 , rtk_port_udldInterval_t );
    int32   (*port_udldRetryCount_get)(uint32 , uint32 *);
    int32   (*port_udldRetryCount_set)(uint32 , uint32 );
    int32   (*port_udldLedIndicateEnable_get)(uint32 , rtk_enable_t *);
    int32   (*port_udldLedIndicateEnable_set)(uint32 , rtk_enable_t );
    int32   (*port_rldpEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*port_rldpEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*port_rldpStatus_get)(uint32 , rtk_port_t , rtk_port_rldpNormalStatus_t *, rtk_port_rldpSelfStatus_t *);
    int32   (*port_udldEchoAction_get)(uint32 , rtk_port_udldEchoAction_t *);
    int32   (*port_udldEchoAction_set)(uint32 , rtk_port_udldEchoAction_t );
    int32   (*port_udldLinkStatus_get)(uint32 , rtk_port_t , rtk_port_udldLinkStatus_t *);
    int32   (*port_udldLinkStatus_set)(uint32 , rtk_port_t , rtk_port_udldLinkStatus_t);
    int32   (*port_rldpAutoBlockEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*port_rldpAutoBlockEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*port_rldpInterval_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*port_rldpInterval_set)(uint32 , rtk_port_t , uint32 );
    int32   (*port_rldpSelfLoopAgingTime_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*port_rldpSelfLoopAgingTime_set)(uint32 , rtk_port_t , uint32 );
    int32   (*port_rldpNormalLoopAgingTime_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*port_rldpNormalLoopAgingTime_set)(uint32 , rtk_port_t , uint32 );
    int32   (*port_txEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*port_txEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*port_rxEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*port_rxEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*port_specialCongest_set)(uint32 , rtk_port_t , uint32 );
    int32   (*port_phyCrossOverMode_get)(uint32 , rtk_port_t , rtk_port_crossOver_mode_t *);
    int32   (*port_phyCrossOverMode_set)(uint32 , rtk_port_t , rtk_port_crossOver_mode_t );
    int32   (*port_phyCrossOverStatus_get)(uint32 , rtk_port_t , rtk_port_crossOver_status_t *);
    int32   (*port_flowCtrlEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*port_flowCtrlEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*port_phyComboPortFiberMedia_get)(uint32 , rtk_port_t , rtk_port_fiber_media_t *);
    int32   (*port_phyComboPortFiberMedia_set)(uint32 , rtk_port_t , rtk_port_fiber_media_t );
    int32   (*port_linkMedia_get)(uint32 , rtk_port_t , rtk_port_linkStatus_t *, rtk_port_media_t *);
    int32   (*port_linkDownPowerSavingEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*port_linkDownPowerSavingEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*port_vlanBasedIsolationEntry_get)(uint32 , uint32 , rtk_port_vlanIsolationEntry_t *);
    int32   (*port_vlanBasedIsolationEntry_set)(uint32 , uint32 , rtk_port_vlanIsolationEntry_t *);
    int32   (*port_vlanBasedIsolation_vlanSource_get)(uint32 , rtk_port_vlanIsolationSrc_t *);
    int32   (*port_vlanBasedIsolation_vlanSource_set)(uint32 , rtk_port_vlanIsolationSrc_t);
    int32   (*port_gigaLiteEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*port_gigaLiteEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*port_downSpeedEnable_get)(uint32, rtk_port_t, rtk_enable_t *);
    int32   (*port_downSpeedEnable_set)(uint32, rtk_port_t, rtk_enable_t);	
    int32   (*port_fiberDownSpeedEnable_get)(uint32, rtk_port_t, rtk_enable_t *);
    int32   (*port_fiberDownSpeedEnable_set)(uint32, rtk_port_t, rtk_enable_t);
    int32   (*port_fiberNwayForceLinkEnable_get)(uint32, rtk_port_t, rtk_enable_t *);
    int32   (*port_fiberNwayForceLinkEnable_set)(uint32, rtk_port_t, rtk_enable_t);
    int32   (*port_fiberOAMLoopBackEnable_set)(uint32, rtk_port_t, rtk_enable_t);
    int32   (*port_10gMedia_set)(uint32, rtk_port_t, rtk_port_10gMedia_t);
    int32   (*port_10gMedia_get)(uint32, rtk_port_t, rtk_port_10gMedia_t *);
    int32   (*port_fiberInternalLoopBackEnable_set)(uint32, rtk_port_t, rtk_enable_t);
    int32   (*port_10gSds_restart)(uint32, rtk_port_t);

    /* trunk function */
    int32   (*trunk_init)(uint32 );
    int32   (*trunk_distributionAlgorithm_get)(uint32 , uint32 trk_gid, uint32 *pAlgo_bitmask);
    int32   (*trunk_distributionAlgorithm_set)(uint32 , uint32 trk_gid, uint32 algo_bitmask);
    int32   (*trunk_distributionAlgorithmBind_get)(uint32, uint32, uint32*);
    int32   (*trunk_distributionAlgorithmBind_set)(uint32, uint32, uint32);
    int32   (*trunk_distributionAlgorithmParam_get)(uint32, uint32, uint32*);
    int32   (*trunk_distributionAlgorithmParam_set)(uint32, uint32, uint32);
    int32   (*trunk_distributionAlgorithmShift_get)(uint32, uint32, rtk_trunk_distAlgoShift_t *);
    int32   (*trunk_distributionAlgorithmShift_set)(uint32, uint32, rtk_trunk_distAlgoShift_t *);
    int32   (*trunk_hashMappingTable_get)(uint32 , uint32 trk_gid, rtk_trunk_hashVal2Port_t *pHash2Port_array);
    int32   (*trunk_hashMappingTable_set)(uint32 , uint32 trk_gid, rtk_trunk_hashVal2Port_t *pHash2Port_array);
    int32   (*trunk_mode_get)(uint32 , rtk_trunk_mode_t *pMode);
    int32   (*trunk_mode_set)(uint32 , rtk_trunk_mode_t mode);
    int32   (*trunk_port_get)(uint32 , uint32 trk_gid, rtk_portmask_t *pTrunk_member_portmask);
    int32   (*trunk_port_set)(uint32 , uint32 trk_gid, rtk_portmask_t *pTrunk_member_portmask);
    int32   (*trunk_port_link_notification)(uint32 unit, rtk_port_t trunkMemberPort, rtk_port_linkStatus_t linkStatus);
    int32   (*trunk_representPort_get)(uint32 , uint32 , rtk_port_t *);
    int32   (*trunk_representPort_set)(uint32 , uint32 , rtk_port_t );
    int32   (*trunk_trafficSeparate_get)(uint32, uint32, uint32 *);
    int32   (*trunk_trafficSeparate_set)(uint32, uint32, uint32);
    int32   (*trunk_floodMode_get)(uint32 , uint32 , rtk_trunk_floodMode_t *);
    int32   (*trunk_floodMode_set)(uint32 , uint32 , rtk_trunk_floodMode_t );
    int32   (*trunk_floodPort_get)(uint32 , uint32 , rtk_port_t *);
    int32   (*trunk_floodPort_set)(uint32 , uint32 , rtk_port_t );

    /* spanning tree API */
    int32   (*stp_init)(uint32 );
    int32   (*stp_mstpInstance_create)(uint32 , uint32 );
    int32   (*stp_mstpInstance_destroy)(uint32 , uint32 );
    int32   (*stp_isMstpInstanceExist_get)(uint32 , uint32 , uint32 *);
    int32   (*stp_mstpState_get)(uint32 , uint32 , rtk_port_t , rtk_stp_state_t *);
    int32   (*stp_mstpState_set)(uint32 , uint32 , rtk_port_t , rtk_stp_state_t );
    int32   (*stp_mstpInstanceMode_get)(uint32 , rtk_stp_mstiMode_t *);
    int32   (*stp_mstpInstanceMode_set)(uint32 , rtk_stp_mstiMode_t );

    /* rate API */
    int32   (*rate_init)(uint32 );
    int32   (*rate_igrBandwidthCtrlEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*rate_igrBandwidthCtrlEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*rate_igrBandwidthCtrlRate_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*rate_igrBandwidthCtrlRate_set)(uint32 , rtk_port_t , uint32 );
    int32   (*rate_igrBandwidthCtrlIncludeIfg_get)(uint32 , rtk_enable_t *);
    int32   (*rate_igrBandwidthCtrlIncludeIfg_set)(uint32 , rtk_enable_t );
    int32   (*rate_portIgrBandwidthCtrlIncludeIfg_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*rate_portIgrBandwidthCtrlIncludeIfg_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*rate_igrBandwidthFlowctrlEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*rate_igrBandwidthFlowctrlEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*rate_igrBandwidthFlowctrlThresh_get)(uint32 , rtk_port_t , rtk_rate_thresh_t *);
    int32   (*rate_igrBandwidthFlowctrlThresh_set)(uint32 , rtk_port_t , rtk_rate_thresh_t *);
    int32   (*rate_igrBandwidthCtrlFPEntry_get)(uint32 , rtk_port_t , uint32 , rtk_rate_igr_fpEntry_t *);
    int32   (*rate_igrBandwidthCtrlFPEntry_set)(uint32 , rtk_port_t , uint32 , rtk_rate_igr_fpEntry_t *);
    int32   (*rate_igrBandwidthCtrlBypass_get)(uint32 , rtk_rate_igr_bypassType_t , rtk_enable_t *);
    int32   (*rate_igrBandwidthCtrlBypass_set)(uint32 , rtk_rate_igr_bypassType_t , rtk_enable_t );
    int32   (*rate_igrBandwidthLowThresh_get)(uint32 , uint32 *);
    int32   (*rate_igrBandwidthLowThresh_set)(uint32 , uint32 );
    int32   (*rate_portIgrBandwidthCtrlExceed_get)(uint32 , rtk_port_t , uint32*);
    int32   (*rate_portIgrBandwidthCtrlExceed_reset)(uint32 , rtk_port_t );
    int32   (*rate_portIgrBandwidthHighThresh_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*rate_portIgrBandwidthHighThresh_set)(uint32 , rtk_port_t , uint32 );
    int32   (*rate_igrBwCtrlBurstSize_get)(uint32 , uint32 *);
    int32   (*rate_igrBwCtrlBurstSize_set)(uint32 , uint32 );
    int32   (*rate_egrBandwidthCtrlEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*rate_egrBandwidthCtrlEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*rate_egrBandwidthCtrlRate_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*rate_egrBandwidthCtrlRate_set)(uint32 , rtk_port_t , uint32 );
    int32   (*rate_egrBandwidthCtrlIncludeIfg_get)(uint32 , rtk_enable_t *);
    int32   (*rate_egrBandwidthCtrlIncludeIfg_set)(uint32 , rtk_enable_t );
    int32   (*rate_cpuEgrBandwidthCtrlRateMode_get)(uint32 , rtk_rate_rateMode_t *);
    int32   (*rate_cpuEgrBandwidthCtrlRateMode_set)(uint32 , rtk_rate_rateMode_t );
    int32   (*rate_portEgrBandwidthCtrlIncludeIfg_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*rate_portEgrBandwidthCtrlIncludeIfg_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*rate_portEgrBandwidthCtrlBurstSize_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*rate_portEgrBandwidthCtrlBurstSize_set)(uint32 , rtk_port_t , uint32 );
    int32   (*rate_egrQueueBwCtrlEnable_get)(uint32 , rtk_port_t , rtk_qid_t , rtk_enable_t *);
    int32   (*rate_egrQueueBwCtrlEnable_set)(uint32 , rtk_port_t , rtk_qid_t , rtk_enable_t );
    int32   (*rate_egrQueueBwCtrlRate_get)(uint32 , rtk_port_t , rtk_qid_t , uint32 *);
    int32   (*rate_egrQueueBwCtrlRate_set)(uint32 , rtk_port_t , rtk_qid_t , uint32 );
    int32   (*rate_egrQueueFixedBandwidthEnable_get)(uint32 , rtk_port_t , rtk_qid_t , rtk_enable_t *);
    int32   (*rate_egrQueueFixedBandwidthEnable_set)(uint32 , rtk_port_t , rtk_qid_t , rtk_enable_t );
    int32   (*rate_egrPortQueueBwCtrlBurstSize_get)(uint32 , rtk_port_t , rtk_qid_t , uint32 *);
    int32   (*rate_egrPortQueueBwCtrlBurstSize_set)(uint32 , rtk_port_t , rtk_qid_t , uint32 );
    int32   (*rate_stormControlRate_get)(uint32 , rtk_port_t , rtk_rate_storm_group_t , uint32 *);
    int32   (*rate_stormControlRate_set)(uint32 , rtk_port_t , rtk_rate_storm_group_t , uint32 );
    int32   (*rate_stormControlProtoRate_get)(uint32 , rtk_port_t , rtk_rate_storm_proto_group_t , uint32 *);
    int32   (*rate_stormControlProtoRate_set)(uint32 , rtk_port_t , rtk_rate_storm_proto_group_t , uint32 );
    int32   (*rate_stormControlEnable_get)(uint32 , rtk_port_t , rtk_rate_storm_group_t , rtk_enable_t *);
    int32   (*rate_stormControlEnable_set)(uint32 , rtk_port_t , rtk_rate_storm_group_t , rtk_enable_t );
    int32   (*rate_portStormControlRateMode_get)(uint32 , rtk_port_t , rtk_rate_storm_group_t , rtk_rate_storm_rateMode_t *);
    int32   (*rate_portStormControlRateMode_set)(uint32 , rtk_port_t , rtk_rate_storm_group_t , rtk_rate_storm_rateMode_t );
    int32   (*rate_stormControlRateMode_get)(uint32 , rtk_rate_storm_rateMode_t *);
    int32   (*rate_stormControlRateMode_set)(uint32 , rtk_rate_storm_rateMode_t );
    int32   (*rate_portStormControlBurstSize_get)(uint32 , rtk_port_t , rtk_rate_storm_group_t , uint32 *);
    int32   (*rate_portStormControlBurstSize_set)(uint32 , rtk_port_t , rtk_rate_storm_group_t , uint32 );
    int32   (*rate_stormControlBurstSize_get)(uint32 , rtk_rate_storm_group_t , uint32 *);
    int32   (*rate_stormControlBurstSize_set)(uint32 , rtk_rate_storm_group_t , uint32);
    int32   (*rate_stormControlIncludeIfg_get)(uint32 , rtk_enable_t *);
    int32   (*rate_stormControlIncludeIfg_set)(uint32 , rtk_enable_t );
    int32   (*rate_stormControlExceed_get)(uint32 , rtk_port_t , rtk_rate_storm_group_t , uint32 *);
    int32   (*rate_stormControlExceed_reset)(uint32 , rtk_port_t , rtk_rate_storm_group_t);
    int32   (*rate_stormControlProtoExceed_get)(uint32 , rtk_port_t , rtk_rate_storm_proto_group_t , uint32 *);
    int32   (*rate_stormControlProtoExceed_reset)(uint32 , rtk_port_t , rtk_rate_storm_proto_group_t);
    int32   (*rate_igrBandwidthFCOffRate_set)(uint32 , uint32 );
    int32   (*rate_stormControlRefreshMode_get)(uint32 , rtk_rate_storm_rateMode_t *);
    int32   (*rate_stormControlRefreshMode_set)(uint32 , rtk_rate_storm_rateMode_t );
    int32   (*rate_stormControlTypeSel_get)(uint32 , rtk_port_t , rtk_rate_storm_group_t , rtk_rate_storm_sel_t *);
    int32   (*rate_stormControlTypeSel_set)(uint32 , rtk_port_t , rtk_rate_storm_group_t , rtk_rate_storm_sel_t );
    int32   (*rate_stormControlBypass_get)(uint32 , rtk_rate_storm_bypassType_t , rtk_enable_t *);
    int32   (*rate_stormControlBypass_set)(uint32 , rtk_rate_storm_bypassType_t , rtk_enable_t );
    int32   (*rate_igrQueueBwCtrlEnable_get)(uint32, rtk_port_t, rtk_qid_t, rtk_enable_t *);
    int32   (*rate_igrQueueBwCtrlEnable_set)(uint32, rtk_port_t, rtk_qid_t, rtk_enable_t);
    int32   (*rate_igrQueueBwCtrlRate_get)(uint32, rtk_port_t, rtk_qid_t, uint32 *);
    int32   (*rate_igrQueueBwCtrlRate_set)(uint32, rtk_port_t, rtk_qid_t, uint32);
    int32   (*rate_igrQueueBwCtrlExceed_get)(uint32, rtk_port_t, rtk_qid_t, uint32 *);
    int32   (*rate_igrQueueBwCtrlExceed_reset)(uint32, rtk_port_t, rtk_qid_t);
    int32   (*rate_igrPortBwCtrlBurstSize_get)(uint32, uint32 *);
    int32   (*rate_igrPortBwCtrlBurstSize_set)(uint32, uint32);
    int32   (*rate_igrQueueBwCtrlBurstSize_get)(uint32, uint32 *);
    int32   (*rate_igrQueueBwCtrlBurstSize_set)(uint32, uint32);
    int32   (*rate_egrPortBwCtrlBurstSize_get)(uint32, uint32 *);
    int32   (*rate_egrPortBwCtrlBurstSize_set)(uint32, uint32);
    int32   (*rate_egrQueueBwCtrlBurstSize_get)(uint32, uint32 *);
    int32   (*rate_egrQueueBwCtrlBurstSize_set)(uint32, uint32);

    /* qos API */
    int32   (*qos_init)(uint32 , uint32 );
    int32   (*qos_priSel_get)(uint32 , rtk_pri_t *, rtk_pri_t *, rtk_pri_t *, rtk_pri_t *);
    int32   (*qos_priSel_set)(uint32 , rtk_pri_t , rtk_pri_t , rtk_pri_t , rtk_pri_t );
    int32   (*qos_priSelGroup_get)(uint32 , uint32 , rtk_qos_priSelWeight_t *);
    int32   (*qos_priSelGroup_set)(uint32 , uint32 , rtk_qos_priSelWeight_t *);
    int32   (*qos_portPriSelGroup_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*qos_portPriSelGroup_set)(uint32 , rtk_port_t , uint32 );
    int32   (*qos_portPri_get)(uint32 , rtk_port_t , rtk_pri_t *);
    int32   (*qos_portPri_set)(uint32 , rtk_port_t , rtk_pri_t );
    int32   (*qos_portDp_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*qos_portDp_set)(uint32 , rtk_port_t , uint32 );
    int32   (*qos_dpSrcSel_get)(uint32 , rtk_qos_dpSrc_t * );
    int32   (*qos_dpSrcSel_set)(uint32 , rtk_qos_dpSrc_t );
    int32   (*qos_portDEISrcSel_get)(uint32 , rtk_port_t , rtk_qos_deiSel_t * );
    int32   (*qos_portDEISrcSel_set)(uint32 , rtk_port_t , rtk_qos_deiSel_t );
    int32   (*qos_deiDpRemap_get)(uint32 , uint32 , uint32 * );
    int32   (*qos_deiDpRemap_set)(uint32 , uint32 , uint32 );
    int32   (*qos_dscpDpRemap_get)(uint32 , uint32 , uint32 * );
    int32   (*qos_dscpDpRemap_set)(uint32 , uint32 , uint32 );
    int32   (*qos_portInnerPri_get)(uint32 , rtk_port_t , rtk_pri_t *);
    int32   (*qos_portInnerPri_set)(uint32 , rtk_port_t , rtk_pri_t );
    int32   (*qos_portOuterPri_get)(uint32 , rtk_port_t , rtk_pri_t *);
    int32   (*qos_portOuterPri_set)(uint32 , rtk_port_t , rtk_pri_t );
    int32   (*qos_portOuterDEI_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*qos_portOuterDEI_set)(uint32 , rtk_port_t , uint32 );
    int32   (*qos_dscpPriRemap_get)(uint32 , uint32 , rtk_pri_t *);
    int32   (*qos_dscpPriRemap_set)(uint32 , uint32 , rtk_pri_t );
    int32   (*qos_dscpPriRemapGroup_get)(uint32 , uint32 , uint32 , rtk_pri_t *, uint32 *);
    int32   (*qos_dscpPriRemapGroup_set)(uint32 , uint32 , uint32 , rtk_pri_t , uint32 );
    int32   (*qos_portDscpPriRemapGroup_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*qos_portDscpPriRemapGroup_set)(uint32 , rtk_port_t , uint32 );
    int32   (*qos_1pPriRemap_get)(uint32 , rtk_pri_t , rtk_pri_t *);
    int32   (*qos_1pPriRemap_set)(uint32 , rtk_pri_t , rtk_pri_t );
    int32   (*qos_1pPriRemapGroup_get)(uint32 , uint32 , rtk_pri_t , rtk_pri_t *, uint32 *);
    int32   (*qos_1pPriRemapGroup_set)(uint32 , uint32 , rtk_pri_t , rtk_pri_t , uint32 );
    int32   (*qos_port1pPriRemapGroup_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*qos_port1pPriRemapGroup_set)(uint32 , rtk_port_t , uint32 );
    int32   (*qos_outer1pPriRemap_get)(uint32 , rtk_pri_t , uint32 , rtk_pri_t *);
    int32   (*qos_outer1pPriRemap_set)(uint32 , rtk_pri_t , uint32 , rtk_pri_t );
    int32   (*qos_outer1pPriRemapGroup_get)(uint32 , uint32 , rtk_pri_t , uint32 , rtk_pri_t *, uint32 *);
    int32   (*qos_outer1pPriRemapGroup_set)(uint32 , uint32 , rtk_pri_t , uint32 , rtk_pri_t , uint32 );
    int32   (*qos_portOuter1pPriRemapGroup_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*qos_portOuter1pPriRemapGroup_set)(uint32 , rtk_port_t , uint32 );
    int32   (*qos_queueNum_get)(uint32 , uint32 *);
    int32   (*qos_queueNum_set)(uint32 , uint32 );
    int32   (*qos_priMap_get)(uint32 , uint32 , rtk_qos_pri2queue_t *);
    int32   (*qos_priMap_set)(uint32 , uint32 , rtk_qos_pri2queue_t *);
    int32   (*qos_portPriMap_get)(uint32 , rtk_port_t , rtk_pri_t , rtk_qid_t *) ;
    int32   (*qos_portPriMap_set)(uint32 , rtk_port_t , rtk_pri_t , rtk_qid_t );
    int32   (*qos_1pDfltPri_get)(uint32 , rtk_pri_t *);
    int32   (*qos_1pDfltPri_set)(uint32 , rtk_pri_t );
    int32   (*qos_1pRemarkEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*qos_1pRemarkEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*qos_1pRemark_get)(uint32 , rtk_pri_t , rtk_pri_t *);
    int32   (*qos_1pRemark_set)(uint32 , rtk_pri_t , rtk_pri_t );
    int32   (*qos_1pRemarkGroup_get)(uint32 , uint32 , rtk_pri_t , uint32 , rtk_pri_t *);
    int32   (*qos_1pRemarkGroup_set)(uint32 , uint32 , rtk_pri_t , uint32 , rtk_pri_t );
    int32   (*qos_1pRemarkSrcSel_get)(uint32 , rtk_qos_1pRmkSrc_t *);
    int32   (*qos_1pRemarkSrcSel_set)(uint32 , rtk_qos_1pRmkSrc_t );
    int32   (*qos_port1pRemarkGroup_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*qos_port1pRemarkGroup_set)(uint32 , rtk_port_t , uint32 );
    int32   (*qos_port1pPriMapGroup_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*qos_port1pPriMapGroup_set)(uint32 , rtk_port_t , uint32 );
    int32   (*qos_out1pRemarkEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*qos_out1pRemarkEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*qos_outer1pRemark_get)(uint32 , rtk_pri_t , rtk_pri_t *);
    int32   (*qos_outer1pRemark_set)(uint32 , rtk_pri_t , rtk_pri_t );
    int32   (*qos_outer1pRemarkGroup_get)(uint32 , uint32 , rtk_pri_t , uint32 , rtk_pri_t *, uint32 *);
    int32   (*qos_outer1pRemarkGroup_set)(uint32 , uint32 , rtk_pri_t , uint32 , rtk_pri_t , uint32);
    int32   (*qos_outer1pRemarkSrcSel_get)(uint32 , rtk_qos_outer1pRmkSrc_t *);
    int32   (*qos_outer1pRemarkSrcSel_set)(uint32 , rtk_qos_outer1pRmkSrc_t );
    int32   (*qos_portOuter1pDfltPriSrcSel_get)(uint32 , rtk_port_t , rtk_qos_outer1pDfltSrc_t *);
    int32   (*qos_portOuter1pDfltPriSrcSel_set)(uint32 , rtk_port_t , rtk_qos_outer1pDfltSrc_t );
    int32   (*qos_portOuter1pRemarkGroup_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*qos_portOuter1pRemarkGroup_set)(uint32 , rtk_port_t , uint32 );
    int32   (*qos_portOuter1pPriMapGroup_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*qos_portOuter1pPriMapGroup_set)(uint32 , rtk_port_t , uint32 );
    int32   (*qos_dscpRemarkEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*qos_dscpRemarkEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*qos_dscpRemark_get)(uint32 , rtk_pri_t , uint32 *);
    int32   (*qos_dscpRemark_set)(uint32 , rtk_pri_t , uint32 );
    int32   (*qos_dscp2Dot1pRemark_get)(uint32 , uint32 , rtk_pri_t *);
    int32   (*qos_dscp2Dot1pRemark_set)(uint32 , uint32 , rtk_pri_t );
    int32   (*qos_dscp2Outer1pRemark_get)(uint32 , uint32 , rtk_pri_t *);
    int32   (*qos_dscp2Outer1pRemark_set)(uint32 , uint32 , rtk_pri_t );
    int32   (*qos_dscp2DscpRemark_get)(uint32 , uint32 , uint32 *);
    int32   (*qos_dscp2DscpRemark_set)(uint32 , uint32 , uint32 );
    int32   (*qos_dscpRemarkGroup_get)(uint32 , uint32 , rtk_pri_t , uint32 , uint32 *);
    int32   (*qos_dscpRemarkGroup_set)(uint32 , uint32 , rtk_pri_t , uint32 , uint32 );
    int32   (*qos_dscpRemarkSrcSel_get)(uint32 , rtk_qos_dscpRmkSrc_t *);
    int32   (*qos_dscpRemarkSrcSel_set)(uint32 , rtk_qos_dscpRmkSrc_t );
    int32   (*qos_portdscpRemarkGroup_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*qos_portdscpRemarkGroup_set)(uint32 , rtk_port_t , uint32 );
    int32   (*qos_deiRemark_get)(uint32 , uint32 , uint32 *);
    int32   (*qos_deiRemark_set)(uint32 , uint32 , uint32 );
    int32   (*qos_deiRemarkEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*qos_deiRemarkEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*qos_portDEIRemarkTagSel_get)(uint32 , rtk_port_t , rtk_qos_deiSel_t *);
    int32   (*qos_portDEIRemarkTagSel_set)(uint32 , rtk_port_t , rtk_qos_deiSel_t );
    int32   (*qos_schedulingAlgorithm_get)(uint32 , rtk_port_t , rtk_qos_scheduling_type_t *);
    int32   (*qos_schedulingAlgorithm_set)(uint32 , rtk_port_t , rtk_qos_scheduling_type_t );
    int32   (*qos_schedulingQueue_get)(uint32 , rtk_port_t , rtk_qos_queue_weights_t *);
    int32   (*qos_schedulingQueue_set)(uint32 , rtk_port_t , rtk_qos_queue_weights_t *);
    int32   (*qos_wfqFixedBandwidthEnable_get)(uint32 , rtk_port_t , rtk_qid_t , rtk_enable_t *);
    int32   (*qos_wfqFixedBandwidthEnable_set)(uint32 , rtk_port_t , rtk_qid_t , rtk_enable_t );
    int32   (*qos_congAvoidAlgo_get)(uint32 , rtk_qos_congAvoidAlgo_t *);
    int32   (*qos_congAvoidAlgo_set)(uint32 , rtk_qos_congAvoidAlgo_t );
    int32   (*qos_congAvoidQueueThreshEnable_get)(uint32 , rtk_enable_t *);
    int32   (*qos_congAvoidQueueThreshEnable_set)(uint32 , rtk_enable_t );
    int32   (*qos_congAvoidPortThreshEnable_get)(uint32 , rtk_enable_t *);
    int32   (*qos_congAvoidPortThreshEnable_set)(uint32 , rtk_enable_t );
    int32   (*qos_congAvoidSysThreshEnable_get)(uint32 , rtk_enable_t *);
    int32   (*qos_congAvoidSysThreshEnable_set)(uint32 ,  rtk_enable_t );
    int32   (*qos_congAvoidSysThresh_get)(uint32 ,uint32 , rtk_qos_congAvoidThresh_t *);
    int32   (*qos_congAvoidSysThresh_set)(uint32 ,uint32 , rtk_qos_congAvoidThresh_t *);
    int32   (*qos_congAvoidSysDropProbability_get)(uint32 , uint32 , uint32 *);
    int32   (*qos_congAvoidSysDropProbability_set)(uint32 , uint32 , uint32 );
    int32   (*qos_congAvoidPortThresh_get)(uint32 ,rtk_port_t ,uint32 , rtk_qos_congAvoidThresh_t *);
    int32   (*qos_congAvoidPortThresh_set)(uint32 ,rtk_port_t ,uint32 , rtk_qos_congAvoidThresh_t *);
    int32   (*qos_congAvoidQueueThresh_get)(uint32 ,rtk_port_t , rtk_qid_t , rtk_qos_congAvoidThresh_t *);
    int32   (*qos_congAvoidQueueThresh_set)(uint32 ,rtk_port_t , rtk_qid_t , rtk_qos_congAvoidThresh_t *);
    int32   (*qos_congAvoidGlobalQueueThresh_get)(uint32 , rtk_qid_t , uint32 , rtk_qos_congAvoidThresh_t *);
    int32   (*qos_congAvoidGlobalQueueThresh_set)(uint32 , rtk_qid_t , uint32 , rtk_qos_congAvoidThresh_t *);
    int32   (*qos_congAvoidGlobalQueueDropProbability_get)(uint32 , rtk_qid_t , uint32 , uint32 *);
    int32   (*qos_congAvoidGlobalQueueDropProbability_set)(uint32 , rtk_qid_t , uint32 , uint32 );
    int32   (*qos_wredSysThresh_get)(uint32 , uint32 , rtk_qos_wredThresh_t *);
    int32   (*qos_wredSysThresh_set)(uint32 , uint32 , rtk_qos_wredThresh_t *);
    int32   (*qos_wredWeight_get)(uint32 , uint32 *);
    int32   (*qos_wredWeight_set)(uint32 , uint32 );
    int32   (*qos_wredMpd_get)(uint32 , uint32 *);
    int32   (*qos_wredMpd_set)(uint32 , uint32 );
    int32   (*qos_wredEcnEnable_get)(uint32 , rtk_enable_t *);
    int32   (*qos_wredEcnEnable_set)(uint32 , rtk_enable_t );
    int32   (*qos_wredCntReverseEnable_get)(uint32 , rtk_enable_t *);
    int32   (*qos_wredCntReverseEnable_set)(uint32 , rtk_enable_t );
    int32   (*qos_portAvbStreamReservationClassEnable_get)(uint32 , rtk_port_t , rtk_qos_avbSrClass_t , rtk_enable_t *);
    int32   (*qos_portAvbStreamReservationClassEnable_set)(uint32 , rtk_port_t , rtk_qos_avbSrClass_t , rtk_enable_t );
    int32   (*qos_avbStreamReservationConfig_get)(uint32 , rtk_qos_avbSrConf_t *);
    int32   (*qos_avbStreamReservationConfig_set)(uint32 , rtk_qos_avbSrConf_t *);
    int32   (*qos_pkt2CpuPriRemap_get)(uint32 , rtk_pri_t , rtk_pri_t *);
    int32   (*qos_pkt2CpuPriRemap_set)(uint32 , rtk_pri_t , rtk_pri_t );
    int32   (*qos_rspanPriRemap_get)(uint32 , rtk_pri_t , rtk_pri_t *);
    int32   (*qos_rspanPriRemap_set)(uint32 , rtk_pri_t  , rtk_pri_t );
    int32   (*qos_portPri2IgrQMapEnable_get)(uint32, rtk_port_t, rtk_enable_t*);
    int32   (*qos_portPri2IgrQMapEnable_set)(uint32, rtk_port_t, rtk_enable_t);
    int32   (*qos_portPri2IgrQMap_get)(uint32, rtk_port_t, rtk_qos_pri2queue_t *);
    int32   (*qos_portPri2IgrQMap_set)(uint32, rtk_port_t, rtk_qos_pri2queue_t *);
    int32   (*qos_1pDfltPriSrcSel_get)(uint32 , rtk_qos_1pDfltPriSrc_t *);
    int32   (*qos_1pDfltPriSrcSel_set)(uint32 , rtk_qos_1pDfltPriSrc_t );
    int32   (*qos_portOuter1pRemarkSrcSel_get)(uint32 , rtk_port_t , rtk_qos_outer1pRmkSrc_t *);
    int32   (*qos_portOuter1pRemarkSrcSel_set)(uint32 , rtk_port_t , rtk_qos_outer1pRmkSrc_t );
    int32   (*qos_outer1pDfltPri_get)(uint32 , rtk_pri_t *);
    int32   (*qos_outer1pDfltPri_set)(uint32 , rtk_pri_t );
    int32   (*qos_outer1pDfltPriCfgSrcSel_get)(uint32 , rtk_qos_outer1pDfltCfgSrc_t *);
    int32   (*qos_outer1pDfltPriCfgSrcSel_set)(uint32 , rtk_qos_outer1pDfltCfgSrc_t );
    int32   (*qos_igrQueueWeight_get)(uint32, rtk_port_t, rtk_qid_t, uint32*);
    int32   (*qos_igrQueueWeight_set)(uint32, rtk_port_t, rtk_qid_t, uint32);
    int32   (*qos_invldDscpVal_get)(uint32, uint32 *);
    int32   (*qos_invldDscpVal_set)(uint32, uint32 );
    int32   (*qos_invldDscpMask_get)(uint32, uint32 *) ;
    int32   (*qos_invldDscpMask_set)(uint32, uint32 ) ;
    int32   (*qos_portInvldDscpEnable_get)(uint32, rtk_port_t , rtk_enable_t *);
    int32   (*qos_portInvldDscpEnable_set)(uint32, rtk_port_t , rtk_enable_t ) ;
    int32   (*qos_invldDscpEnable_get)(uint32, rtk_enable_t *) ;
    int32   (*qos_invldDscpEnable_set)(uint32 , rtk_enable_t ) ;
    int32   (*qos_portPriRemapEnable_get)(uint32, rtk_enable_t *);
    int32   (*qos_portPriRemapEnable_set)(uint32, rtk_enable_t );
    int32   (*qos_portPriRemapSel_get)(uint32, rtk_qos_portPriRemapSel_t *);
    int32   (*qos_portPriRemapSel_set)(uint32, rtk_qos_portPriRemapSel_t );
    int32   (*qos_portInnerPriRemapEnable_get)(uint32, rtk_enable_t *);
    int32   (*qos_portInnerPriRemapEnable_set)(uint32, rtk_enable_t );
    int32   (*qos_portOuterPriRemapEnable_get)(uint32, rtk_enable_t *);
    int32   (*qos_portOuterPriRemapEnable_set)(uint32, rtk_enable_t );
    int32   (*qos_queueStrictEnable_get)(uint32, rtk_port_t, rtk_qid_t, rtk_enable_t *);
    int32   (*qos_queueStrictEnable_set)(uint32, rtk_port_t, rtk_qid_t, rtk_enable_t );

    /* TRAP API */
    int32   (*trap_init)(uint32 );
    int32   (*trap_1xMacChangePort2CpuEnable_get)(uint32 , rtk_enable_t *);
    int32   (*trap_1xMacChangePort2CpuEnable_set)(uint32 , rtk_enable_t );
    int32   (*trap_igmpCtrlPkt2CpuEnable_get)(uint32 , rtk_enable_t *);
    int32   (*trap_igmpCtrlPkt2CpuEnable_set)(uint32 , rtk_enable_t );
    int32   (*trap_l2McastPkt2CpuEnable_get)(uint32 , rtk_enable_t *);
    int32   (*trap_l2McastPkt2CpuEnable_set)(uint32 , rtk_enable_t );
    int32   (*trap_ipMcastPkt2CpuEnable_get)(uint32 , rtk_enable_t *);
    int32   (*trap_ipMcastPkt2CpuEnable_set)(uint32 , rtk_enable_t );
    int32   (*trap_reasonTrapToCPUPriority_get)(uint32 , rtk_trap_reason_type_t , rtk_pri_t *);
    int32   (*trap_reasonTrapToCPUPriority_set)(uint32 , rtk_trap_reason_type_t , rtk_pri_t );
    int32   (*trap_pkt2CpuEnable_get)(uint32 , rtk_trap_type_t , rtk_enable_t *);
    int32   (*trap_pkt2CpuEnable_set)(uint32 , rtk_trap_type_t , rtk_enable_t );
    int32   (*trap_rmaAction_get)(uint32 , rtk_mac_t *, rtk_trap_rma_action_t *);
    int32   (*trap_rmaAction_set)(uint32 , rtk_mac_t *, rtk_trap_rma_action_t );
    int32   (*trap_rmaGroupAction_get)(uint32 , rtk_trap_rmaGroup_frameType_t, rtk_trap_rma_action_t *);
    int32   (*trap_rmaGroupAction_set)(uint32 , rtk_trap_rmaGroup_frameType_t, rtk_trap_rma_action_t );
    int32   (*trap_rmaPri_get)(uint32 , rtk_mac_t *, rtk_pri_t *);
    int32   (*trap_rmaPri_set)(uint32 , rtk_mac_t *, rtk_pri_t );
    int32   (*trap_rmaPriEnable_get)(uint32 , rtk_mac_t *, rtk_enable_t *);
    int32   (*trap_rmaPriEnable_set)(uint32 , rtk_mac_t *, rtk_enable_t );
    int32   (*trap_rmaCpuTagAddEnable_get)(uint32 , rtk_enable_t *);
    int32   (*trap_rmaCpuTagAddEnable_set)(uint32 , rtk_enable_t );
    int32   (*trap_rmaVlanCheckEnable_get)(uint32 , rtk_mac_t *, rtk_enable_t *);
    int32   (*trap_rmaVlanCheckEnable_set)(uint32 , rtk_mac_t *, rtk_enable_t );
    int32   (*trap_rmaLearningEnable_get)(uint32 , rtk_mac_t *, rtk_enable_t *);
    int32   (*trap_rmaLearningEnable_set)(uint32 , rtk_mac_t *, rtk_enable_t );
    int32   (*trap_rmaGroupLearningEnable_get)(uint32 , rtk_trap_rmaGroup_frameType_t, rtk_enable_t *);
    int32   (*trap_rmaGroupLearningEnable_set)(uint32 , rtk_trap_rmaGroup_frameType_t, rtk_enable_t );
    int32   (*trap_bypassStp_get)(uint32 , rtk_trap_bypassStpType_t , rtk_enable_t *);
    int32   (*trap_bypassStp_set)(uint32 , rtk_trap_bypassStpType_t , rtk_enable_t );
    int32   (*trap_bypassVlan_get)(uint32 , rtk_trap_bypassVlanType_t , rtk_enable_t *);
    int32   (*trap_bypassVlan_set)(uint32 , rtk_trap_bypassVlanType_t , rtk_enable_t );
    int32   (*trap_userDefineRma_get)(uint32 , uint32 , rtk_trap_userDefinedRma_t *);
    int32   (*trap_userDefineRma_set)(uint32 , uint32 , rtk_trap_userDefinedRma_t *);
    int32   (*trap_userDefineRmaEnable_get)(uint32 , uint32 , rtk_enable_t *);
    int32   (*trap_userDefineRmaEnable_set)(uint32 , uint32 , rtk_enable_t );
    int32   (*trap_userDefineRmaAction_get)(uint32 , uint32 , rtk_trap_rma_action_t *);
    int32   (*trap_userDefineRmaAction_set)(uint32 , uint32 , rtk_trap_rma_action_t );
    int32   (*trap_userDefineRmaPri_get)(uint32 , uint32 , rtk_pri_t *);
    int32   (*trap_userDefineRmaPri_set)(uint32 , uint32 , rtk_pri_t );
    int32   (*trap_userDefineRmaPriEnable_get)(uint32 , uint32 , rtk_enable_t *);
    int32   (*trap_userDefineRmaPriEnable_set)(uint32 , uint32 , rtk_enable_t );
    int32   (*trap_userDefineRmaVlanCheckEnable_get)(uint32 , uint32 , rtk_enable_t *);
    int32   (*trap_userDefineRmaVlanCheckEnable_set)(uint32 , uint32 , rtk_enable_t );
    int32   (*trap_userDefineRmaStpBlockEnable_get)(uint32 , uint32 , rtk_enable_t *);
    int32   (*trap_userDefineRmaStpBlockEnable_set)(uint32 , uint32 , rtk_enable_t );
    int32   (*trap_userDefineRmaLearningEnable_get)(uint32 , uint32 , rtk_enable_t *);
    int32   (*trap_userDefineRmaLearningEnable_set)(uint32 , uint32 , rtk_enable_t );
    int32   (*trap_mgmtFrameAction_get)(uint32 , rtk_trap_mgmtType_t , rtk_action_t *);
    int32   (*trap_mgmtFrameAction_set)(uint32 , rtk_trap_mgmtType_t , rtk_action_t );
    int32   (*trap_mgmtFramePri_get)(uint32 , rtk_trap_mgmtType_t , rtk_pri_t *);
    int32   (*trap_mgmtFramePri_set)(uint32 , rtk_trap_mgmtType_t , rtk_pri_t );
    int32   (*trap_mgmtFramePriEnable_get)(uint32 , rtk_trap_mgmtType_t , rtk_enable_t *);
    int32   (*trap_mgmtFramePriEnable_set)(uint32 , rtk_trap_mgmtType_t , rtk_enable_t );
    int32   (*trap_mgmtFrameVlanCheck_get)(uint32 , rtk_trap_mgmtType_t , rtk_enable_t *);
    int32   (*trap_mgmtFrameVlanCheck_set)(uint32 , rtk_trap_mgmtType_t , rtk_enable_t );
    int32   (*trap_mgmtFrameLearningEnable_get)(uint32 , rtk_trap_mgmtType_t , rtk_enable_t *);
    int32   (*trap_mgmtFrameLearningEnable_set)(uint32 , rtk_trap_mgmtType_t , rtk_enable_t );
    int32   (*trap_userDefineMgmt_get)(uint32 , uint32 , rtk_trap_userDefinedMgmt_t *);
    int32   (*trap_userDefineMgmt_set)(uint32 , uint32 , rtk_trap_userDefinedMgmt_t *);
    int32   (*trap_userDefineMgmtAction_get)(uint32 , uint32 , rtk_action_t *);
    int32   (*trap_userDefineMgmtAction_set)(uint32 , uint32 , rtk_action_t );
    int32   (*trap_userDefineMgmtPri_get)(uint32 , uint32 , rtk_pri_t *);
    int32   (*trap_userDefineMgmtPri_set)(uint32 , uint32 , rtk_pri_t );
    int32   (*trap_userDefineMgmtPriEnable_get)(uint32 , uint32 , rtk_enable_t *);
    int32   (*trap_userDefineMgmtPriEnable_set)(uint32 , uint32 , rtk_enable_t );
    int32   (*trap_userDefineMgmtVlanCheck_get)(uint32 , uint32 , rtk_enable_t *);
    int32   (*trap_userDefineMgmtVlanCheck_set)(uint32 , uint32 , rtk_enable_t );
    int32   (*trap_portMgmtFrameAction_get)(uint32 , rtk_port_t , rtk_trap_mgmtType_t , rtk_action_t *);
    int32   (*trap_portMgmtFrameAction_set)(uint32 , rtk_port_t , rtk_trap_mgmtType_t , rtk_action_t );
    int32   (*trap_portMgmtFramePri_get)(uint32 , rtk_port_t , rtk_trap_mgmtType_t , rtk_pri_t *);
    int32   (*trap_portMgmtFramePri_set)(uint32 , rtk_port_t , rtk_trap_mgmtType_t , rtk_pri_t );
    int32   (*trap_portMgmtFramePriEnable_get)(uint32 , rtk_port_t , rtk_trap_mgmtType_t , rtk_enable_t *);
    int32   (*trap_portMgmtFramePriEnable_set)(uint32 , rtk_port_t , rtk_trap_mgmtType_t , rtk_enable_t );
    int32   (*trap_portMgmtFrameVlanCheck_get)(uint32 , rtk_port_t , rtk_trap_mgmtType_t , rtk_enable_t *);
    int32   (*trap_portMgmtFrameVlanCheck_set)(uint32 , rtk_port_t , rtk_trap_mgmtType_t , rtk_enable_t );
    int32   (*trap_portMgmtFrameCrossVlan_get)(uint32 , rtk_port_t , rtk_trap_mgmtType_t , rtk_enable_t *);
    int32   (*trap_portMgmtFrameCrossVlan_set)(uint32 , rtk_port_t , rtk_trap_mgmtType_t , rtk_enable_t );
    int32   (*trap_ipWithOptionHeaderAction_get)(uint32 , rtk_port_t , rtk_ip_family_t , rtk_action_t *);
    int32   (*trap_ipWithOptionHeaderAction_set)(uint32 , rtk_port_t , rtk_ip_family_t , rtk_action_t );
    int32   (*trap_ipWithOptionHeaderPri_get)(uint32 , rtk_port_t , rtk_pri_t *);
    int32   (*trap_ipWithOptionHeaderPri_set)(uint32 , rtk_port_t , rtk_pri_t );
    int32   (*trap_ipWithOptionHeaderPriEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*trap_ipWithOptionHeaderPriEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*trap_ipWithOptionHeaderAddCPUTagEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*trap_ipWithOptionHeaderAddCPUTagEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*trap_pktWithCFIAction_get)(uint32 , rtk_action_t *);
    int32   (*trap_pktWithCFIAction_set)(uint32 , rtk_action_t);
    int32   (*trap_pktWithOuterCFIAction_get)(uint32 , rtk_action_t *);
    int32   (*trap_pktWithOuterCFIAction_set)(uint32 , rtk_action_t);
    int32   (*trap_portPktWithCFIAction_get)(uint32 , rtk_port_t , rtk_action_t *);
    int32   (*trap_portPktWithCFIAction_set)(uint32 , rtk_port_t , rtk_action_t );
    int32   (*trap_pktWithCFIPri_get)(uint32 , rtk_pri_t *);
    int32   (*trap_pktWithCFIPri_set)(uint32 , rtk_pri_t );
    int32   (*trap_portPktWithCFIPri_get)(uint32 , rtk_port_t , rtk_pri_t *);
    int32   (*trap_portPktWithCFIPri_set)(uint32 , rtk_port_t , rtk_pri_t );
    int32   (*trap_pktWithCFIPriEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*trap_pktWithCFIPriEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*trap_pktWithCFIAddCPUTagEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*trap_pktWithCFIAddCPUTagEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*trap_cfmFrameAction_get)(uint32 , uint32 , rtk_action_t *);
    int32   (*trap_cfmFrameAction_set)(uint32 , uint32 , rtk_action_t );
    int32   (*trap_cfmUnknownFrameAct_get)(uint32 , rtk_action_t *);
    int32   (*trap_cfmUnknownFrameAct_set)(uint32 , rtk_action_t );
    int32   (*trap_cfmLoopbackAct_get)(uint32 , uint32 , rtk_action_t *);
    int32   (*trap_cfmLoopbackAct_set)(uint32 , uint32 , rtk_action_t );
    int32   (*trap_cfmCcmAct_get)(uint32 , uint32 , rtk_trap_oam_action_t *);
    int32   (*trap_cfmCcmAct_set)(uint32 , uint32 , rtk_trap_oam_action_t );
    int32   (*trap_cfmEthDmAct_get)(uint32 , uint32 , rtk_action_t *);
    int32   (*trap_cfmEthDmAct_set)(uint32 , uint32 , rtk_action_t );
    int32   (*trap_cfmFrameTrapPri_get)(uint32 , rtk_pri_t *);
    int32   (*trap_cfmFrameTrapPri_set)(uint32 , rtk_pri_t );
    int32   (*trap_cfmFrameTrapPriEnable_get)(uint32 , rtk_enable_t *);
    int32   (*trap_cfmFrameTrapPriEnable_set)(uint32 , rtk_enable_t );
    int32   (*trap_cfmFrameTrapAddCPUTagEnable_get)(uint32 , rtk_enable_t *);
    int32   (*trap_cfmFrameTrapAddCPUTagEnable_set)(uint32 , rtk_enable_t );
    int32   (*trap_portOamPDUAction_get)(uint32 , rtk_port_t , rtk_action_t *);
    int32   (*trap_portOamPDUAction_set)(uint32 , rtk_port_t , rtk_action_t );
    int32   (*trap_portOamPDUPri_get)(uint32 , rtk_port_t , rtk_pri_t *);
    int32   (*trap_portOamPDUPri_set)(uint32 , rtk_port_t , rtk_pri_t );
    int32   (*trap_oamPDUAction_get)(uint32 , rtk_action_t *);
    int32   (*trap_oamPDUAction_set)(uint32 , rtk_action_t );
    int32   (*trap_oamPDUPri_get)(uint32 , rtk_pri_t *);
    int32   (*trap_oamPDUPri_set)(uint32 , rtk_pri_t );
    int32   (*trap_oamPDUPriEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*trap_oamPDUPriEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*trap_oamPDUTrapAddCPUTagEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*trap_oamPDUTrapAddCPUTagEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*trap_mgmtIpCheck_get)(uint32 , rtk_trap_mgmtIpType_t , rtk_enable_t *);
    int32   (*trap_mgmtIpCheck_set)(uint32 , rtk_trap_mgmtIpType_t , rtk_enable_t);
    int32   (*trap_portOamLoopbackParAction_get)(uint32 , rtk_port_t, rtk_trap_oam_action_t *);
    int32   (*trap_portOamLoopbackParAction_set)(uint32 , rtk_port_t, rtk_trap_oam_action_t);
    int32   (*trap_routeExceptionAction_get)(uint32 , rtk_trap_routeExceptionType_t , rtk_action_t *);
    int32   (*trap_routeExceptionAction_set)(uint32 , rtk_trap_routeExceptionType_t , rtk_action_t);
    int32   (*trap_routeExceptionPri_get)(uint32 , rtk_trap_routeExceptionType_t , rtk_pri_t *);
    int32   (*trap_routeExceptionPri_set)(uint32 , rtk_trap_routeExceptionType_t , rtk_pri_t);
    int32   (*trap_mgmtFrameMgmtVlanEnable_get)(uint32, rtk_enable_t *);
    int32   (*trap_mgmtFrameMgmtVlanEnable_set)(uint32, rtk_enable_t);
    int32   (*trap_mgmtFrameSelfARPEnable_get)(uint32, rtk_enable_t *);
    int32   (*trap_mgmtFrameSelfARPEnable_set)(uint32, rtk_enable_t);
    int32   (*trap_bpduFloodPortmask_get)(uint32,  rtk_portmask_t *);
    int32   (*trap_bpduFloodPortmask_set)(uint32,  rtk_portmask_t *);
    int32   (*trap_rmaLookupMissActionEnable_get)(uint32, rtk_enable_t *);
    int32   (*trap_rmaLookupMissActionEnable_set)(uint32, rtk_enable_t);

    /* Stat API */
    int32   (*stat_init)(uint32 );
    int32   (*stat_enable_get)(uint32 , rtk_enable_t *);
    int32   (*stat_enable_set)(uint32 , rtk_enable_t );
    int32   (*stat_global_reset)(uint32 );
    int32   (*stat_port_reset)(uint32 , rtk_port_t );
    int32   (*stat_global_get)(uint32 , rtk_stat_global_type_t , uint64 *);
    int32   (*stat_global_getAll)(uint32 , rtk_stat_global_cntr_t *);
    int32   (*stat_port_get)(uint32 , rtk_port_t , rtk_stat_port_type_t , uint64 *);
    int32   (*stat_port_getAll)(uint32 , rtk_port_t , rtk_stat_port_cntr_t *);
    int32   (*stat_smon_get)(uint32 , rtk_pri_t , rtk_stat_smon_type_t ,  uint64 *);
    int32   (*stat_smon_getAll)(uint32 , rtk_pri_t , rtk_stat_smon_cntr_t *);
    int32   (*stat_tagLenCntIncEnable_get)(uint32 , rtk_stat_tagCnt_type_t , rtk_enable_t *);
    int32   (*stat_tagLenCntIncEnable_set)(uint32 , rtk_stat_tagCnt_type_t , rtk_enable_t );

    /* Switch API */
    int32   (*switch_init)(uint32 );
    int32   (*switch_cpuMaxPktLen_get)(uint32 , rtk_switch_pktDir_t , uint32 *);
    int32   (*switch_cpuMaxPktLen_set)(uint32 , rtk_switch_pktDir_t, uint32 );
    int32   (*switch_maxPktLen_get)(uint32 , rtk_switch_maxPktLen_t *);
    int32   (*switch_maxPktLen_set)(uint32 , rtk_switch_maxPktLen_t );
    int32   (*switch_maxPktLenLinkSpeed_get)(uint32 , rtk_switch_maxPktLen_linkSpeed_t , uint32 *);
    int32   (*switch_maxPktLenLinkSpeed_set)(uint32 , rtk_switch_maxPktLen_linkSpeed_t , uint32 );
    int32   (*switch_maxPktLenTagLenCntIncEnable_get)(uint32 , rtk_enable_t *);
    int32   (*switch_maxPktLenTagLenCntIncEnable_set)(uint32 , rtk_enable_t );
    int32   (*switch_portMaxPktLen_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*switch_portMaxPktLen_set)(uint32 , rtk_port_t , uint32 );
    int32   (*switch_snapMode_get)(uint32 , rtk_snapMode_t *);
    int32   (*switch_snapMode_set)(uint32 , rtk_snapMode_t );
    int32   (*switch_portSnapMode_get)(uint32 , rtk_port_t , rtk_snapMode_t *);
    int32   (*switch_portSnapMode_set)(uint32 , rtk_port_t , rtk_snapMode_t );
    int32   (*switch_chksumFailAction_get)(uint32 , rtk_port_t , rtk_switch_chksum_fail_t , rtk_action_t *);
    int32   (*switch_chksumFailAction_set)(uint32 , rtk_port_t , rtk_switch_chksum_fail_t , rtk_action_t );
    int32   (*switch_recalcCRCEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*switch_recalcCRCEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*switch_mgmtVlanId_get)(uint32 , rtk_vlan_t *);
    int32   (*switch_mgmtVlanId_set)(uint32 , rtk_vlan_t );
    int32   (*switch_outerMgmtVlanId_get)(uint32 , rtk_vlan_t *);
    int32   (*switch_outerMgmtVlanId_set)(uint32 , rtk_vlan_t );
    int32   (*switch_mgmtMacAddr_get)(uint32 , rtk_mac_t *);
    int32   (*switch_mgmtMacAddr_set)(uint32 , rtk_mac_t *);
    int32   (*switch_IPv4Addr_get)(uint32 , uint32 *);
    int32   (*switch_IPv4Addr_set)(uint32 , uint32 );
    int32   (*switch_IPv6Addr_get)(uint32 , rtk_ipv6_addr_t *);
    int32   (*switch_IPv6Addr_set)(uint32 , rtk_ipv6_addr_t );
    int32   (*switch_hwInterfaceDelayEnable_get)(uint32 , rtk_switch_delayType_t , rtk_enable_t *);
    int32   (*switch_hwInterfaceDelayEnable_set)(uint32 , rtk_switch_delayType_t , rtk_enable_t);
    int32   (*switch_pkt2CpuFormat_get)(uint32 , rtk_pktFormat_t *);
    int32   (*switch_pkt2CpuFormat_set)(uint32 , rtk_pktFormat_t);
    int32   (*switch_softwareResetCounter_get)(uint32 , uint32 *);
    int32   (*switch_pppoePassthrough_get)(uint32 , rtk_enable_t *);
    int32   (*switch_pppoePassthrough_set)(uint32 , rtk_enable_t );
    int32   (*switch_pkt2CpuTypeFormat_get)(uint32, rtk_switch_pkt2CpuType_t, rtk_pktFormat_t *);
    int32   (*switch_pkt2CpuTypeFormat_set)(uint32, rtk_switch_pkt2CpuType_t, rtk_pktFormat_t);
    int32   (*switch_cpuPktTruncateEnable_get)(uint32 , rtk_enable_t *);
    int32   (*switch_cpuPktTruncateEnable_set)(uint32 , rtk_enable_t );
    int32   (*switch_cpuPktTruncateLen_get)(uint32 , uint32 *);
    int32   (*switch_cpuPktTruncateLen_set)(uint32 , uint32 );

    /* DOT1X API */
    int32   (*dot1x_init)(uint32 );
    int32   (*dot1x_unauthPacketOper_get)(uint32 , rtk_dot1x_unauth_action_t *);
    int32   (*dot1x_unauthPacketOper_set)(uint32 , rtk_dot1x_unauth_action_t );
    int32   (*dot1x_portUnauthPacketOper_get)(uint32 , rtk_port_t port, rtk_dot1x_unauth_action_t *);
    int32   (*dot1x_portUnauthPacketOper_set)(uint32 , rtk_port_t port, rtk_dot1x_unauth_action_t );
    int32   (*dot1x_portUnauthTagPacketOper_get)(uint32 , rtk_port_t , rtk_dot1x_unauth_action_t *);
    int32   (*dot1x_portUnauthTagPacketOper_set)(uint32 , rtk_port_t , rtk_dot1x_unauth_action_t );
    int32   (*dot1x_portUnauthUntagPacketOper_get)(uint32 , rtk_port_t , rtk_dot1x_unauth_action_t *);
    int32   (*dot1x_portUnauthUntagPacketOper_set)(uint32 , rtk_port_t , rtk_dot1x_unauth_action_t );
    int32   (*dot1x_eapolFrame2CpuEnable_get)(uint32 , rtk_enable_t *);
    int32   (*dot1x_eapolFrame2CpuEnable_set)(uint32 , rtk_enable_t );
    int32   (*dot1x_portBasedEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*dot1x_portBasedEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*dot1x_portBasedAuthStatus_get)(uint32 , rtk_port_t , rtk_dot1x_auth_status_t *);
    int32   (*dot1x_portBasedAuthStatus_set)(uint32 , rtk_port_t , rtk_dot1x_auth_status_t );
    int32   (*dot1x_portBasedDirection_get)(uint32 , rtk_port_t , rtk_dot1x_direction_t *);
    int32   (*dot1x_portBasedDirection_set)(uint32 , rtk_port_t , rtk_dot1x_direction_t );
    int32   (*dot1x_macBasedEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*dot1x_macBasedEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*dot1x_macBasedAuthMac_add)(uint32 , rtk_port_t , rtk_vlan_t , rtk_mac_t *);
    int32   (*dot1x_macBasedAuthMac_del)(uint32 , rtk_port_t , rtk_vlan_t , rtk_mac_t *);
    int32   (*dot1x_macBasedDirection_get)(uint32 , rtk_dot1x_direction_t *);
    int32   (*dot1x_macBasedDirection_set)(uint32 , rtk_dot1x_direction_t );
    int32   (*dot1x_portGuestVlan_get)(uint32 , rtk_port_t , rtk_vlan_t *);
    int32   (*dot1x_portGuestVlan_set)(uint32 , rtk_port_t , rtk_vlan_t );
    int32   (*dot1x_guestVlanBehavior_get)(uint32 , rtk_dot1x_guestVlanBehavior_t *);
    int32   (*dot1x_guestVlanBehavior_set)(uint32 , rtk_dot1x_guestVlanBehavior_t );
    int32   (*dot1x_guestVlanRouteBehavior_get)(uint32 , rtk_action_t *);
    int32   (*dot1x_guestVlanRouteBehavior_set)(uint32 , rtk_action_t );
    int32   (*dot1x_trapPri_get)(uint32 , rtk_pri_t *);
    int32   (*dot1x_trapPri_set)(uint32 , rtk_pri_t );
    int32   (*dot1x_trapPriEnable_get)(uint32 , rtk_enable_t *);
    int32   (*dot1x_trapPriEnable_set)(uint32 , rtk_enable_t );
    int32   (*dot1x_trapAddCPUTagEnable_get)(uint32 , rtk_enable_t *);
    int32   (*dot1x_trapAddCPUTagEnable_set)(uint32 , rtk_enable_t );

    /* MIRROR API */
    int32   (*mirror_init)(uint32 );
    int32   (*mirror_portBased_create)(uint32 , rtk_port_t );
    int32   (*mirror_portBased_destroy)(uint32 , rtk_port_t );
    int32   (*mirror_portBased_destroyAll)(uint32 );
    int32   (*mirror_portBased_get)(uint32 , rtk_port_t , rtk_portmask_t *, rtk_portmask_t *);
    int32   (*mirror_portBased_set)(uint32 , rtk_port_t , rtk_portmask_t *, rtk_portmask_t *);
    int32   (*mirror_group_init)(uint32 , rtk_mirror_entry_t *);
    int32   (*mirror_group_get)(uint32 , uint32 , rtk_mirror_entry_t *);
    int32   (*mirror_group_set)(uint32 , uint32 , rtk_mirror_entry_t *);
    int32   (*mirror_egrMode_get)(uint32 , rtk_port_t , rtk_mirror_egrMode_t *);
    int32   (*mirror_egrMode_set)(uint32 , rtk_port_t , rtk_mirror_egrMode_t );
    int32   (*mirror_portRspanIgrMode_get)(uint32 , rtk_port_t , rtk_mirror_rspanIgrMode_t *);
    int32   (*mirror_portRspanIgrMode_set)(uint32 , rtk_port_t , rtk_mirror_rspanIgrMode_t );
    int32   (*mirror_portRspanEgrMode_get)(uint32 , rtk_port_t , rtk_mirror_rspanEgrMode_t *);
    int32   (*mirror_portRspanEgrMode_set)(uint32 , rtk_port_t , rtk_mirror_rspanEgrMode_t );
    int32   (*mirror_rspanIgrMode_get)(uint32 , uint32 , rtk_mirror_rspanIgrMode_t *);
    int32   (*mirror_rspanIgrMode_set)(uint32 , uint32 , rtk_mirror_rspanIgrMode_t );
    int32   (*mirror_rspanEgrMode_get)(uint32 , uint32 , rtk_mirror_rspanEgrMode_t *);
    int32   (*mirror_rspanEgrMode_set)(uint32 , uint32 , rtk_mirror_rspanEgrMode_t );
    int32   (*mirror_rspanIgrTag_get)(uint32 , rtk_port_t , rtk_mirror_rspanIgrTag_t *);
    int32   (*mirror_rspanIgrTag_set)(uint32 , rtk_port_t , rtk_mirror_rspanIgrTag_t *);
    int32   (*mirror_rspanEgrTag_get)(uint32 , rtk_port_t , rtk_mirror_rspanEgrTag_t *);
    int32   (*mirror_rspanEgrTag_set)(uint32 , rtk_port_t , rtk_mirror_rspanEgrTag_t *);
    int32   (*mirror_rspanTag_get)(uint32 , uint32 , rtk_mirror_rspanTag_t *);
    int32   (*mirror_rspanTag_set)(uint32 , uint32 , rtk_mirror_rspanTag_t *);
    int32   (*mirror_sflowMirrorSeed_get)(uint32 , uint32 *);
    int32   (*mirror_sflowMirrorSeed_set)(uint32 , uint32 );
    int32   (*mirror_sflowMirrorSampleEnable_get)(uint32 , uint32 , rtk_enable_t *);
    int32   (*mirror_sflowMirrorSampleEnable_set)(uint32 , uint32 , rtk_enable_t );
    int32   (*mirror_sflowMirrorSampleRate_get)(uint32 , uint32 , uint32 *);
    int32   (*mirror_sflowMirrorSampleRate_set)(uint32 , uint32 , uint32 );
    int32   (*mirror_sflowMirrorSampleStat_get)(uint32 , uint32 , rtk_mirror_sampleStat_t *);
    int32   (*mirror_sflowPortSeed_get)(uint32 , uint32 *);
    int32   (*mirror_sflowPortSeed_set)(uint32 , uint32 );
    int32   (*mirror_sflowPortIgrSampleEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*mirror_sflowPortIgrSampleEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*mirror_sflowPortIgrSampleRate_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*mirror_sflowPortIgrSampleRate_set)(uint32 , rtk_port_t , uint32 );
    int32   (*mirror_sflowPortEgrSampleEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*mirror_sflowPortEgrSampleEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*mirror_sflowPortEgrSampleRate_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*mirror_sflowPortEgrSampleRate_set)(uint32 , rtk_port_t , uint32 );
    int32   (*mirror_sflowAddCPUTagEnable_get)(uint32 , rtk_enable_t *);
    int32   (*mirror_sflowAddCPUTagEnable_set)(uint32 , rtk_enable_t );
    int32   (*mirror_sflowSampleCtrl_get)(uint32, rtk_sflowSampleCtrl_t *);
    int32   (*mirror_sflowSampleCtrl_set)(uint32, rtk_sflowSampleCtrl_t );

    /* filter API */
    int32   (*filter_blkCutline_get)(uint32 , uint32 *);
    int32   (*filter_blkCutline_set)(uint32 , uint32 );
    int32   (*filter_pieEnable_get) (uint32 , rtk_enable_t *);
    int32   (*filter_pieEnable_set) (uint32 , rtk_enable_t );
    int32   (*filter_init)(uint32 );
    int32   (*filter_patternMatch_get)(uint32 , rtk_port_t , rtk_filter_patternMatch_mode_t *, uint8 *, uint32 *);
    int32   (*filter_patternMatch_set)(uint32 , rtk_port_t , rtk_filter_patternMatch_mode_t , uint8 *, uint32 );
    int32   (*filter_flowTbl_del)(uint32 , rtk_filter_id_t );
    int32   (*filter_flowTbl_delAll)(uint32 );
    int32   (*filter_flowTbl_get)(uint32 , rtk_filter_id_t , rtk_filter_flowTbl_t *, rtk_filter_action_t *);
    int32   (*filter_flowTbl_set)(uint32 , rtk_filter_id_t , rtk_filter_flowTbl_t *, rtk_filter_action_t *);
    int32   (*filter_flowTbl_add)(uint32 , rtk_filter_id_t , rtk_filter_flowTbl_t *, rtk_filter_action_t *);
    int32   (*filter_flowTbl_validate)(uint32 , rtk_filter_id_t);
    int32   (*filter_flowTbl_invalidate)(uint32 , rtk_filter_id_t);
    int32   (*filter_igrAcl_del)(uint32 , rtk_filter_id_t );
    int32   (*filter_igrAcl_delAll)(uint32 );
    int32   (*filter_igrAcl_get)(uint32 , rtk_filter_id_t , rtk_filter_aclCfg_t *, rtk_filter_action_t *);
    int32   (*filter_igrAcl_set)(uint32 , rtk_filter_id_t , rtk_filter_aclCfg_t *, rtk_filter_action_t *);
    int32   (*filter_igrAcl_add)(uint32 , rtk_filter_id_t , rtk_filter_aclCfg_t *, rtk_filter_action_t *);
    int32   (*filter_igrAcl_validate)(uint32 , rtk_filter_id_t);
    int32   (*filter_igrAcl_invalidate)(uint32 , rtk_filter_id_t);
    int32   (*filter_igrAclRateLimit_get)(uint32 , rtk_meter_id_t , uint32 *);
    int32   (*filter_igrAclRateLimit_set)(uint32 , rtk_meter_id_t , uint32 );
    int32   (*filter_stat_get)(uint32 , rtk_log_id_t , uint32 *, uint64 *);
    int32   (*filter_stat_set)(uint32 , rtk_log_id_t , uint32 , uint64 );
    int32   (*filter_macBasedVlan_add)(uint32 , rtk_filter_id_t , rtk_mac_t , rtk_vlan_t , rtk_pri_t );
    int32   (*filter_macBasedVlan_del)(uint32 , rtk_filter_id_t , rtk_mac_t );
    int32   (*filter_macBasedVlan_delAll)(uint32 );
    int32   (*filter_igrVlanXlate_add)(uint32 , rtk_filter_id_t , rtk_port_t , rtk_vlan_t , rtk_vlan_t , rtk_pri_t );
    int32   (*filter_igrVlanXlate_del)(uint32 , rtk_filter_id_t , rtk_port_t , rtk_vlan_t );
    int32   (*filter_igrVlanXlate_delAll)(uint32 );
    int32   (*filter_egrVlanXlate_add)(uint32 , rtk_filter_id_t , rtk_port_t , rtk_vlan_t , rtk_vlan_t , rtk_pri_t );
    int32   (*filter_egrVlanXlate_del)(uint32 , rtk_filter_id_t , rtk_port_t , rtk_vlan_t );
    int32   (*filter_egrVlanXlate_delAll)(uint32 );
    int32   (*filter_stagVlan_add)(uint32 , rtk_filter_id_t , rtk_port_t , rtk_vlan_t , rtk_vlan_t , rtk_pri_t );
    int32   (*filter_stagVlan_del)(uint32 , rtk_filter_id_t , rtk_port_t , rtk_vlan_t );
    int32   (*filter_stagVlan_delAll)(uint32 );
    int32   (*filter_ipSubnetBasedVlan_add)(uint32 , rtk_filter_id_t , ipaddr_t , ipaddr_t , rtk_vlan_t , rtk_pri_t );
    int32   (*filter_ipSubnetBasedVlan_del)(uint32 , rtk_filter_id_t , ipaddr_t , ipaddr_t );
    int32   (*filter_ipSubnetBasedVlan_delAll)(uint32 );
    int32   (*filter_protoAndPortBasedVlan_add)(uint32 , rtk_filter_id_t , rtk_port_t , rtk_vlan_protoAndPortInfo_t );
    int32   (*filter_protoAndPortBasedVlan_del)(uint32 , rtk_filter_id_t , rtk_port_t , uint32 , rtk_vlan_protoVlan_frameType_t );
    int32   (*filter_protoAndPortBasedVlan_delAll)(uint32 , rtk_port_t );

    /* flow control API */
    int32   (*flowctrl_init)(uint32 );
    int32   (*flowctrl_portEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*flowctrl_portEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*flowctrl_portPauseForceModeEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*flowctrl_portPauseForceModeEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*flowctrl_pauseOnAction_get)(uint32 , rtk_port_t , rtk_flowctrl_pauseOnAction_t *);
    int32   (*flowctrl_pauseOnAction_set)(uint32 , rtk_port_t , rtk_flowctrl_pauseOnAction_t );
    int32   (*flowctrl_pauseOnAllowedPageNum_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*flowctrl_pauseOnAllowedPageNum_set)(uint32 , rtk_port_t , uint32 );
    int32   (*flowctrl_pauseOnAllowedPktLen_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*flowctrl_pauseOnAllowedPktLen_set)(uint32 , rtk_port_t , uint32 );
    int32   (*flowctrl_pauseOnAllowedPktNum_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*flowctrl_pauseOnAllowedPktNum_set)(uint32 , rtk_port_t , uint32 );
    int32   (*flowctrl_igrSystemPauseThresh_get)(uint32 , rtk_flowctrl_thresh_t *);
    int32   (*flowctrl_igrSystemPauseThresh_set)(uint32 , rtk_flowctrl_thresh_t *);
    int32   (*flowctrl_igrPortPauseThresh_get)(uint32 , rtk_port_t , rtk_flowctrl_thresh_t *);
    int32   (*flowctrl_igrPortPauseThresh_set)(uint32 , rtk_port_t , rtk_flowctrl_thresh_t *);
    int32   (*flowctrl_igrPauseThreshGroup_get)(uint32 , uint32 , rtk_flowctrl_thresh_t *);
    int32   (*flowctrl_igrPauseThreshGroup_set)(uint32 , uint32 , rtk_flowctrl_thresh_t *);
    int32   (*flowctrl_igrPortPauseThreshGroupSel_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*flowctrl_igrPortPauseThreshGroupSel_set)(uint32 , rtk_port_t , uint32 );
    int32   (*flowctrl_egrPortDropMode_get)(uint32 , rtk_port_t , rtk_flowctrl_egrDropMode_t *);
    int32   (*flowctrl_egrPortDropMode_set)(uint32 , rtk_port_t , rtk_flowctrl_egrDropMode_t );
    int32   (*flowctrl_egrPortDropForceModeEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*flowctrl_egrPortDropForceModeEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*flowctrl_igrSystemCongestThresh_get)(uint32 , rtk_flowctrl_thresh_t *);
    int32   (*flowctrl_igrSystemCongestThresh_set)(uint32 , rtk_flowctrl_thresh_t *);
    int32   (*flowctrl_igrPortCongestThresh_get)(uint32 , rtk_port_t , rtk_flowctrl_thresh_t *);
    int32   (*flowctrl_igrPortCongestThresh_set)(uint32 , rtk_port_t , rtk_flowctrl_thresh_t *);
    int32   (*flowctrl_igrCongestThreshGroup_get)(uint32 , uint32 , rtk_flowctrl_thresh_t *);
    int32   (*flowctrl_igrCongestThreshGroup_set)(uint32 , uint32 , rtk_flowctrl_thresh_t *);
    int32   (*flowctrl_egrSystemDropThresh_get)(uint32 , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_egrSystemDropThresh_set)(uint32 , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_egrPortDropThresh_get)(uint32 , rtk_port_t , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_egrPortDropThresh_set)(uint32 , rtk_port_t , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_egrPortQueueDropThresh_get)( uint32 , rtk_port_t , rtk_qid_t , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_egrPortQueueDropThresh_set)( uint32 , rtk_port_t , rtk_qid_t , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_egrPortQueueDropEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*flowctrl_egrPortQueueDropEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*flowctrl_egrQueueDropThresh_get)(uint32 , rtk_qid_t , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_egrQueueDropThresh_set)(uint32 , rtk_qid_t , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_egrCpuQueueDropThresh_get)(uint32 , rtk_qid_t , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_egrCpuQueueDropThresh_set)(uint32 , rtk_qid_t , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_egrPortDropRefCongestEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*flowctrl_egrPortDropRefCongestEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*flowctrl_egrPortDropThreshGroup_get)(uint32 , uint32 , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_egrPortDropThreshGroup_set)(uint32 , uint32 , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_egrQueueDropThreshGroup_get)(uint32 , uint32 , rtk_qid_t , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_egrQueueDropThreshGroup_set)(uint32 , uint32 , rtk_qid_t , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_igrQueueDropEnable_get)(uint32 , rtk_port_t , rtk_qid_t , rtk_enable_t *);
    int32   (*flowctrl_igrQueueDropEnable_set)(uint32 , rtk_port_t , rtk_qid_t , rtk_enable_t );
    int32   (*flowctrl_igrQueuePauseThreshGroup_get)(uint32 , uint32 , rtk_qid_t , rtk_flowctrl_drop_thresh_t * );
    int32   (*flowctrl_igrQueuePauseThreshGroup_set)(uint32 , uint32 , rtk_qid_t , rtk_flowctrl_drop_thresh_t * );
    int32   (*flowctrl_igrQueuePauseDropThreshGroupSel_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*flowctrl_igrQueuePauseDropThreshGroupSel_set)(uint32 , rtk_port_t , uint32 );
    int32   (*flowctrl_egrPortQueueDropThreshGroupSel_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*flowctrl_egrPortQueueDropThreshGroupSel_set)(uint32 , rtk_port_t , uint32 );
    int32   (*flowctrl_egrQueueDropEnable_get)(uint32 , rtk_port_t , rtk_qid_t , rtk_enable_t *);
    int32   (*flowctrl_egrQueueDropEnable_set)(uint32 , rtk_port_t , rtk_qid_t , rtk_enable_t );
    int32   (*flowctrl_egrPortDropEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*flowctrl_egrPortDropEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*flowctrl_specialCongestThreshold_get)(uint32 , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_specialCongestThreshold_set)(uint32 , rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_igrQueueDropThreshGroup_get)(uint32 , uint32, rtk_qid_t, rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_igrQueueDropThreshGroup_set)(uint32 , uint32, rtk_qid_t, rtk_flowctrl_drop_thresh_t *);
    int32   (*flowctrl_portHolTrafficDropEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*flowctrl_portHolTrafficDropEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*flowctrl_holTrafficTypeDropEnable_get)(uint32 , rtk_flowctrl_holTrafficType_t , rtk_enable_t *);
    int32   (*flowctrl_holTrafficTypeDropEnable_set)(uint32 , rtk_flowctrl_holTrafficType_t , rtk_enable_t );

    /* SVLAN */
    int32   (*svlan_init)(uint32 );
    int32   (*svlan_create)(uint32 , rtk_vlan_t );
    int32   (*svlan_destroy)(uint32 , rtk_vlan_t );
    int32   (*svlan_portSvid_get)(uint32 , rtk_port_t , rtk_vlan_t *);
    int32   (*svlan_portSvid_set)(uint32 , rtk_port_t , rtk_vlan_t );
    int32   (*svlan_servicePort_add)(uint32 , rtk_port_t );
    int32   (*svlan_servicePort_del)(uint32 , rtk_port_t );
    int32   (*svlan_servicePort_get)(uint32 , rtk_portmask_t *);
    int32   (*svlan_servicePort_set)(uint32 , rtk_portmask_t *);
    int32   (*svlan_memberPort_add)(uint32 , rtk_vlan_t , rtk_port_t );
    int32   (*svlan_memberPort_del)(uint32 , rtk_vlan_t , rtk_port_t );
    int32   (*svlan_memberPort_get)(uint32 , rtk_vlan_t , rtk_portmask_t *);
    int32   (*svlan_memberPort_set)(uint32 , rtk_vlan_t , rtk_portmask_t *);
    int32   (*svlan_memberPortEntry_get)(uint32 , uint32 , rtk_vlan_t *, rtk_portmask_t *);
    int32   (*svlan_memberPortEntry_set)(uint32 , uint32 , rtk_vlan_t , rtk_portmask_t *);
    int32   (*svlan_nextValidMemberPortEntry_get)(uint32 , int32 *, rtk_vlan_t *, rtk_portmask_t *);
    int32   (*svlan_tpidEntry_get)(uint32 , uint32 , uint32 *);
    int32   (*svlan_tpidEntry_set)(uint32 , uint32 , uint32 );

    /* EEE */
    int32   (*eee_init)(uint32 );
    int32   (*eee_portEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*eee_portEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*eee_portState_get)(uint32, rtk_port_t, rtk_enable_t *);
    int32   (*eeep_portEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*eeep_portEnable_set)(uint32 , rtk_port_t , rtk_enable_t);

    /* Security */
    int32   (*sec_init)(uint32 );
    int32   (*sec_portAttackPrevent_get)(uint32 , rtk_port_t , rtk_sec_attackType_t , rtk_action_t *);
    int32   (*sec_portAttackPrevent_set)(uint32 , rtk_port_t , rtk_sec_attackType_t , rtk_action_t );
    int32   (*sec_portMinIPv6FragLen_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*sec_portMinIPv6FragLen_set)(uint32 , rtk_port_t , uint32 );
    int32   (*sec_portMaxPingLen_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*sec_portMaxPingLen_set)(uint32 , rtk_port_t , uint32 );
    int32   (*sec_portMinTCPHdrLen_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*sec_portMinTCPHdrLen_set)(uint32 , rtk_port_t , uint32 );
    int32   (*sec_portSmurfNetmaskLen_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*sec_portSmurfNetmaskLen_set)(uint32 , rtk_port_t , uint32 );
    int32   (*sec_portAttackPreventEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*sec_portAttackPreventEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*sec_attackPreventAction_get)(uint32 , rtk_sec_attackType_t , rtk_action_t *);
    int32   (*sec_attackPreventAction_set)(uint32 , rtk_sec_attackType_t , rtk_action_t );
    int32   (*sec_minIPv6FragLen_get)(uint32 , uint32 *);
    int32   (*sec_minIPv6FragLen_set)(uint32 , uint32 );
    int32   (*sec_maxPingLen_get)(uint32 , uint32 *);
    int32   (*sec_maxPingLen_set)(uint32 , uint32 );
    int32   (*sec_minTCPHdrLen_get)(uint32 , uint32 *);
    int32   (*sec_minTCPHdrLen_set)(uint32 , uint32 );
    int32   (*sec_smurfNetmaskLen_get)(uint32, uint32 *);
    int32   (*sec_smurfNetmaskLen_set)(uint32, uint32 );

    /* L3 */
    int32   (*l3_init)(uint32 );
    int32   (*l3_ttlExpireAction_get)(uint32 , rtk_l3_ttlExpireType_t , rtk_action_t *);
    int32   (*l3_ttlExpireAction_set)(uint32 , rtk_l3_ttlExpireType_t , rtk_action_t );
    int32   (*l3_ttlExpireTrapPri_get)(uint32 , rtk_l3_ttlExpireType_t , rtk_pri_t *);
    int32   (*l3_ttlExpireTrapPri_set)(uint32 , rtk_l3_ttlExpireType_t , rtk_pri_t );
    int32   (*l3_ttlExpireTrapPriEnable_get)(uint32 , rtk_l3_ttlExpireType_t , rtk_enable_t *);
    int32   (*l3_ttlExpireTrapPriEnable_set)(uint32 , rtk_l3_ttlExpireType_t , rtk_enable_t );
    int32   (*l3_ttlExpireTrapDP_get)(uint32 , rtk_l3_ttlExpireType_t , uint32 *);
    int32   (*l3_ttlExpireTrapDP_set)(uint32 , rtk_l3_ttlExpireType_t , uint32 );
    int32   (*l3_ttlExpireTrapDPEnable_get)(uint32 , rtk_l3_ttlExpireType_t , rtk_enable_t *);
    int32   (*l3_ttlExpireTrapDPEnable_set)(uint32 , rtk_l3_ttlExpireType_t , rtk_enable_t );
    int32   (*l3_ttlExpireAddCPUTagEnable_get)(uint32 , rtk_l3_ttlExpireType_t , rtk_enable_t *);
    int32   (*l3_ttlExpireAddCPUTagEnable_set)(uint32 , rtk_l3_ttlExpireType_t , rtk_enable_t );
    int32   (*l3_routeEntry_get)(uint32 , uint32 , rtk_l3_routeEntry_t *);
    int32   (*l3_routeEntry_set)(uint32 , uint32 , rtk_l3_routeEntry_t *);
    int32   (*l3_routeSwitchMacAddr_get)(uint32 , uint32 , rtk_mac_t *);
    int32   (*l3_routeSwitchMacAddr_set)(uint32 , uint32 , rtk_mac_t *);

    /* OAM */
    int32   (*oam_init)(uint32 );
    int32   (*oam_oamCounter_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*oam_txTestFrame_start)(uint32 , rtk_oam_testFrameCfg_t *);
    int32   (*oam_txTestFrame_stop)(uint32 );
    int32   (*oam_txStatusOfTestFrame_get)(uint32 , rtk_oam_testFrameTxStatus_t *, uint64 *);
    int32   (*oam_loopbackMode_get)(uint32 , rtk_port_t , rtk_oam_loopbackMode_t *);
    int32   (*oam_loopbackMode_set)(uint32 , rtk_port_t , rtk_oam_loopbackMode_t );
    int32   (*oam_loopbackCtrl_get)(uint32 , rtk_port_t , rtk_oam_loopbackCtrl_t *);
    int32   (*oam_loopbackCtrl_set)(uint32 , rtk_port_t , rtk_oam_loopbackCtrl_t *);
    int32   (*oam_DyingGaspSend_start)(uint32 , rtk_portmask_t *);
    int32   (*oam_portDyingGaspPayload_set)(uint32 , rtk_port_t , uint8 *, uint32);
    int32   (*oam_dyingGaspSend_set)(uint32 , rtk_enable_t );
    int32   (*oam_autoDyingGaspEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*oam_autoDyingGaspEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*oam_dyingGaspTLV_get)(uint32 , rtk_port_t , rtk_oam_dyingGaspTLV_t *);
    int32   (*oam_dyingGaspTLV_set)(uint32 , rtk_port_t , rtk_oam_dyingGaspTLV_t *);
    int32   (*oam_dyingGaspWaitTime_get)(uint32 , uint32 *);
    int32   (*oam_dyingGaspWaitTime_set)(uint32 , uint32 );
    int32   (*oam_cfmEntry_get)(uint32 , uint32 , rtk_oam_cfm_t *);
    int32   (*oam_cfmEntry_set)(uint32 , uint32 , rtk_oam_cfm_t *);
    int32   (*oam_cfmPortEntry_get)(uint32 , rtk_port_t , rtk_oam_cfmPort_t *);
    int32   (*oam_cfmPortEntry_set)(uint32 , rtk_port_t , rtk_oam_cfmPort_t *);
    int32   (*oam_cfmMepEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*oam_cfmMepEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*oam_txCCMFrame_start)(uint32 , rtk_portmask_t *);
    int32   (*oam_txCCMFrame_stop)(uint32 );
    int32   (*oam_cfmCCMFrame_get)(uint32 , uint32 , rtk_oam_ccmFrame_t *);
    int32   (*oam_cfmCCMFrame_set)(uint32 , uint32 , rtk_oam_ccmFrame_t *);
    int32   (*oam_cfmCCMSnapOui_get)(uint32 , rtk_snapOui_t *);
    int32   (*oam_cfmCCMSnapOui_set)(uint32 , rtk_snapOui_t *);
    int32   (*oam_cfmCCMEtype_get)(uint32 , uint32 *);
    int32   (*oam_cfmCCMEtype_set)(uint32 , uint32 );
    int32   (*oam_cfmCCMOpcode_get)(uint32 , uint32 *);
    int32   (*oam_cfmCCMOpcode_set)(uint32 , uint32 );
    int32   (*oam_cfmCCMFlag_get)(uint32 , uint32 , uint32 *);
    int32   (*oam_cfmCCMFlag_set)(uint32 , uint32 , uint32 );
    int32   (*oam_cfmCCMInterval_get)(uint32 , rtk_oam_ccmInterval_t *);
    int32   (*oam_cfmCCMInterval_set)(uint32 , rtk_oam_ccmInterval_t );
    int32   (*oam_cfmIntfStatus_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*oam_cfmIntfStatus_set)(uint32 , rtk_port_t , uint32 );
    int32   (*oam_cfmPortStatus_get)(uint32 , rtk_port_t , uint32 *);
    int32   (*oam_cfmPortStatus_set)(uint32 , rtk_port_t , uint32 );
    int32   (*oam_cfmRemoteMep_del)(uint32 , uint32 );
    int32   (*oam_cfmRemoteMep_add)(uint32 , uint32 );
    int32   (*oam_cfmRemoteMep_get)(uint32, uint32, uint32*, uint32*);
    int32   (*oam_cfmRemoteMep_set)(uint32, uint32, uint32, uint32);
    int32   (*oam_cfmCCStatus_get)(uint32 , rtk_port_t , uint32 , uint32 *, rtk_oam_ccStatus_t *);
    int32   (*oam_cfmCCStatus_reset)(uint32 , rtk_port_t );
    int32   (*oam_cfmLoopbackReplyEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*oam_cfmLoopbackReplyEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*oam_cfmLoopbackReplyCtrl_get)(uint32 , rtk_oam_cfmLoopbackCtrl_t *);
    int32   (*oam_cfmLoopbackReplyCtrl_set)(uint32 , rtk_oam_cfmLoopbackCtrl_t *);
    int32   (*oam_loopbackMacSwapEnable_get)(uint32 , rtk_enable_t *);
    int32   (*oam_loopbackMacSwapEnable_set)(uint32 , rtk_enable_t);
    int32   (*oam_portLoopbackMuxAction_get)(uint32 , rtk_port_t, rtk_action_t *);
    int32   (*oam_portLoopbackMuxAction_set)(uint32 , rtk_port_t, rtk_action_t);
    int32   (*oam_cfmCcmPcp_get)(uint32 , uint32 *);
    int32   (*oam_cfmCcmPcp_set)(uint32 , uint32 );
    int32   (*oam_cfmCcmCfi_get)(uint32 , uint32 *);
    int32   (*oam_cfmCcmCfi_set)(uint32 , uint32 );
    int32   (*oam_cfmCcmTpid_get)(uint32 , uint32 *);
    int32   (*oam_cfmCcmTpid_set)(uint32 , uint32 );
    int32   (*oam_cfmCcmInstLifetime_get)(uint32 , uint32 , uint32 *);
    int32   (*oam_cfmCcmInstLifetime_set)(uint32 , uint32 , uint32 );
    int32   (*oam_cfmCcmMepid_get)(uint32 , uint32 *);
    int32   (*oam_cfmCcmMepid_set)(uint32 , uint32 );
    int32   (*oam_cfmCcmIntervalField_get)(uint32 , uint32 *);
    int32   (*oam_cfmCcmIntervalField_set)(uint32 , uint32 );
    int32   (*oam_cfmCcmMdl_get)(uint32 , uint32 *);
    int32   (*oam_cfmCcmMdl_set)(uint32 , uint32 );
    int32   (*oam_cfmCcmInstTagStatus_get)(uint32 , uint32 , rtk_enable_t *);
    int32   (*oam_cfmCcmInstTagStatus_set)(uint32 , uint32 , rtk_enable_t );
    int32   (*oam_cfmCcmInstVid_get)(uint32 , uint32 , rtk_vlan_t *);
    int32   (*oam_cfmCcmInstVid_set)(uint32 , uint32 , rtk_vlan_t );
    int32   (*oam_cfmCcmInstMaid_get)(uint32 , uint32 , uint32 *);
    int32   (*oam_cfmCcmInstMaid_set)(uint32 , uint32 , uint32 );
    int32   (*oam_cfmCcmInstTxStatus_get)(uint32 , uint32 , rtk_enable_t *);
    int32   (*oam_cfmCcmInstTxStatus_set)(uint32 , uint32 , rtk_enable_t );
    int32   (*oam_cfmCcmInstInterval_get)(uint32 , uint32 , uint32 *);
    int32   (*oam_cfmCcmInstInterval_set)(uint32 , uint32 , uint32 );
    int32   (*oam_cfmCcmTxInstPort_get)(uint32 , uint32 , uint32 , rtk_port_t *);
    int32   (*oam_cfmCcmTxInstPort_set)(uint32 , uint32 , uint32 , rtk_port_t );
    int32   (*oam_cfmCcmRxInstVid_get)(uint32 , uint32 , rtk_vlan_t *);
    int32   (*oam_cfmCcmRxInstVid_set)(uint32 , uint32 , rtk_vlan_t );
    int32   (*oam_cfmCcmRxInstPort_get)(uint32 , uint32 , uint32 , rtk_port_t *);
    int32   (*oam_cfmCcmRxInstPort_set)(uint32 , uint32 , uint32 , rtk_port_t );
    int32   (*oam_cfmCcmKeepalive_get)(uint32 , uint32 , uint32 , uint32 *);
    int32   (*oam_cfmPortEthDmEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*oam_cfmPortEthDmEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*oam_dyingGaspPktCnt_get)(uint32, uint32 *);
    int32   (*oam_dyingGaspPktCnt_set)(uint32, uint32);

    /* PIE */
    int32   (*pie_init)(uint32 );
    int32   (*pie_pieRuleEntryFieldSize_get)(uint32 , rtk_pie_fieldType_t , uint32 *);
    int32   (*pie_pieRuleFieldId_get)(uint32 , rtk_pie_fieldType_t , uint32 *);
    int32   (*pie_pieRuleEntrySize_get)(uint32 , uint32 *);
    int32   (*pie_pieRuleEntryField_get)(uint32 , rtk_pie_phase_t , rtk_pie_id_t , uint8 *, rtk_pie_fieldType_t , uint8 *, uint8 *);
    int32   (*pie_pieRuleEntryField_set)(uint32 , rtk_pie_phase_t , rtk_pie_id_t , uint8 *, rtk_pie_fieldType_t , uint8 *, uint8 *);
    int32   (*pie_pieRuleEntryField_read)(uint32 , rtk_pie_phase_t , rtk_pie_id_t , rtk_pie_fieldType_t , uint8 *, uint8 *);
    int32   (*pie_pieRuleEntryField_write)(uint32 , rtk_pie_phase_t , rtk_pie_id_t , rtk_pie_fieldType_t , uint8 *, uint8 *);
    int32   (*pie_piePreDefinedRuleEntry_get)(uint32 , uint8 * , rtk_pie_preDefinedRuleEntry_t *);
    int32   (*pie_piePreDefinedRuleEntry_set)(uint32 , uint8 * , rtk_pie_preDefinedRuleEntry_t *);
    int32   (*pie_pieRuleEntry_read)(uint32 , rtk_pie_id_t , uint8 *);
    int32   (*pie_pieRuleEntry_write)(uint32 , rtk_pie_id_t , uint8 *);
    int32   (*pie_pieRuleEntry_del)(uint32 , rtk_pie_clearBlockContent_t *);
    int32   (*pie_pieRuleEntry_move)(uint32 , rtk_pie_movePieContent_t *);
    int32   (*pie_pieRuleEntry_swap)(uint32 , rtk_pie_movePieContent_t *);
    int32   (*pie_pieRuleAction_get)(uint32 , rtk_pie_id_t , rtk_pie_actionTable_t *);
    int32   (*pie_pieRuleAction_set)(uint32 , rtk_pie_id_t , rtk_pie_actionTable_t *);
    int32   (*pie_pieRuleAction_del)(uint32 , rtk_pie_clearBlockContent_t *);
    int32   (*pie_pieRuleAction_move)(uint32 , rtk_pie_movePieContent_t *);
    int32   (*pie_pieRuleAction_swap)(uint32 , rtk_pie_movePieContent_t *);
    int32   (*pie_pieRulePolicer_get)(uint32 , rtk_pie_id_t , rtk_pie_policerEntry_t *);
    int32   (*pie_pieRulePolicer_set)(uint32 , rtk_pie_id_t , rtk_pie_policerEntry_t *);
    int32   (*pie_pieHitIndication_get)(uint32 , uint32 , rtk_pie_hitIndicationEntry_t *);
    int32   (*pie_pieStat_get)(uint32 , uint32 , uint32 *, uint64 *);
    int32   (*pie_pieStat_set)(uint32 , uint32 , uint32 , uint64 );
    int32   (*pie_pieStat_clearAll)(uint32 );
    int32   (*pie_pieTemplateSelector_get)(uint32 , uint32 , rtk_pie_phase_t , uint32 *);
    int32   (*pie_pieTemplateSelector_set)(uint32 , uint32 , rtk_pie_phase_t , uint32 );
    int32   (*pie_pieUserTemplate_get)(uint32 , uint32 , rtk_pie_template_t *);
    int32   (*pie_pieUserTemplate_set)(uint32 , uint32 , rtk_pie_template_t *);
    int32   (*pie_pieL34ChecksumErr_get)(uint32 , rtk_pie_l34ChecksumErrOper_t *);
    int32   (*pie_pieL34ChecksumErr_set)(uint32 , rtk_pie_l34ChecksumErrOper_t );
    int32   (*pie_pieUserTemplatePayloadOffset_get)(uint32 , uint32 , uint32 , uint32 *);
    int32   (*pie_pieUserTemplatePayloadOffset_set)(uint32 , uint32 , uint32 , uint32 );
    int32   (*pie_pieResultReverse_get)(uint32 , uint32 , rtk_pie_resultReverseOper_t *);
    int32   (*pie_pieResultReverse_set)(uint32 , uint32 , rtk_pie_resultReverseOper_t );
    int32   (*pie_pieResultAggregator_get)(uint32 , rtk_pie_resultAggregatorRange_t , uint32 , rtk_pie_resultAggregatorType_t *);
    int32   (*pie_pieResultAggregator_set)(uint32 , rtk_pie_resultAggregatorRange_t , uint32 , rtk_pie_resultAggregatorType_t );
    int32   (*pie_pieBlockPriority_get)(uint32 , uint32 , uint32 *);
    int32   (*pie_pieBlockPriority_set)(uint32 , uint32 , uint32 );
    int32   (*pie_pieGroupCtrl_get)(uint32 , rtk_pie_groupCtrlRange_t , rtk_pie_groupCtrl_t *);
    int32   (*pie_pieGroupCtrl_set)(uint32 , rtk_pie_groupCtrlRange_t , rtk_pie_groupCtrl_t );
    int32   (*pie_pieEgrAclLookupCtrl_get)(uint32 , rtk_pie_egrAclLookupCtrl_t *);
    int32   (*pie_pieEgrAclLookupCtrl_set)(uint32 , rtk_pie_egrAclLookupCtrl_t *);
    int32   (*pie_piePortLookupPhaseEnable_get)(uint32 , rtk_port_t , rtk_pie_phase_t , rtk_enable_t *);
    int32   (*pie_piePortLookupPhaseEnable_set)(uint32 , rtk_port_t , rtk_pie_phase_t , rtk_enable_t );
    int32   (*pie_piePortLookupPhaseMiss_get)(uint32 , rtk_port_t , rtk_pie_phase_t , rtk_pie_lookupMissAction_t *);
    int32   (*pie_piePortLookupPhaseMiss_set)(uint32 unit, rtk_port_t , rtk_pie_phase_t , rtk_pie_lookupMissAction_t );
    int32   (*pie_pieCounterIndicationMode_get)(uint32 , uint32 , rtk_pie_counterIndicationMode_t *);
    int32   (*pie_pieCounterIndicationMode_set)(uint32 , uint32 , rtk_pie_counterIndicationMode_t );
    int32   (*pie_piePolicerCtrl_get)(uint32 , rtk_pie_policerCtrl_t *);
    int32   (*pie_piePolicerCtrl_set)(uint32 , rtk_pie_policerCtrl_t *);
    int32   (*pie_rangeCheckL4Port_get)(uint32 , uint32 , rtk_pie_rangeCheck_l4Port_t *);
    int32   (*pie_rangeCheckL4Port_set)(uint32 , uint32 , rtk_pie_rangeCheck_l4Port_t *);
    int32   (*pie_rangeCheckVid_get)(uint32 , uint32 , rtk_pie_rangeCheck_vid_t *);
    int32   (*pie_rangeCheckVid_set)(uint32 , uint32 , rtk_pie_rangeCheck_vid_t *);
    int32   (*pie_rangeCheckIp_get)(uint32 , uint32 , rtk_pie_rangeCheck_ip_t *);
    int32   (*pie_rangeCheckIp_set)(uint32 , uint32 , rtk_pie_rangeCheck_ip_t *);
    int32   (*pie_rangeCheckSrcPort_get)(uint32 , uint32 , rtk_pie_rangeCheck_srcPortMask_t *);
    int32   (*pie_rangeCheckSrcPort_set)(uint32 , uint32 , rtk_pie_rangeCheck_srcPortMask_t *);
    int32   (*pie_fieldSelectorEnable_get)(uint32 , rtk_port_t , uint32 , rtk_enable_t *);
    int32   (*pie_fieldSelectorEnable_set)(uint32 , rtk_port_t , uint32 , rtk_enable_t );
    int32   (*pie_fieldSelectorContent_get)(uint32 , rtk_port_t , uint32 , rtk_pie_fieldSelector_data_t *);
    int32   (*pie_fieldSelectorContent_set)(uint32 , rtk_port_t , uint32 , rtk_pie_fieldSelector_data_t *);
    int32   (*pie_patternMatchEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*pie_patternMatchEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*pie_patternMatchContent_get)(uint32 , rtk_port_t , rtk_pie_patternMatch_content_t *);
    int32   (*pie_patternMatchContent_set)(uint32 , rtk_port_t , rtk_pie_patternMatch_content_t *);
    int32   (*pie_pieRuleEntryAction_del)(uint32 , rtk_pie_clearBlockContent_t *);
    int32   (*pie_pieRuleEntryAction_move)(uint32 , rtk_pie_movePieContent_t *);
    int32   (*pie_pieRuleEntryAction_swap)(uint32 , rtk_pie_movePieContent_t *);

    /* ACL */
    int32   (*acl_init)(uint32 );
    int32   (*acl_partition_get)(uint32 , uint32 *);
    int32   (*acl_partition_set)(uint32 , uint32);
    int32   (*acl_blockPwrEnable_get)(uint32 , uint32 , rtk_enable_t *);
    int32   (*acl_blockPwrEnable_set)(uint32 , uint32 , rtk_enable_t );
    int32   (*acl_blockLookupEnable_get)(uint32 , uint32 , rtk_enable_t *);
    int32   (*acl_blockLookupEnable_set)(uint32 , uint32 , rtk_enable_t );
    int32   (*acl_portLookupEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*acl_portLookupEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*acl_lookupMissAct_get)(uint32 , rtk_port_t , rtk_acl_lookupMissAct_t *);
    int32   (*acl_lookupMissAct_set)(uint32 , rtk_port_t , rtk_acl_lookupMissAct_t );
    int32   (*acl_ruleEntryFieldSize_get)(uint32 , rtk_acl_fieldType_t , uint32 *);
    int32   (*acl_ruleEntrySize_get)(uint32 , rtk_acl_phase_t , uint32 *);
    int32   (*acl_ruleValidate_get)(uint32 , rtk_acl_phase_t , rtk_acl_id_t , uint32 *);
    int32   (*acl_ruleValidate_set)(uint32 , rtk_acl_phase_t , rtk_acl_id_t , uint32 );
    int32   (*acl_ruleEntry_read)(uint32 , rtk_acl_phase_t , rtk_acl_id_t , uint8 *);
    int32   (*acl_ruleEntry_write)(uint32 , rtk_acl_phase_t , rtk_acl_id_t , uint8 *);
    int32   (*acl_ruleEntryField_get)(uint32 , rtk_acl_phase_t , rtk_acl_id_t , uint8 * , rtk_acl_fieldType_t , uint8 * , uint8 *);
    int32   (*acl_ruleEntryField_set)(uint32 , rtk_acl_phase_t , rtk_acl_id_t , uint8 * , rtk_acl_fieldType_t , uint8 * , uint8 *);
    int32   (*acl_ruleEntryField_read)(uint32 , rtk_acl_phase_t , rtk_acl_id_t , rtk_acl_fieldType_t , uint8 * , uint8 *);
    int32   (*acl_ruleEntryField_write)(uint32 , rtk_acl_phase_t , rtk_acl_id_t , rtk_acl_fieldType_t , uint8 * , uint8 *);
    int32   (*acl_ruleEntryField_check)(uint32, rtk_acl_phase_t, rtk_acl_fieldType_t);
    int32   (*acl_ruleOperation_get)(uint32 , rtk_acl_phase_t , rtk_acl_id_t , rtk_acl_operation_t *);
    int32   (*acl_ruleOperation_set)(uint32 , rtk_acl_phase_t , rtk_acl_id_t , rtk_acl_operation_t *);
    int32   (*acl_ruleAction_get)(uint32 , rtk_acl_phase_t , rtk_acl_id_t , rtk_acl_action_t *);
    int32   (*acl_ruleAction_set)(uint32 , rtk_acl_phase_t , rtk_acl_id_t , rtk_acl_action_t *);
    int32   (*acl_ruleHitIndication_get)(uint32 , rtk_acl_phase_t , rtk_acl_id_t , uint32 , uint32 *);
    int32   (*acl_rule_del)(uint32 , rtk_acl_phase_t , rtk_acl_clear_t *);
    int32   (*acl_rule_move)(uint32 , rtk_acl_phase_t , rtk_acl_move_t *);
    int32   (*acl_templateSelector_get)(uint32 , uint32 , rtk_acl_templateIdx_t *);
    int32   (*acl_templateSelector_set)(uint32 , uint32 , rtk_acl_templateIdx_t);
    int32   (*acl_template_get)(uint32 , uint32 , rtk_acl_template_t *);
    int32   (*acl_template_set)(uint32 , uint32 , rtk_acl_template_t *);
    int32   (*acl_templateField_check)(uint32 , rtk_acl_phase_t, rtk_acl_templateFieldType_t);
    int32   (*acl_blockResultMode_get)(uint32 , uint32 , rtk_acl_blockResultMode_t *);
    int32   (*acl_blockResultMode_set)(uint32 , uint32 , rtk_acl_blockResultMode_t );
    int32   (*acl_blockGroupEnable_get)(uint32 , uint32 , rtk_acl_blockGroup_t  , rtk_enable_t *);
    int32   (*acl_blockGroupEnable_set)(uint32 , uint32 , rtk_acl_blockGroup_t  , rtk_enable_t );
    int32   (*acl_statPktCnt_get)(uint32 , uint32 , uint32 *);
    int32   (*acl_statPktCnt_clear)(uint32 , uint32 );
    int32   (*acl_statByteCnt_get)(uint32 , uint32 , uint64 *);
    int32   (*acl_statByteCnt_clear)(uint32 , uint32 );
    int32   (*acl_stat_clearAll)(uint32 );
    int32   (*acl_rangeCheckL4Port_get)(uint32 , uint32 , rtk_acl_rangeCheck_l4Port_t *);
    int32   (*acl_rangeCheckL4Port_set)(uint32 , uint32 , rtk_acl_rangeCheck_l4Port_t *);
    int32   (*acl_rangeCheckVid_get)(uint32 , uint32 , rtk_acl_rangeCheck_vid_t *);
    int32   (*acl_rangeCheckVid_set)(uint32 , uint32 , rtk_acl_rangeCheck_vid_t *);
    int32   (*acl_rangeCheckIp_get)(uint32 , uint32 , rtk_acl_rangeCheck_ip_t *);
    int32   (*acl_rangeCheckIp_set)(uint32 , uint32 , rtk_acl_rangeCheck_ip_t *);
    int32   (*acl_rangeCheckSrcPort_get)(uint32 , uint32 , rtk_acl_rangeCheck_portMask_t *);
    int32   (*acl_rangeCheckSrcPort_set)(uint32 , uint32 , rtk_acl_rangeCheck_portMask_t *);
    int32   (*acl_rangeCheckDstPort_get)(uint32 , uint32 , rtk_acl_rangeCheck_portMask_t *);
    int32   (*acl_rangeCheckDstPort_set)(uint32 , uint32 , rtk_acl_rangeCheck_portMask_t *);
    int32   (*acl_rangeCheckPacketLen_get)(uint32 , uint32 , rtk_acl_rangeCheck_packetLen_t *);
    int32   (*acl_rangeCheckPacketLen_set)(uint32 , uint32 , rtk_acl_rangeCheck_packetLen_t *);
    int32   (*acl_rangeCheckFieldSelector_get)(uint32 , uint32 , rtk_acl_rangeCheck_fieldSelector_t *);
    int32   (*acl_rangeCheckFieldSelector_set)(uint32 , uint32 , rtk_acl_rangeCheck_fieldSelector_t *);
    int32   (*acl_fieldSelector_get)(uint32 , uint32 , rtk_acl_fieldSelector_data_t *);
    int32   (*acl_fieldSelector_set)(uint32 , uint32 , rtk_acl_fieldSelector_data_t *);
    int32   (*acl_portFieldSelector_get)(uint32 , rtk_port_t , uint32 , rtk_acl_fieldSelector_data_t *);
    int32   (*acl_portFieldSelector_set)(uint32 , rtk_port_t , uint32 , rtk_acl_fieldSelector_data_t *);
    int32   (*acl_meterMode_get)(uint32, uint32, rtk_acl_meterMode_t *);
    int32   (*acl_meterMode_set)(uint32, uint32, rtk_acl_meterMode_t );
    int32   (*acl_meterIncludeIfg_get) (uint32, rtk_enable_t *);
    int32   (*acl_meterIncludeIfg_set) (uint32, rtk_enable_t );
    int32   (*acl_meterBurstSize_get)(uint32, rtk_acl_meterMode_t, rtk_acl_meterBurstSize_t *);
    int32   (*acl_meterBurstSize_set)(uint32, rtk_acl_meterMode_t, rtk_acl_meterBurstSize_t *);
    int32   (*acl_meterExceed_get)(uint32, rtk_meter_id_t, uint32 *);
    int32   (*acl_meterExceedAggregation_get)(uint32, uint32 *);
    int32   (*acl_meterEntry_get)(uint32, rtk_meter_id_t, rtk_acl_meterEntry_t *);
    int32   (*acl_meterEntry_set)(uint32, rtk_meter_id_t, rtk_acl_meterEntry_t *);
    int32   (*acl_templateFieldIntentVlanTag_get)(uint32, rtk_vlan_tagType_t *);
    int32   (*acl_templateFieldIntentVlanTag_set)(uint32, rtk_vlan_tagType_t);

    /* LED */
    int32   (*led_init)(uint32 );
    int32   (*led_portEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*led_portEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*led_sysEnable_get)(uint32 , rtk_led_type_t , rtk_enable_t *);
    int32   (*led_sysEnable_set)(uint32 , rtk_led_type_t , rtk_enable_t );
    int32   (*led_portLedEntitySwCtrlEnable_get)(uint32, rtk_port_t, uint32, rtk_enable_t *);
    int32   (*led_portLedEntitySwCtrlEnable_set)(uint32, rtk_port_t, uint32, rtk_enable_t);
    int32   (*led_swCtrl_start)(uint32);
    int32   (*led_portLedEntitySwCtrlMode_get)(uint32, rtk_port_t, uint32, rtk_port_media_t, rtk_led_swCtrl_mode_t *);
    int32   (*led_portLedEntitySwCtrlMode_set)(uint32, rtk_port_t, uint32, rtk_port_media_t, rtk_led_swCtrl_mode_t);
    int32   (*led_sysMode_get)(uint32, rtk_led_swCtrl_mode_t *);
    int32   (*led_sysMode_set)(uint32, rtk_led_swCtrl_mode_t);

    /* Time */
    int32   (*time_init)(uint32 );
    int32   (*time_portPtpEnable_get)(uint32 , rtk_port_t , rtk_enable_t *);
    int32   (*time_portPtpEnable_set)(uint32 , rtk_port_t , rtk_enable_t );
    int32   (*time_portPtpRxTimestamp_get)(uint32 , rtk_port_t , rtk_time_ptpIdentifier_t , rtk_time_timeStamp_t *);
    int32   (*time_portPtpTxTimestamp_get)(uint32 , rtk_port_t , rtk_time_ptpIdentifier_t , rtk_time_timeStamp_t *);
    int32   (*time_portPtpTxTimestampCallback_register)(uint32 , rtk_port_t , rtk_time_ptpIdentifier_t , rtk_time_ptpTime_cb_f *);
    int32   (*time_refTime_get)(uint32 , rtk_time_timeStamp_t *);
    int32   (*time_refTime_set)(uint32 , rtk_time_timeStamp_t );
    int32   (*time_refTimeAdjust_set)(uint32 , uint32 , rtk_time_timeStamp_t );
    int32   (*time_refTimeEnable_get)(uint32 , rtk_enable_t *);
    int32   (*time_refTimeEnable_set)(uint32 , rtk_enable_t );

    /* MPLS */
    int32   (*mpls_init)(uint32);
    int32   (*mpls_ttlInherit_get)(uint32 , rtk_mpls_ttlInherit_t *);
    int32   (*mpls_ttlInherit_set)(uint32 , rtk_mpls_ttlInherit_t );
    int32   (*mpls_encap_get)(uint32 , uint32 lib_idx, rtk_mpls_encap_t *);
    int32   (*mpls_encap_set)(uint32 , uint32 lib_idx, rtk_mpls_encap_t *);
    int32   (*mpls_enable_get)(uint32, rtk_enable_t *);
    int32   (*mpls_enable_set)(uint32, rtk_enable_t);

    /* Diagnostic */
    int32   (*diag_init)(uint32 );
    int32   (*diag_portMacRemoteLoopbackEnable_get)(uint32 , rtk_port_t , rtk_enable_t*);
    int32   (*diag_portMacRemoteLoopbackEnable_set)(uint32 , rtk_port_t , rtk_enable_t);
    int32   (*diag_portMacLocalLoopbackEnable_get)(uint32 , rtk_port_t , rtk_enable_t*);
    int32   (*diag_portMacLocalLoopbackEnable_set)(uint32 , rtk_port_t , rtk_enable_t);
    int32   (*diag_portRtctResult_get)(uint32, rtk_port_t, rtk_rtctResult_t *);
    int32   (*diag_rtct_start)(uint32, rtk_portmask_t *);
    int32   (*diag_table_read)(uint32 , uint32 , uint32 , uint32 *, uint32 *, uint32 *);
} dal_mapper_t;


/*
 * Macro Definition
 */


/*
 * Function Declaration
 */

/* Module Name : */


#endif /* __DAL_MAPPER_H __ */
