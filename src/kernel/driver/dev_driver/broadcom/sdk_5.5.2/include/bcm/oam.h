/*
 * $Id: oam.h,v 1.2 Broadcom SDK $
 * 
 * $Copyright: Copyright 2008 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */

#ifndef __BCM_OAM_H__
#define __BCM_OAM_H__

#include <bcm/types.h>

/* CCM Flags */
#define BCM_OAM_CCM_TX_ENABLE   0x0001     /* Enable OAM packet transmit on the
                                              local endpoint */
#define BCM_OAM_CCM_TX_FLOOD    0x0002     
#define BCM_OAM_CCM_LOCAL       0x0004     /* Describes a local endpoint */
#define BCM_OAM_CCM_REPLACE     0x0008     /* Replace an endpoint with a given
                                              maid,mep,port,vid */
#define BCM_OAM_CCM_WITH_ID     0x0010     /* Replace/Modify endpoint with a
                                              given ID */
#define BCM_OAM_CCM_TX_VLAN_TAG 0x0020     /* Enable vlan tagging on OAM tx */

/* Direction */
#define BCM_OAM_CCM_DIR_UP      1          /* Towards Fabric */
#define BCM_OAM_CCM_DIR_DOWN    0          /* Towards Customer */

#define BCM_OAM_CCM_MAINT_ID_LEN    48         
#define BCM_OAM_CCM_DELETE_ALL      -1         
#define BCM_OAM_CCM_DELETE_MAID_ALL 0xFFFF     

typedef enum bcm_oam_ccm_type_e {
    BCM_OAM_CCM_ETHERNET, 
    BCM_OAM_CCM_MPLS_CV,                /* Connectivity verification */
    BCM_OAM_CCM_MPLS_FDI,               /* Forward Defect Indication */
    BCM_OAM_CCM_MPLS_BDI,               /* Backward Defect Indication */
    BCM_OAM_CCM_MPLS_PERFORMANCE,       /* Performance */
    BCM_OAM_CCM_MPLS_LOOPBACK_REQUEST,  /* LBCM_oopback Request */
    BCM_OAM_CCM_MPLS_LOOPBACK_RESPONSE, /* Loopback Response */
    BCM_OAM_CCM_MPLS_FFD,               /* Fast failure detection */
    BCM_OAM_CCM_BFD_TYPE1,              /* PseudoWire VCCV BFD Type 1 */
    BCM_OAM_CCM_BFD_TYPE2,              /* PseudoWire VCCV BFD Type 2 */
    BCM_OAM_CCM_BFD_TYPE3               /* PseudoWire VCCV BFD Type 3 */
} bcm_oam_ccm_type_t;

typedef struct bcm_oam_ccm_s {
    uint32 flags; 
    bcm_oam_ccm_type_t type; 
    uint32 id; 
    uint8 maint_id[BCM_OAM_CCM_MAINT_ID_LEN]; 
    uint16 maint_endpoint; 
    uint8 maint_level; 
    int interval; 
    int rdi;                            /* reverse defect indication */
    int direction;                      /* up(towards fabric),
                                           down(towards customer) */
    bcm_gport_t gport; 
    bcm_trunk_t tid; 
    bcm_vlan_t vid; 
    bcm_mpls_label_t label;             /* MPLS label or PW */
} bcm_oam_ccm_t;

extern void bcm_oam_ccm_t_init(
    bcm_oam_ccm_t *ccm);

typedef int(*bcm_oam_ccm_timeout_cb_t)(
    int unit, 
    bcm_oam_ccm_t *ccm);

typedef int(*bcm_oam_ccm_traverse_cb_t)(
    int unit, 
    int index, 
    bcm_oam_ccm_t *ccm, 
    void *user_data);

extern int bcm_oam_init(
    int unit);

extern int bcm_oam_detach(
    int unit);

extern int bcm_oam_ccm_endpoint_add(
    int unit, 
    bcm_oam_ccm_t *ccm);

extern int bcm_oam_ccm_endpoint_delete(
    int unit, 
    bcm_oam_ccm_t *ccm);

extern int bcm_oam_ccm_endpoint_delete_all(
    int unit, 
    bcm_oam_ccm_t *ccm);

extern int bcm_oam_ccm_endpoint_get(
    int unit, 
    bcm_oam_ccm_t *ccm);

extern int bcm_oam_ccm_register(
    int unit, 
    bcm_oam_ccm_timeout_cb_t fn);

extern int bcm_oam_ccm_unregister(
    int unit, 
    bcm_oam_ccm_timeout_cb_t fn);

extern int bcm_oam_ccm_traverse(
    int unit, 
    uint32 flags, 
    int start, 
    int end, 
    bcm_oam_ccm_traverse_cb_t cb, 
    void *user_data);

#endif /* __BCM_OAM_H__ */
