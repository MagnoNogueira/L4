/*
 * $Id: subport.h,v 1.4.6.2 Broadcom SDK $
 * 
 * $Copyright: Copyright 2008 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */

#ifndef __BCM_SUBPORT_H__
#define __BCM_SUBPORT_H__

#include <bcm/types.h>

/* Initialize the BCM subport module. */
extern int bcm_subport_init(
    int unit);

/* Detach the BCM subport module. */
extern int bcm_subport_cleanup(
    int unit);

/* Subport group create flags. */
#define BCM_SUBPORT_GROUP_WITH_ID   0x00000001 /* Add using the specified ID. */

/* bcm_subport_group_config_t */
typedef struct bcm_subport_group_config_s {
    uint32 flags;       /* BCM_SUBPORT_GROUP_xxx. */
    bcm_gport_t port;   /* Physical GPORT Identifier */
    bcm_vlan_t vlan;    /* VLAN the group is attached to */
    int if_class;       /* Interface class ID */
} bcm_subport_group_config_t;

/* bcm_subport_group_config_t_init */
extern void bcm_subport_group_config_t_init(
    bcm_subport_group_config_t *config);

/* bcm_subport_group_create */
extern int bcm_subport_group_create(
    int unit, 
    bcm_subport_group_config_t *config, 
    bcm_gport_t *group);

/* bcm_subport_group_destroy */
extern int bcm_subport_group_destroy(
    int unit, 
    bcm_gport_t group);

/* bcm_subport_group_get */
extern int bcm_subport_group_get(
    int unit, 
    bcm_gport_t group, 
    bcm_subport_group_config_t *config);

/* bcm_subport_config_t */
typedef struct bcm_subport_config_s {
    bcm_gport_t group;      /* Subport group */
    bcm_vlan_t pkt_vlan;    /* Packet 16-bit VLAN tag */
    int int_pri;            /* Internal Priority */
} bcm_subport_config_t;

/* bcm_subport_config_t_init */
extern void bcm_subport_config_t_init(
    bcm_subport_config_t *config);

/* bcm_subport_port_add */
extern int bcm_subport_port_add(
    int unit, 
    bcm_subport_config_t *config, 
    bcm_gport_t *port);

/* bcm_subport_port_delete */
extern int bcm_subport_port_delete(
    int unit, 
    bcm_gport_t port);

/* bcm_subport_port_get */
extern int bcm_subport_port_get(
    int unit, 
    bcm_gport_t port, 
    bcm_subport_config_t *config);

/* bcm_subport_port_traverse_cb */
typedef int (*bcm_subport_port_traverse_cb)(
    int unit, 
    bcm_gport_t port, 
    bcm_subport_config_t *config, 
    void *user_data);

/* bcm_subport_port_traverse */
extern int bcm_subport_port_traverse(
    int unit, 
    bcm_subport_port_traverse_cb cb, 
    void *user_data);

#endif /* __BCM_SUBPORT_H__ */
