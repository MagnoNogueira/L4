/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated from the registers file.
 * Edits to this file will be lost when it is regenerated.
 *
 * $Id: memregs.h,v 1.269.2.9.4.1 Broadcom SDK $
 * $Copyright: Copyright 2008 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 *
 * File:	memregs.h
 * Purpose:	Memory entry declarations, memory and register macros
 * Supports:	bcm5600_c0
 *		bcm5680_b0
 *		bcm5605_a0
 *		bcm5615_a0
 *		bcm5690_a0
 *		bcm5670_a0
 *		bcm5673_a0
 *		bcm5674_a0
 *		bcm5665_a0
 *		bcm5665_b0
 *		bcm5650_c0
 *		bcm5695_a0
 *		bcm5675_a0
 *		bcm56601_a0
 *		bcm56601_b0
 *		bcm56601_c0
 *		bcm56602_a0
 *		bcm56602_b0
 *		bcm56602_c0
 *		bcm56504_a0
 *		bcm56504_b0
 *		bcm56304_b0
 *		bcm56314_a0
 *		bcm56102_a0
 *		bcm56112_a0
 *		bcm56800_a0
 *		bcm56218_a0
 *		bcm56514_a0
 *		bcm56624_a0
 *		bcm56680_a0
 *		bcm56224_a0
 *		bcm56224_b0
 *		bcm56820_a0
 *		bcm56725_a0
 */

#ifndef _SOC_MEMREGS_H
#define _SOC_MEMREGS_H



#include <soc/mcm/allfields.h>
#include <soc/mcm/allenum.h>

/****************************************************************
 *
 * Each structure is an array big enough for the memory structures
 * in all supported chips.
 * These are accessed and manipulated by soc_mem functions
 * in soc/common.c and soc/mem.c
 *
 ****************************************************************/

#define MEM_ENTRY(tname, bytes) \
	typedef struct { \
		uint32 entry_data[BYTES2WORDS(bytes)]; \
	} tname 

MEM_ENTRY(alternate_emirror_bitmap_entry_t, 4);
MEM_ENTRY(arb_tdm_table_entry_t, 1);
MEM_ENTRY(arl_entry_t, 12);
MEM_ENTRY(arl_cnt_entry_t, 2);
MEM_ENTRY(bsafe_cmd_data_in_entry_t, 4);
MEM_ENTRY(bsafe_cmd_data_out_entry_t, 4);
MEM_ENTRY(c0_cell_entry_t, 80);
MEM_ENTRY(c0_cpu_rq_entry_t, 32);
MEM_ENTRY(c0_cpu_wq_entry_t, 32);
MEM_ENTRY(c0_rq_entry_t, 36);
MEM_ENTRY(c0_wq_entry_t, 36);
MEM_ENTRY(c1_cell_entry_t, 80);
MEM_ENTRY(c1_cpu_rq_entry_t, 32);
MEM_ENTRY(c1_cpu_wq_entry_t, 32);
MEM_ENTRY(c1_rq_entry_t, 36);
MEM_ENTRY(c1_wq_entry_t, 36);
MEM_ENTRY(c2_cell_entry_t, 80);
MEM_ENTRY(c2_rq_entry_t, 32);
MEM_ENTRY(c2_wq_entry_t, 32);
MEM_ENTRY(c3_rq_entry_t, 32);
MEM_ENTRY(c3_wq_entry_t, 32);
MEM_ENTRY(cell_buf_entry_t, 17);
MEM_ENTRY(command_memory_bse_entry_t, 80);
MEM_ENTRY(command_memory_cse_entry_t, 80);
MEM_ENTRY(command_memory_hse_entry_t, 80);
MEM_ENTRY(cpu_cos_map_entry_t, 18);
MEM_ENTRY(cpu_cos_map_data_only_entry_t, 1);
MEM_ENTRY(cpu_cos_map_only_entry_t, 17);
MEM_ENTRY(cpu_ts_map_entry_t, 1);
MEM_ENTRY(defip_entry_t, 30);
MEM_ENTRY(defip_all_entry_t, 3);
MEM_ENTRY(defip_entry_entry_t, 3);
MEM_ENTRY(defip_hi_entry_t, 3);
MEM_ENTRY(defip_hit_entry_t, 1);
MEM_ENTRY(defip_hit_hi_entry_t, 1);
MEM_ENTRY(defip_hit_lo_entry_t, 1);
MEM_ENTRY(defip_hi_all_entry_t, 3);
MEM_ENTRY(defip_lo_entry_t, 3);
MEM_ENTRY(defip_lo_all_entry_t, 3);
MEM_ENTRY(dscp_entry_t, 2);
MEM_ENTRY(dscp_priority_table_entry_t, 1);
MEM_ENTRY(dscp_table_entry_t, 2);
MEM_ENTRY(e2e_hol_status_entry_t, 64);
MEM_ENTRY(efp_counter_table_entry_t, 8);
MEM_ENTRY(efp_counter_table_x_entry_t, 8);
MEM_ENTRY(efp_counter_table_y_entry_t, 8);
MEM_ENTRY(efp_meter_table_entry_t, 9);
MEM_ENTRY(efp_meter_table_x_entry_t, 9);
MEM_ENTRY(efp_meter_table_y_entry_t, 9);
MEM_ENTRY(efp_policy_table_entry_t, 17);
MEM_ENTRY(efp_tcam_entry_t, 54);
MEM_ENTRY(egress_adjacent_mac_entry_t, 7);
MEM_ENTRY(egress_dscp_exp_entry_t, 2);
MEM_ENTRY(egress_ipmc_ls_entry_t, 10);
MEM_ENTRY(egress_ipmc_ms_entry_t, 10);
MEM_ENTRY(egress_ip_tunnel_entry_t, 10);
MEM_ENTRY(egress_spvlan_id_entry_t, 3);
MEM_ENTRY(egress_vlan_stg_entry_t, 3);
MEM_ENTRY(egr_dscp_ecn_map_entry_t, 1);
MEM_ENTRY(egr_dscp_table_entry_t, 1);
MEM_ENTRY(egr_em_mtp_index_entry_t, 2);
MEM_ENTRY(egr_erspan_entry_t, 43);
MEM_ENTRY(egr_im_mtp_index_entry_t, 2);
MEM_ENTRY(egr_ipfix_dscp_xlate_table_entry_t, 1);
MEM_ENTRY(egr_ipfix_eop_buffer_entry_t, 8);
MEM_ENTRY(egr_ipfix_export_fifo_entry_t, 34);
MEM_ENTRY(egr_ipfix_ipv4_mask_set_a_entry_t, 8);
MEM_ENTRY(egr_ipfix_ipv6_mask_set_a_entry_t, 32);
MEM_ENTRY(egr_ipfix_profile_entry_t, 2);
MEM_ENTRY(egr_ipfix_session_table_entry_t, 34);
MEM_ENTRY(egr_ipmc_entry_t, 1);
MEM_ENTRY(egr_ip_tunnel_entry_t, 24);
MEM_ENTRY(egr_ip_tunnel_ipv6_entry_t, 47);
MEM_ENTRY(egr_ip_tunnel_mpls_entry_t, 24);
MEM_ENTRY(egr_l3_intf_entry_t, 12);
MEM_ENTRY(egr_l3_next_hop_entry_t, 9);
MEM_ENTRY(egr_mac_da_profile_entry_t, 6);
MEM_ENTRY(egr_mask_entry_t, 8);
MEM_ENTRY(egr_mod_map_table_entry_t, 2);
MEM_ENTRY(egr_mpls_exp_mapping_1_entry_t, 1);
MEM_ENTRY(egr_mpls_exp_mapping_2_entry_t, 1);
MEM_ENTRY(egr_mpls_exp_pri_mapping_entry_t, 1);
MEM_ENTRY(egr_mpls_pri_mapping_entry_t, 1);
MEM_ENTRY(egr_mpls_vc_and_swap_label_table_entry_t, 8);
MEM_ENTRY(egr_perq_xmt_counters_entry_t, 8);
MEM_ENTRY(egr_pri_cng_map_entry_t, 1);
MEM_ENTRY(egr_pw_init_counters_entry_t, 9);
MEM_ENTRY(egr_vlan_entry_t, 16);
MEM_ENTRY(egr_vlan_stg_entry_t, 14);
MEM_ENTRY(egr_vlan_tag_action_profile_entry_t, 2);
MEM_ENTRY(egr_vlan_xlate_entry_t, 9);
MEM_ENTRY(egr_vlan_xlate_data_only_entry_t, 2);
MEM_ENTRY(egr_vlan_xlate_mask_entry_t, 7);
MEM_ENTRY(egr_vlan_xlate_only_entry_t, 5);
MEM_ENTRY(egr_vlan_xlate_scratch_entry_t, 9);
MEM_ENTRY(em_mtp_index_entry_t, 2);
MEM_ENTRY(esm_range_check_entry_t, 5);
MEM_ENTRY(et_inst_opc_table_entry_t, 1);
MEM_ENTRY(et_pa_xlat_entry_t, 5);
MEM_ENTRY(et_uinst_mem_entry_t, 21);
MEM_ENTRY(ext_acl144_tcam_entry_t, 36);
MEM_ENTRY(ext_acl144_tcam_ipv4_entry_t, 36);
MEM_ENTRY(ext_acl144_tcam_ipv6_entry_t, 36);
MEM_ENTRY(ext_acl144_tcam_l2_entry_t, 36);
MEM_ENTRY(ext_acl288_tcam_entry_t, 72);
MEM_ENTRY(ext_acl288_tcam_ipv4_entry_t, 72);
MEM_ENTRY(ext_acl288_tcam_l2_entry_t, 72);
MEM_ENTRY(ext_acl360_tcam_data_entry_t, 45);
MEM_ENTRY(ext_acl360_tcam_data_ipv6_short_entry_t, 45);
MEM_ENTRY(ext_acl360_tcam_mask_entry_t, 45);
MEM_ENTRY(ext_acl432_tcam_data_entry_t, 54);
MEM_ENTRY(ext_acl432_tcam_data_ipv6_long_entry_t, 54);
MEM_ENTRY(ext_acl432_tcam_data_l2_ipv4_entry_t, 54);
MEM_ENTRY(ext_acl432_tcam_data_l2_ipv6_entry_t, 54);
MEM_ENTRY(ext_acl432_tcam_mask_entry_t, 54);
MEM_ENTRY(ext_defip_data_entry_t, 5);
MEM_ENTRY(ext_defip_data_ipv4_entry_t, 5);
MEM_ENTRY(ext_defip_data_ipv6_64_entry_t, 5);
MEM_ENTRY(ext_defip_data_ipv6_128_entry_t, 5);
MEM_ENTRY(ext_dst_hit_bits_entry_t, 4);
MEM_ENTRY(ext_dst_hit_bits_ipv4_entry_t, 4);
MEM_ENTRY(ext_dst_hit_bits_ipv6_64_entry_t, 4);
MEM_ENTRY(ext_dst_hit_bits_ipv6_128_entry_t, 4);
MEM_ENTRY(ext_dst_hit_bits_l2_entry_t, 4);
MEM_ENTRY(ext_fp_cntr_entry_t, 9);
MEM_ENTRY(ext_fp_cntr8_entry_t, 72);
MEM_ENTRY(ext_fp_cntr8_acl144_ipv4_entry_t, 72);
MEM_ENTRY(ext_fp_cntr8_acl144_ipv6_entry_t, 72);
MEM_ENTRY(ext_fp_cntr8_acl144_l2_entry_t, 72);
MEM_ENTRY(ext_fp_cntr8_acl288_ipv4_entry_t, 72);
MEM_ENTRY(ext_fp_cntr8_acl288_l2_entry_t, 72);
MEM_ENTRY(ext_fp_cntr8_acl360_ipv6_short_entry_t, 72);
MEM_ENTRY(ext_fp_cntr8_acl432_ipv6_long_entry_t, 72);
MEM_ENTRY(ext_fp_cntr8_acl432_l2_ipv4_entry_t, 72);
MEM_ENTRY(ext_fp_cntr8_acl432_l2_ipv6_entry_t, 72);
MEM_ENTRY(ext_fp_cntr_acl144_ipv4_entry_t, 9);
MEM_ENTRY(ext_fp_cntr_acl144_ipv6_entry_t, 9);
MEM_ENTRY(ext_fp_cntr_acl144_l2_entry_t, 9);
MEM_ENTRY(ext_fp_cntr_acl288_ipv4_entry_t, 9);
MEM_ENTRY(ext_fp_cntr_acl288_l2_entry_t, 9);
MEM_ENTRY(ext_fp_cntr_acl360_ipv6_short_entry_t, 9);
MEM_ENTRY(ext_fp_cntr_acl432_ipv6_long_entry_t, 9);
MEM_ENTRY(ext_fp_cntr_acl432_l2_ipv4_entry_t, 9);
MEM_ENTRY(ext_fp_cntr_acl432_l2_ipv6_entry_t, 9);
MEM_ENTRY(ext_fp_policy_entry_t, 18);
MEM_ENTRY(ext_fp_policy_acl144_ipv4_entry_t, 18);
MEM_ENTRY(ext_fp_policy_acl144_ipv6_entry_t, 18);
MEM_ENTRY(ext_fp_policy_acl144_l2_entry_t, 18);
MEM_ENTRY(ext_fp_policy_acl288_ipv4_entry_t, 18);
MEM_ENTRY(ext_fp_policy_acl288_l2_entry_t, 18);
MEM_ENTRY(ext_fp_policy_acl360_ipv6_short_entry_t, 18);
MEM_ENTRY(ext_fp_policy_acl432_ipv6_long_entry_t, 18);
MEM_ENTRY(ext_fp_policy_acl432_l2_ipv4_entry_t, 18);
MEM_ENTRY(ext_fp_policy_acl432_l2_ipv6_entry_t, 18);
MEM_ENTRY(ext_ifp_action_profile_entry_t, 9);
MEM_ENTRY(ext_ipv4_defip_entry_t, 22);
MEM_ENTRY(ext_ipv4_defip_tcam_entry_t, 18);
MEM_ENTRY(ext_ipv6_128_defip_entry_t, 40);
MEM_ENTRY(ext_ipv6_128_defip_tcam_entry_t, 36);
MEM_ENTRY(ext_ipv6_64_defip_entry_t, 22);
MEM_ENTRY(ext_ipv6_64_defip_tcam_entry_t, 18);
MEM_ENTRY(ext_l2_entry_entry_t, 13);
MEM_ENTRY(ext_l2_entry_data_entry_t, 9);
MEM_ENTRY(ext_l2_entry_tcam_entry_t, 18);
MEM_ENTRY(ext_l2_mod_fifo_entry_t, 18);
MEM_ENTRY(ext_src_hit_bits_entry_t, 4);
MEM_ENTRY(ext_src_hit_bits_ipv4_entry_t, 4);
MEM_ENTRY(ext_src_hit_bits_ipv6_64_entry_t, 4);
MEM_ENTRY(ext_src_hit_bits_ipv6_128_entry_t, 4);
MEM_ENTRY(ext_src_hit_bits_l2_entry_t, 4);
MEM_ENTRY(fe_ipmc_vec_entry_t, 1);
MEM_ENTRY(fe_ipmc_vlan_entry_t, 2);
MEM_ENTRY(ffpcounters_entry_t, 4);
MEM_ENTRY(ffppacketcounters_entry_t, 3);
MEM_ENTRY(imask_entry_t, 76);
MEM_ENTRY(irule_entry_t, 76);
MEM_ENTRY(metering_entry_t, 16);
MEM_ENTRY(fp_counter_ext_entry_t, 8);
MEM_ENTRY(fp_counter_int_entry_t, 4);
MEM_ENTRY(fp_counter_table_entry_t, 8);
MEM_ENTRY(fp_counter_table_x_entry_t, 8);
MEM_ENTRY(fp_counter_table_y_entry_t, 8);
MEM_ENTRY(fp_external_entry_t, 52);
MEM_ENTRY(fp_global_mask_tcam_entry_t, 14);
MEM_ENTRY(fp_internal_entry_t, 66);
MEM_ENTRY(fp_meter_table_entry_t, 9);
MEM_ENTRY(fp_meter_table_ext_entry_t, 8);
MEM_ENTRY(fp_meter_table_int_entry_t, 8);
MEM_ENTRY(fp_meter_table_x_entry_t, 7);
MEM_ENTRY(fp_meter_table_y_entry_t, 7);
MEM_ENTRY(fp_policy_external_entry_t, 16);
MEM_ENTRY(fp_policy_internal_entry_t, 17);
MEM_ENTRY(fp_policy_table_entry_t, 27);
MEM_ENTRY(fp_port_field_sel_entry_t, 34);
MEM_ENTRY(fp_port_meter_map_entry_t, 3);
MEM_ENTRY(fp_range_check_entry_t, 5);
MEM_ENTRY(fp_sc_bcast_meter_table_entry_t, 7);
MEM_ENTRY(fp_sc_dlf_meter_table_entry_t, 7);
MEM_ENTRY(fp_sc_mcast_meter_table_entry_t, 7);
MEM_ENTRY(fp_sc_meter_table_entry_t, 7);
MEM_ENTRY(fp_slice_entry_port_sel_entry_t, 16);
MEM_ENTRY(fp_slice_key_control_entry_t, 18);
MEM_ENTRY(fp_slice_map_entry_t, 64);
MEM_ENTRY(fp_storm_control_meters_entry_t, 7);
MEM_ENTRY(fp_tcam_entry_t, 61);
MEM_ENTRY(fp_tcam_external_entry_t, 36);
MEM_ENTRY(fp_tcam_internal_entry_t, 50);
MEM_ENTRY(fp_tcam_plus_policy_entry_t, 64);
MEM_ENTRY(fp_tcam_x_entry_t, 61);
MEM_ENTRY(fp_tcam_y_entry_t, 61);
MEM_ENTRY(fp_tcp_udp_port_range_entry_t, 9);
MEM_ENTRY(fp_udf_offset_entry_t, 9);
MEM_ENTRY(gbp_entry_t, 16);
MEM_ENTRY(ge_ipmc_vec_entry_t, 4);
MEM_ENTRY(ge_ipmc_vlan_entry_t, 2);
MEM_ENTRY(ffp_in_profile_counters_entry_t, 4);
MEM_ENTRY(ffp_out_profile_counters_entry_t, 4);
MEM_ENTRY(irulelookup_entry_t, 36);
MEM_ENTRY(irule_test0_entry_t, 48);
MEM_ENTRY(irule_test1_entry_t, 48);
MEM_ENTRY(irule_test2_entry_t, 48);
MEM_ENTRY(irule_test3_entry_t, 48);
MEM_ENTRY(hashinput_entry_t, 10);
MEM_ENTRY(hash_trap_info_entry_t, 11);
MEM_ENTRY(hg_port_table_entry_t, 11);
MEM_ENTRY(hg_trunk_failover_set_entry_t, 11);
MEM_ENTRY(ifp_port_field_sel_entry_t, 34);
MEM_ENTRY(ifp_redirection_profile_entry_t, 11);
MEM_ENTRY(igr_vlan_range_tbl_entry_t, 18);
MEM_ENTRY(igr_vlan_xlate_entry_t, 7);
MEM_ENTRY(im_mtp_index_entry_t, 2);
MEM_ENTRY(ing_dvp_table_entry_t, 2);
MEM_ENTRY(ing_ipfix_dscp_xlate_table_entry_t, 1);
MEM_ENTRY(ing_ipfix_eop_buffer_entry_t, 8);
MEM_ENTRY(ing_ipfix_export_fifo_entry_t, 34);
MEM_ENTRY(ing_ipfix_ipv4_mask_set_a_entry_t, 8);
MEM_ENTRY(ing_ipfix_ipv4_mask_set_b_entry_t, 8);
MEM_ENTRY(ing_ipfix_ipv6_mask_set_a_entry_t, 32);
MEM_ENTRY(ing_ipfix_ipv6_mask_set_b_entry_t, 32);
MEM_ENTRY(ing_ipfix_profile_entry_t, 2);
MEM_ENTRY(ing_ipfix_session_table_entry_t, 34);
MEM_ENTRY(ing_l3_next_hop_entry_t, 5);
MEM_ENTRY(ing_l3_next_hop_a_entry_t, 5);
MEM_ENTRY(ing_l3_next_hop_b_entry_t, 2);
MEM_ENTRY(ing_mod_map_table_entry_t, 10);
MEM_ENTRY(ing_mpls_exp_mapping_entry_t, 1);
MEM_ENTRY(ing_pri_cng_map_entry_t, 1);
MEM_ENTRY(ing_pw_term_counters_entry_t, 9);
MEM_ENTRY(ing_pw_term_seq_num_entry_t, 2);
MEM_ENTRY(ing_vlan_range_entry_t, 24);
MEM_ENTRY(ing_vlan_tag_action_profile_entry_t, 3);
MEM_ENTRY(initial_ing_l3_next_hop_entry_t, 3);
MEM_ENTRY(initial_l3_ecmp_entry_t, 2);
MEM_ENTRY(initial_l3_ecmp_count_entry_t, 1);
MEM_ENTRY(ipmc_group_v4_entry_t, 13);
MEM_ENTRY(ipmc_group_v6_entry_t, 46);
MEM_ENTRY(iport_table_entry_t, 22);
MEM_ENTRY(ipv4_in_ipv6_prefix_match_table_entry_t, 13);
MEM_ENTRY(ipv6_proxy_enable_table_entry_t, 1);
MEM_ENTRY(l2mc_entry_t, 8);
MEM_ENTRY(l2mc_table_entry_t, 2);
MEM_ENTRY(l2x_entry_t, 14);
MEM_ENTRY(l2x_base_entry_t, 11);
MEM_ENTRY(l2x_hit_entry_t, 1);
MEM_ENTRY(l2x_mc_entry_t, 8);
MEM_ENTRY(l2x_parity_entry_t, 1);
MEM_ENTRY(l2x_static_entry_t, 1);
MEM_ENTRY(l2x_valid_entry_t, 1);
MEM_ENTRY(l2_entry_external_entry_t, 12);
MEM_ENTRY(l2_entry_internal_entry_t, 13);
MEM_ENTRY(l2_entry_only_entry_t, 13);
MEM_ENTRY(l2_entry_overflow_entry_t, 14);
MEM_ENTRY(l2_entry_scratch_entry_t, 14);
MEM_ENTRY(l2_hitda_only_entry_t, 1);
MEM_ENTRY(l2_hitsa_only_entry_t, 2);
MEM_ENTRY(l2_mod_fifo_entry_t, 21);
MEM_ENTRY(l2_user_entry_entry_t, 21);
MEM_ENTRY(l2_user_entry_data_entry_t, 4);
MEM_ENTRY(l2_user_entry_data_only_entry_t, 4);
MEM_ENTRY(l2_user_entry_only_entry_t, 17);
MEM_ENTRY(l2_user_entry_tcam_entry_t, 17);
MEM_ENTRY(l3intf_entry_t, 20);
MEM_ENTRY(l3intf_egr_filter_list_entry_t, 1);
MEM_ENTRY(l3intf_igr_filter_list_entry_t, 1);
MEM_ENTRY(l3intf_qos_entry_t, 1);
MEM_ENTRY(l3x_entry_t, 14);
MEM_ENTRY(l3x_base_entry_t, 14);
MEM_ENTRY(l3x_hit_entry_t, 1);
MEM_ENTRY(l3x_parity_entry_t, 1);
MEM_ENTRY(l3x_valid_entry_t, 1);
MEM_ENTRY(defip_128_entry_t, 39);
MEM_ENTRY(defip_128_data_only_entry_t, 4);
MEM_ENTRY(defip_128_hit_only_entry_t, 1);
MEM_ENTRY(defip_128_only_entry_t, 36);
MEM_ENTRY(defip_alg_entry_t, 17);
MEM_ENTRY(defip_cam_entry_t, 26);
MEM_ENTRY(defip_data_entry_t, 8);
MEM_ENTRY(defip_data_only_entry_t, 7);
MEM_ENTRY(defip_hit_only_entry_t, 1);
MEM_ENTRY(defip_only_entry_t, 23);
MEM_ENTRY(defip_tcam_entry_t, 18);
MEM_ENTRY(def_ip_entry_t, 13);
MEM_ENTRY(ecmp_entry_t, 2);
MEM_ENTRY(ecmp_count_entry_t, 1);
MEM_ENTRY(l3_entry_hit_only_entry_t, 2);
MEM_ENTRY(l3_entry_ipv4_multicast_entry_t, 22);
MEM_ENTRY(l3_entry_ipv4_multicast_scratch_entry_t, 22);
MEM_ENTRY(l3_entry_ipv4_unicast_entry_t, 15);
MEM_ENTRY(l3_entry_ipv4_unicast_scratch_entry_t, 15);
MEM_ENTRY(l3_entry_ipv6_multicast_entry_t, 58);
MEM_ENTRY(l3_entry_ipv6_multicast_scratch_entry_t, 58);
MEM_ENTRY(l3_entry_ipv6_unicast_entry_t, 29);
MEM_ENTRY(l3_entry_ipv6_unicast_scratch_entry_t, 29);
MEM_ENTRY(l3_entry_only_entry_t, 15);
MEM_ENTRY(l3_entry_v4_entry_t, 13);
MEM_ENTRY(l3_entry_v6_entry_t, 25);
MEM_ENTRY(l3_entry_valid_only_entry_t, 2);
MEM_ENTRY(iif_entry_t, 4);
MEM_ENTRY(intf_entry_t, 8);
MEM_ENTRY(ipmc_entry_t, 24);
MEM_ENTRY(l3_entry_t, 13);
MEM_ENTRY(lpm_hitbit_entry_t, 5);
MEM_ENTRY(mtu_values_entry_t, 2);
MEM_ENTRY(tunnel_entry_t, 28);
MEM_ENTRY(tunnel_data_entry_t, 6);
MEM_ENTRY(tunnel_tcam_entry_t, 13);
MEM_ENTRY(lport_tab_entry_t, 22);
MEM_ENTRY(mac_block_entry_t, 8);
MEM_ENTRY(mac_limit_port_map_table_entry_t, 1);
MEM_ENTRY(mac_limit_trunk_map_table_entry_t, 1);
MEM_ENTRY(marl_entry_t, 20);
MEM_ENTRY(mcu_channel3_data_entry_t, 80);
MEM_ENTRY(mem_egr_modmap_entry_t, 2);
MEM_ENTRY(mem_ingbuf_entry_t, 9);
MEM_ENTRY(mem_ing_modmap_entry_t, 8);
MEM_ENTRY(mem_ing_srcmodblk_entry_t, 2);
MEM_ENTRY(mem_ipmc_entry_t, 2);
MEM_ENTRY(mem_lla_entry_t, 4);
MEM_ENTRY(mem_mc_entry_t, 3);
MEM_ENTRY(mem_pp_entry_t, 85);
MEM_ENTRY(mem_trunk_port_pool_entry_t, 1);
MEM_ENTRY(mem_uc_entry_t, 2);
MEM_ENTRY(mem_vid_entry_t, 2);
MEM_ENTRY(mem_xq_entry_t, 8);
MEM_ENTRY(mem_xq_ptrs_entry_t, 4);
MEM_ENTRY(mmu_aging_ctr_entry_t, 4);
MEM_ENTRY(mmu_aging_exp_entry_t, 2);
MEM_ENTRY(mmu_cbpcellheader_entry_t, 5);
MEM_ENTRY(mmu_cbpdata0_entry_t, 16);
MEM_ENTRY(mmu_cbpdata1_entry_t, 16);
MEM_ENTRY(mmu_cbpdata2_entry_t, 16);
MEM_ENTRY(mmu_cbpdata3_entry_t, 16);
MEM_ENTRY(mmu_cbpdata4_entry_t, 16);
MEM_ENTRY(mmu_cbpdata5_entry_t, 16);
MEM_ENTRY(mmu_cbpdata6_entry_t, 16);
MEM_ENTRY(mmu_cbpdata7_entry_t, 16);
MEM_ENTRY(mmu_cbpdata8_entry_t, 8);
MEM_ENTRY(mmu_cbpdata9_entry_t, 8);
MEM_ENTRY(mmu_cbpdata10_entry_t, 8);
MEM_ENTRY(mmu_cbpdata11_entry_t, 8);
MEM_ENTRY(mmu_cbpdata12_entry_t, 8);
MEM_ENTRY(mmu_cbpdata13_entry_t, 8);
MEM_ENTRY(mmu_cbpdata14_entry_t, 8);
MEM_ENTRY(mmu_cbpdata15_entry_t, 8);
MEM_ENTRY(mmu_cbpdata16_entry_t, 4);
MEM_ENTRY(mmu_cbpdata17_entry_t, 4);
MEM_ENTRY(mmu_cbpdata18_entry_t, 4);
MEM_ENTRY(mmu_cbpdata19_entry_t, 4);
MEM_ENTRY(mmu_cbpdata20_entry_t, 4);
MEM_ENTRY(mmu_cbpdata21_entry_t, 4);
MEM_ENTRY(mmu_cbpdata22_entry_t, 4);
MEM_ENTRY(mmu_cbpdata23_entry_t, 4);
MEM_ENTRY(mmu_cbpdata24_entry_t, 4);
MEM_ENTRY(mmu_cbpdata25_entry_t, 4);
MEM_ENTRY(mmu_cbpdata26_entry_t, 4);
MEM_ENTRY(mmu_cbpdata27_entry_t, 4);
MEM_ENTRY(mmu_cbpdata28_entry_t, 4);
MEM_ENTRY(mmu_cbpdata29_entry_t, 4);
MEM_ENTRY(mmu_cbpdata30_entry_t, 4);
MEM_ENTRY(mmu_cbpdata31_entry_t, 4);
MEM_ENTRY(mmu_cbppktheader0_entry_t, 6);
MEM_ENTRY(mmu_cbppktheader1_entry_t, 6);
MEM_ENTRY(mmu_cbppktheader2_entry_t, 2);
MEM_ENTRY(mmu_cbppktheader0_mem0_entry_t, 10);
MEM_ENTRY(mmu_cbppktheader0_mem1_entry_t, 10);
MEM_ENTRY(mmu_cbppktheader0_mem2_entry_t, 10);
MEM_ENTRY(mmu_cbppktheader0_mem3_entry_t, 4);
MEM_ENTRY(mmu_cbppktheader1_mem0_entry_t, 7);
MEM_ENTRY(mmu_cbppktheader1_mem1_entry_t, 7);
MEM_ENTRY(mmu_cbppktheader1_mem2_entry_t, 7);
MEM_ENTRY(mmu_cbppktheadercpu_entry_t, 8);
MEM_ENTRY(mmu_cbppktlength_entry_t, 2);
MEM_ENTRY(mmu_ccp_entry_t, 1);
MEM_ENTRY(mmu_ccptr_entry_t, 2);
MEM_ENTRY(mmu_ccp_mem_entry_t, 3);
MEM_ENTRY(mmu_cellchk_entry_t, 2);
MEM_ENTRY(mmu_celllink_entry_t, 3);
MEM_ENTRY(mmu_cellptrswap_cg0_ch0_hi_entry_t, 16);
MEM_ENTRY(mmu_cellptrswap_cg0_ch0_lo_entry_t, 16);
MEM_ENTRY(mmu_cellptrswap_cg0_ch1_hi_entry_t, 16);
MEM_ENTRY(mmu_cellptrswap_cg0_ch1_lo_entry_t, 16);
MEM_ENTRY(mmu_cellptrswap_cg1_ch0_hi_entry_t, 16);
MEM_ENTRY(mmu_cellptrswap_cg1_ch0_lo_entry_t, 16);
MEM_ENTRY(mmu_cellptrswap_cg1_ch1_lo_entry_t, 16);
MEM_ENTRY(mmu_cellptrswap_ch0_hi_entry_t, 16);
MEM_ENTRY(mmu_cellptrswap_ch0_lo_entry_t, 16);
MEM_ENTRY(mmu_cellptrswap_ch1_hi_entry_t, 16);
MEM_ENTRY(mmu_cellptrswap_ch1_lo_entry_t, 16);
MEM_ENTRY(mmu_cfap_entry_t, 2);
MEM_ENTRY(mmu_cfap_mem_entry_t, 5);
MEM_ENTRY(mmu_firstcellptr_cg0_entry_t, 3);
MEM_ENTRY(mmu_firstcellptr_cg1_entry_t, 3);
MEM_ENTRY(mmu_ibpstatus_entry_t, 1);
MEM_ENTRY(mmu_ibs_entry_t, 1);
MEM_ENTRY(mmu_ibs_cg0_ch0_entry_t, 1);
MEM_ENTRY(mmu_ibs_cg0_ch1_entry_t, 1);
MEM_ENTRY(mmu_ibs_cg1_ch0_entry_t, 1);
MEM_ENTRY(mmu_ibs_cg1_ch1_entry_t, 1);
MEM_ENTRY(mmu_ingpktcelllimitibp_entry_t, 1);
MEM_ENTRY(mmu_ingpktcelluse_entry_t, 3);
MEM_ENTRY(mmu_ipmcbitmap_cg0_entry_t, 9);
MEM_ENTRY(mmu_ipmcbitmap_cg1_entry_t, 9);
MEM_ENTRY(mmu_ipmc_group_tbl0_entry_t, 14);
MEM_ENTRY(mmu_ipmc_group_tbl1_entry_t, 14);
MEM_ENTRY(mmu_ipmc_group_tbl2_entry_t, 13);
MEM_ENTRY(mmu_ipmc_group_tbl3_entry_t, 11);
MEM_ENTRY(mmu_ipmc_group_tbl4_entry_t, 11);
MEM_ENTRY(mmu_ipmc_group_tbl5_entry_t, 11);
MEM_ENTRY(mmu_ipmc_group_tbl6_entry_t, 11);
MEM_ENTRY(mmu_ipmc_group_tbl7_entry_t, 11);
MEM_ENTRY(mmu_ipmc_group_tbl8_entry_t, 9);
MEM_ENTRY(mmu_ipmc_index_entry_t, 11);
MEM_ENTRY(mmu_ipmc_ptr_entry_t, 20);
MEM_ENTRY(mmu_ipmc_rep_10g_memory_entry_t, 2);
MEM_ENTRY(mmu_ipmc_vlan_tbl_entry_t, 11);
MEM_ENTRY(mmu_ipmc_vlan_tbl_mem0_entry_t, 6);
MEM_ENTRY(mmu_ipmc_vlan_tbl_mem1_entry_t, 6);
MEM_ENTRY(mmu_max_bucket_gport_entry_t, 8);
MEM_ENTRY(mmu_memories1_aging_ctr_entry_t, 3);
MEM_ENTRY(mmu_memories1_aging_exp_entry_t, 1);
MEM_ENTRY(mmu_memories1_e2ehol_bm_0_entry_t, 8);
MEM_ENTRY(mmu_memories1_e2ehol_bm_1_entry_t, 8);
MEM_ENTRY(mmu_memories1_e2ehol_bm_2_entry_t, 8);
MEM_ENTRY(mmu_memories1_ipmcrep_entry_t, 1);
MEM_ENTRY(mmu_memories1_ipmc_group_tbl_entry_t, 17);
MEM_ENTRY(mmu_memories1_ipmc_vlan_tbl_entry_t, 11);
MEM_ENTRY(mmu_memories1_mstp_tbl_entry_t, 1);
MEM_ENTRY(mmu_memories1_st_port_tbl_entry_t, 2);
MEM_ENTRY(mmu_memories2_egr_trunk_map_entry_t, 4);
MEM_ENTRY(mmu_memories2_src_trunk_map_entry_t, 1);
MEM_ENTRY(mmu_min_bucket_gport_entry_t, 8);
MEM_ENTRY(mmu_pbm_cos_ccptr_status_cg0_entry_t, 10);
MEM_ENTRY(mmu_pbm_cos_ccptr_status_cg1_entry_t, 10);
MEM_ENTRY(mmu_pfap_mem_entry_t, 5);
MEM_ENTRY(mmu_pktlink0_entry_t, 3);
MEM_ENTRY(mmu_pktlink1_entry_t, 3);
MEM_ENTRY(mmu_pktlink2_entry_t, 3);
MEM_ENTRY(mmu_pktlink3_entry_t, 3);
MEM_ENTRY(mmu_pktlink4_entry_t, 3);
MEM_ENTRY(mmu_pktlink5_entry_t, 3);
MEM_ENTRY(mmu_pktlink6_entry_t, 3);
MEM_ENTRY(mmu_pktlink7_entry_t, 3);
MEM_ENTRY(mmu_pktlink8_entry_t, 3);
MEM_ENTRY(mmu_pktlink9_entry_t, 3);
MEM_ENTRY(mmu_pktlink10_entry_t, 3);
MEM_ENTRY(mmu_pktlink11_entry_t, 3);
MEM_ENTRY(mmu_pktlink12_entry_t, 3);
MEM_ENTRY(mmu_pktlink13_entry_t, 3);
MEM_ENTRY(mmu_pktlink14_entry_t, 3);
MEM_ENTRY(mmu_pktlink15_entry_t, 3);
MEM_ENTRY(mmu_pktlink16_entry_t, 3);
MEM_ENTRY(mmu_pktlink17_entry_t, 3);
MEM_ENTRY(mmu_pktlink18_entry_t, 3);
MEM_ENTRY(mmu_pktlink19_entry_t, 3);
MEM_ENTRY(mmu_pktlink20_entry_t, 3);
MEM_ENTRY(mmu_pktlink21_entry_t, 3);
MEM_ENTRY(mmu_pktlink22_entry_t, 3);
MEM_ENTRY(mmu_pktlink23_entry_t, 3);
MEM_ENTRY(mmu_pktlink24_entry_t, 3);
MEM_ENTRY(mmu_pktlink25_entry_t, 3);
MEM_ENTRY(mmu_pktlink26_entry_t, 3);
MEM_ENTRY(mmu_pktlink27_entry_t, 3);
MEM_ENTRY(mmu_pktlink28_entry_t, 3);
MEM_ENTRY(mmu_pktlink29_entry_t, 3);
MEM_ENTRY(mmu_pktlink30_entry_t, 3);
MEM_ENTRY(mmu_pktlink31_entry_t, 3);
MEM_ENTRY(mmu_pktlink32_entry_t, 3);
MEM_ENTRY(mmu_pktlink33_entry_t, 3);
MEM_ENTRY(mmu_pktlink34_entry_t, 3);
MEM_ENTRY(mmu_pktlink35_entry_t, 3);
MEM_ENTRY(mmu_pktlink36_entry_t, 3);
MEM_ENTRY(mmu_pktlink37_entry_t, 3);
MEM_ENTRY(mmu_pktlink38_entry_t, 3);
MEM_ENTRY(mmu_pktlink39_entry_t, 3);
MEM_ENTRY(mmu_pktlink40_entry_t, 3);
MEM_ENTRY(mmu_pktlink41_entry_t, 3);
MEM_ENTRY(mmu_pktlink42_entry_t, 3);
MEM_ENTRY(mmu_pktlink43_entry_t, 3);
MEM_ENTRY(mmu_pktlink44_entry_t, 3);
MEM_ENTRY(mmu_pktlink45_entry_t, 3);
MEM_ENTRY(mmu_pktlink46_entry_t, 3);
MEM_ENTRY(mmu_pktlink47_entry_t, 3);
MEM_ENTRY(mmu_pktlink48_entry_t, 3);
MEM_ENTRY(mmu_pktlink49_entry_t, 3);
MEM_ENTRY(mmu_pktlink50_entry_t, 3);
MEM_ENTRY(mmu_pktlink51_entry_t, 3);
MEM_ENTRY(mmu_pktlink52_entry_t, 3);
MEM_ENTRY(mmu_pktlink53_entry_t, 3);
MEM_ENTRY(mmu_ptrcache_cg0_ch0_entry_t, 9);
MEM_ENTRY(mmu_ptrcache_cg0_ch1_entry_t, 9);
MEM_ENTRY(mmu_ptrcache_cg1_ch0_entry_t, 9);
MEM_ENTRY(mmu_ptrcache_cg1_ch1_entry_t, 9);
MEM_ENTRY(mmu_ptrcache_ch0_entry_t, 9);
MEM_ENTRY(mmu_ptrcache_ch1_entry_t, 9);
MEM_ENTRY(mmu_wait_queue_bitmap_cg0_ch0_entry_t, 9);
MEM_ENTRY(mmu_wait_queue_bitmap_cg0_ch1_entry_t, 9);
MEM_ENTRY(mmu_wait_queue_bitmap_cg1_ch0_entry_t, 9);
MEM_ENTRY(mmu_wait_queue_bitmap_cg1_ch1_entry_t, 9);
MEM_ENTRY(mmu_wait_queue_cg0_ch0_hi_entry_t, 16);
MEM_ENTRY(mmu_wait_queue_cg0_ch0_lo_entry_t, 16);
MEM_ENTRY(mmu_wait_queue_cg0_ch1_hi_entry_t, 16);
MEM_ENTRY(mmu_wait_queue_cg0_ch1_lo_entry_t, 16);
MEM_ENTRY(mmu_wait_queue_cg1_ch0_hi_entry_t, 16);
MEM_ENTRY(mmu_wait_queue_cg1_ch0_lo_entry_t, 16);
MEM_ENTRY(mmu_wait_queue_cg1_ch1_hi_entry_t, 16);
MEM_ENTRY(mmu_wait_queue_cg1_ch1_lo_entry_t, 16);
MEM_ENTRY(mmu_wait_queue_ch0_hi_entry_t, 16);
MEM_ENTRY(mmu_wait_queue_ch0_lo_entry_t, 16);
MEM_ENTRY(mmu_wait_queue_ch1_hi_entry_t, 16);
MEM_ENTRY(mmu_wait_queue_ch1_lo_entry_t, 16);
MEM_ENTRY(mmu_wred_cfg_cell_entry_t, 7);
MEM_ENTRY(mmu_wred_cfg_packet_entry_t, 7);
MEM_ENTRY(mmu_wred_port_cfg_cell_entry_t, 7);
MEM_ENTRY(mmu_wred_port_cfg_packet_entry_t, 7);
MEM_ENTRY(mmu_wred_port_thd_0_cell_entry_t, 8);
MEM_ENTRY(mmu_wred_port_thd_0_packet_entry_t, 8);
MEM_ENTRY(mmu_wred_port_thd_1_cell_entry_t, 8);
MEM_ENTRY(mmu_wred_port_thd_1_packet_entry_t, 8);
MEM_ENTRY(mmu_wred_thd_0_cell_entry_t, 8);
MEM_ENTRY(mmu_wred_thd_0_packet_entry_t, 8);
MEM_ENTRY(mmu_wred_thd_1_cell_entry_t, 8);
MEM_ENTRY(mmu_wred_thd_1_packet_entry_t, 8);
MEM_ENTRY(mmu_xq0_entry_t, 21);
MEM_ENTRY(mmu_xq1_entry_t, 16);
MEM_ENTRY(mmu_xq2_entry_t, 16);
MEM_ENTRY(mmu_xq3_entry_t, 16);
MEM_ENTRY(mmu_xq4_entry_t, 16);
MEM_ENTRY(mmu_xq5_entry_t, 16);
MEM_ENTRY(mmu_xq6_entry_t, 16);
MEM_ENTRY(mmu_xq7_entry_t, 16);
MEM_ENTRY(mmu_xq8_entry_t, 16);
MEM_ENTRY(mmu_xq9_entry_t, 16);
MEM_ENTRY(mmu_xq10_entry_t, 16);
MEM_ENTRY(mmu_xq11_entry_t, 16);
MEM_ENTRY(mmu_xq12_entry_t, 16);
MEM_ENTRY(mmu_xq13_entry_t, 16);
MEM_ENTRY(mmu_xq14_entry_t, 5);
MEM_ENTRY(mmu_xq15_entry_t, 5);
MEM_ENTRY(mmu_xq16_entry_t, 5);
MEM_ENTRY(mmu_xq17_entry_t, 5);
MEM_ENTRY(mmu_xq18_entry_t, 5);
MEM_ENTRY(mmu_xq19_entry_t, 5);
MEM_ENTRY(mmu_xq20_entry_t, 5);
MEM_ENTRY(mmu_xq21_entry_t, 5);
MEM_ENTRY(mmu_xq22_entry_t, 5);
MEM_ENTRY(mmu_xq23_entry_t, 5);
MEM_ENTRY(mmu_xq24_entry_t, 11);
MEM_ENTRY(mmu_xq25_entry_t, 11);
MEM_ENTRY(mmu_xq26_entry_t, 11);
MEM_ENTRY(mmu_xq27_entry_t, 11);
MEM_ENTRY(mmu_xq28_entry_t, 15);
MEM_ENTRY(mmu_xq29_entry_t, 5);
MEM_ENTRY(mmu_xq30_entry_t, 3);
MEM_ENTRY(mmu_xq31_entry_t, 3);
MEM_ENTRY(mmu_xq32_entry_t, 3);
MEM_ENTRY(mmu_xq33_entry_t, 3);
MEM_ENTRY(mmu_xq34_entry_t, 3);
MEM_ENTRY(mmu_xq35_entry_t, 3);
MEM_ENTRY(mmu_xq36_entry_t, 3);
MEM_ENTRY(mmu_xq37_entry_t, 3);
MEM_ENTRY(mmu_xq38_entry_t, 3);
MEM_ENTRY(mmu_xq39_entry_t, 3);
MEM_ENTRY(mmu_xq40_entry_t, 3);
MEM_ENTRY(mmu_xq41_entry_t, 3);
MEM_ENTRY(mmu_xq42_entry_t, 3);
MEM_ENTRY(mmu_xq43_entry_t, 3);
MEM_ENTRY(mmu_xq44_entry_t, 3);
MEM_ENTRY(mmu_xq45_entry_t, 3);
MEM_ENTRY(mmu_xq46_entry_t, 3);
MEM_ENTRY(mmu_xq47_entry_t, 3);
MEM_ENTRY(mmu_xq48_entry_t, 3);
MEM_ENTRY(mmu_xq49_entry_t, 3);
MEM_ENTRY(mmu_xq50_entry_t, 3);
MEM_ENTRY(mmu_xq51_entry_t, 3);
MEM_ENTRY(mmu_xq52_entry_t, 3);
MEM_ENTRY(mmu_xq53_entry_t, 3);
MEM_ENTRY(mmu_xq54_entry_t, 2);
MEM_ENTRY(mmu_xq55_entry_t, 2);
MEM_ENTRY(modport_map_entry_t, 5);
MEM_ENTRY(modport_map_em_entry_t, 5);
MEM_ENTRY(modport_map_im_entry_t, 5);
MEM_ENTRY(modport_map_sw_entry_t, 5);
MEM_ENTRY(mpls_entry_entry_t, 11);
MEM_ENTRY(mpls_entry_scratch_entry_t, 11);
MEM_ENTRY(mpls_exp_entry_t, 1);
MEM_ENTRY(mpls_station_tcam_entry_t, 16);
MEM_ENTRY(my_station_entry_t, 8);
MEM_ENTRY(next_hop_ext_entry_t, 12);
MEM_ENTRY(next_hop_int_entry_t, 13);
MEM_ENTRY(nonucast_trunk_block_mask_entry_t, 7);
MEM_ENTRY(port_cbl_table_entry_t, 1);
MEM_ENTRY(port_cos_map_entry_t, 1);
MEM_ENTRY(port_lag_failover_set_entry_t, 15);
MEM_ENTRY(port_or_trunk_mac_action_entry_t, 1);
MEM_ENTRY(port_or_trunk_mac_count_entry_t, 2);
MEM_ENTRY(port_or_trunk_mac_limit_entry_t, 3);
MEM_ENTRY(port_tab_entry_t, 22);
MEM_ENTRY(port_tab1_entry_t, 5);
MEM_ENTRY(pr_tab_entry_t, 5);
MEM_ENTRY(ptable_entry_t, 24);
MEM_ENTRY(source_trunk_map_table_entry_t, 6);
MEM_ENTRY(source_vp_entry_t, 5);
MEM_ENTRY(src_modid_block_entry_t, 7);
MEM_ENTRY(stg_entry_t, 7);
MEM_ENTRY(stg_tab_entry_t, 15);
MEM_ENTRY(system_config_table_entry_t, 1);
MEM_ENTRY(tcp_fn_entry_t, 2);
MEM_ENTRY(tos_fn_entry_t, 2);
MEM_ENTRY(trnk_dst_entry_t, 2);
MEM_ENTRY(trunk32_config_table_entry_t, 1);
MEM_ENTRY(trunk32_port_table_entry_t, 5);
MEM_ENTRY(trunk_bitmap_entry_t, 8);
MEM_ENTRY(trunk_cbl_table_entry_t, 1);
MEM_ENTRY(trunk_egr_mask_entry_t, 8);
MEM_ENTRY(trunk_group_entry_t, 16);
MEM_ENTRY(trunk_vlan_range_idx_entry_t, 1);
MEM_ENTRY(tbmap_entry_t, 4);
MEM_ENTRY(ttr_entry_t, 12);
MEM_ENTRY(ttl_fn_entry_t, 2);
MEM_ENTRY(udf_offset_entry_t, 6);
MEM_ENTRY(vfi_entry_t, 2);
MEM_ENTRY(vfi_bitmap_entry_t, 2);
MEM_ENTRY(vfp_policy_table_entry_t, 12);
MEM_ENTRY(vfp_tcam_entry_t, 54);
MEM_ENTRY(vlan_cos_map_entry_t, 1);
MEM_ENTRY(vlan_data_entry_t, 2);
MEM_ENTRY(vlan_mac_entry_t, 11);
MEM_ENTRY(vlan_mac_entry_entry_t, 9);
MEM_ENTRY(vlan_mac_scratch_entry_t, 11);
MEM_ENTRY(vlan_mac_valid_entry_t, 1);
MEM_ENTRY(vlan_or_vfi_mac_count_entry_t, 2);
MEM_ENTRY(vlan_or_vfi_mac_limit_entry_t, 3);
MEM_ENTRY(vlan_profile_2_entry_t, 15);
MEM_ENTRY(vlan_profile_tab_entry_t, 3);
MEM_ENTRY(vlan_protocol_entry_t, 3);
MEM_ENTRY(vlan_protocol_data_entry_t, 5);
MEM_ENTRY(vlan_range_idx_entry_t, 1);
MEM_ENTRY(vlan_subnet_entry_t, 21);
MEM_ENTRY(vlan_subnet_data_entry_t, 2);
MEM_ENTRY(vlan_subnet_data_only_entry_t, 5);
MEM_ENTRY(vlan_subnet_only_entry_t, 17);
MEM_ENTRY(vlan_subnet_tcam_entry_t, 17);
MEM_ENTRY(vlan_tab_entry_t, 16);
MEM_ENTRY(vlan_xlate_entry_t, 11);
MEM_ENTRY(vlan_xlate_data_only_entry_t, 3);
MEM_ENTRY(vlan_xlate_mask_entry_t, 7);
MEM_ENTRY(vlan_xlate_only_entry_t, 5);
MEM_ENTRY(vlan_xlate_scratch_entry_t, 11);
MEM_ENTRY(vplstable_entry_t, 3);
MEM_ENTRY(vpls_bitmap_table_entry_t, 16);
MEM_ENTRY(vpls_label_entry_t, 7);
MEM_ENTRY(vrf_vfi_intf_entry_t, 7);
MEM_ENTRY(vtable_entry_t, 16);
MEM_ENTRY(xffpcounters_entry_t, 5);
MEM_ENTRY(xffpcounters_test0_entry_t, 5);
MEM_ENTRY(xffpcounters_test1_entry_t, 5);
MEM_ENTRY(xffpipbytecounters_entry_t, 5);
MEM_ENTRY(xffpipbytecounters_test0_entry_t, 5);
MEM_ENTRY(xffpipbytecounters_test1_entry_t, 5);
MEM_ENTRY(xffpippacketcounters_entry_t, 5);
MEM_ENTRY(xffpippacketcounters_test0_entry_t, 5);
MEM_ENTRY(xffpippacketcounters_test1_entry_t, 5);
MEM_ENTRY(xffpopbytecounters_entry_t, 5);
MEM_ENTRY(xffpopbytecounters_test0_entry_t, 5);
MEM_ENTRY(xffpopbytecounters_test1_entry_t, 5);
MEM_ENTRY(xffpoppacketcounters_entry_t, 5);
MEM_ENTRY(xffpoppacketcounters_test0_entry_t, 5);
MEM_ENTRY(xffpoppacketcounters_test1_entry_t, 5);
MEM_ENTRY(xmetering_entry_t, 8);
MEM_ENTRY(xmetering_test0_entry_t, 8);
MEM_ENTRY(xmetering_test1_entry_t, 8);
MEM_ENTRY(xmetering_test2_entry_t, 8);
MEM_ENTRY(xmetering_test3_entry_t, 8);
MEM_ENTRY(x_arb_tdm_table_entry_t, 1);
MEM_ENTRY(y_arb_tdm_table_entry_t, 1);
#undef MEM_ENTRY

/* Register and memory list declarations */
extern soc_reg_info_t soc_reg_list[];
extern soc_mem_info_t soc_mem_list[];
#if !defined(SOC_NO_NAMES)
extern char *soc_reg_name[];
#endif /* !defined(SOC_NO_NAMES) */
#if !defined(SOC_NO_ALIAS)
extern char *soc_reg_alias[];
extern char *soc_mem_ufalias[];
#endif /* !defined(SOC_NO_ALIAS) */
#if !defined(SOC_NO_DESC)
extern char *soc_reg_desc[];
#endif /* !defined(SOC_NO_DESC) */
#if !defined(SOC_NO_NAMES)
extern char *soc_mem_name[];
extern char *soc_mem_ufname[];
#endif /* !defined(SOC_NO_NAMES) */
#if !defined(SOC_NO_DESC)
extern char *soc_mem_desc[];
#endif /* !defined(SOC_NO_DESC) */

#if !defined(SOC_NO_NAMES)
#define SOC_REG_NAME(unit, reg)		soc_reg_name[reg]
#else
#define SOC_REG_NAME(unit, reg)		""
#endif

#if !defined(SOC_NO_ALIAS)
#define SOC_REG_ALIAS(unit, reg)	soc_reg_alias[reg]
#else
#define SOC_REG_ALIAS(unit, reg)	""
#endif

#if !defined(SOC_NO_DESC)
#define SOC_REG_DESC(unit, reg)		soc_reg_desc[reg]
#else
#define SOC_REG_DESC(unit, reg)		""
#endif

#if !defined(SOC_NO_NAMES)
#define SOC_MEM_NAME(unit, mem)		soc_mem_name[mem]
#define SOC_MEM_UFNAME(unit, mem)	soc_mem_ufname[mem]
#else
#define SOC_MEM_NAME(unit, mem)		""
#define SOC_MEM_UFNAME(unit, mem)	""
#endif

#if !defined(SOC_NO_ALIAS)
#define SOC_MEM_UFALIAS(unit, mem)	soc_mem_ufalias[mem]
#else
#define SOC_MEM_UFALIAS(unit, mem)	""
#endif

#if !defined(SOC_NO_DESC)
#define SOC_MEM_DESC(unit, mem)		soc_mem_desc[mem]
#else
#define SOC_MEM_DESC(unit, mem)		""
#endif

/* Chip specific include matter */


/* bcm5600_c0 */

/* These are the null memory descriptions for BCM5600_C0 */
extern arl_entry_t _soc_mem_entry_null_arl_bcm5600_c0;
extern irule_entry_t _soc_mem_entry_null_rule_bcm5600_c0;
extern vtable_entry_t _soc_mem_entry_null_vtable_bcm5600_c0;
extern marl_entry_t _soc_mem_entry_null_marl_bcm5600_c0;


/* bcm5680_b0 */

/* These are the null memory descriptions for BCM5680_B0 */
extern arl_entry_t _soc_mem_entry_null_arl_bcm5680_b0;
extern marl_entry_t _soc_mem_entry_null_marl_bcm5680_b0;
extern irule_entry_t _soc_mem_entry_null_rule_bcm5680_b0;
extern vtable_entry_t _soc_mem_entry_null_vtable_bcm5680_b0;


/* bcm5605_a0 */

/* These are the null memory descriptions for BCM5605_A0 */
extern arl_entry_t _soc_mem_entry_null_arl_bcm5605_a0;
extern marl_entry_t _soc_mem_entry_null_marl_bcm5605_a0;
extern irule_entry_t _soc_mem_entry_null_rule_bcm5605_a0;
extern vtable_entry_t _soc_mem_entry_null_vtable_bcm5605_a0;
extern ipmc_entry_t _soc_mem_entry_null_ipmc_bcm5605_a0;



/* bcm5615_a0 */

/* These are the null memory descriptions for BCM5615_A0 */
extern arl_entry_t _soc_mem_entry_null_arl_bcm5615_a0;
extern marl_entry_t _soc_mem_entry_null_marl_bcm5615_a0;
extern irule_entry_t _soc_mem_entry_null_rule_bcm5615_a0;
extern vtable_entry_t _soc_mem_entry_null_vtable_bcm5615_a0;
extern ipmc_entry_t _soc_mem_entry_null_ipmc_bcm5615_a0;


/* bcm5690_a0 */

/* These are the null memory descriptions for BCM5690_A0 */
extern irule_entry_t _soc_mem_entry_null_rule_bcm5690_a0;



/* bcm5670_a0 */

/* bcm5673_a0 */

/* These are the null memory descriptions for BCM5673_A0 */
extern irule_entry_t _soc_mem_entry_null_rule_bcm5673_a0;


/* bcm5674_a0 */

/* These are the null memory descriptions for BCM5674_A0 */
extern irule_entry_t _soc_mem_entry_null_rule_bcm5674_a0;


/* bcm5665_a0 */

/* These are the null memory descriptions for BCM5665_A0 */
extern irule_entry_t _soc_mem_entry_null_rule_bcm5665_a0;


/* bcm5665_b0 */

/* These are the null memory descriptions for BCM5665_B0 */
extern irule_entry_t _soc_mem_entry_null_rule_bcm5665_b0;


/* bcm5650_c0 */

/* These are the null memory descriptions for BCM5650_c0 */
extern irule_entry_t _soc_mem_entry_null_rule_bcm5650_c0;


/* bcm5695_a0 */

/* These are the null memory descriptions for BCM5695_A0 */
extern irule_entry_t _soc_mem_entry_null_rule_bcm5695_a0;
extern vlan_subnet_entry_t _soc_mem_entry_null_vlan_subnet_bcm5695_a0;


/* bcm5675_a0 */

/* bcm56601_a0 */

/* These are the null memory descriptions for BCM56601_A0 */
extern defip_cam_entry_t _soc_mem_entry_null_defip_cam_bcm56601_a0;
extern defip_tcam_entry_t _soc_mem_entry_null_defip_tcam_bcm56601_a0;
extern fp_external_entry_t _soc_mem_entry_null_fp_ex_bcm56601_a0;
extern fp_tcam_external_entry_t _soc_mem_entry_null_fp_tex_bcm56601_a0;
extern igr_vlan_xlate_entry_t _soc_mem_entry_null_igr_vlan_xlate_bcm56601_a0;
extern egr_vlan_xlate_entry_t _soc_mem_entry_null_egr_vlan_xlate_bcm56601_a0;
extern vrf_vfi_intf_entry_t _soc_mem_entry_null_vrf_vfi_intf_bcm56601_a0;
extern ipmc_group_v4_entry_t _soc_mem_entry_null_ipmc_group_v4_bcm56601_a0;
extern ipmc_group_v6_entry_t _soc_mem_entry_null_ipmc_group_v6_bcm56601_a0;
extern defip_alg_entry_t _soc_mem_entry_null_defip_alg_bcm56601_a0;


/* bcm56601_b0 */

/* These are the null memory descriptions for BCM56601_B0 */
extern defip_cam_entry_t _soc_mem_entry_null_defip_cam_bcm56601_b0;
extern defip_tcam_entry_t _soc_mem_entry_null_defip_tcam_bcm56601_b0;
extern fp_external_entry_t _soc_mem_entry_null_fp_ex_bcm56601_b0;
extern fp_tcam_external_entry_t _soc_mem_entry_null_fp_tex_bcm56601_b0;
extern igr_vlan_xlate_entry_t _soc_mem_entry_null_igr_vlan_xlate_bcm56601_b0;
extern egr_vlan_xlate_entry_t _soc_mem_entry_null_egr_vlan_xlate_bcm56601_b0;
extern vrf_vfi_intf_entry_t _soc_mem_entry_null_vrf_vfi_intf_bcm56601_b0;
extern ipmc_group_v4_entry_t _soc_mem_entry_null_ipmc_group_v4_bcm56601_b0;
extern ipmc_group_v6_entry_t _soc_mem_entry_null_ipmc_group_v6_bcm56601_b0;
extern defip_alg_entry_t _soc_mem_entry_null_defip_alg_bcm56601_b0;


/* bcm56601_c0 */

/* These are the null memory descriptions for BCM56601_C0 */
extern defip_cam_entry_t _soc_mem_entry_null_defip_cam_bcm56601_c0;
extern defip_tcam_entry_t _soc_mem_entry_null_defip_tcam_bcm56601_c0;
extern fp_external_entry_t _soc_mem_entry_null_fp_ex_bcm56601_c0;
extern fp_tcam_external_entry_t _soc_mem_entry_null_fp_tex_bcm56601_c0;
extern igr_vlan_xlate_entry_t _soc_mem_entry_null_igr_vlan_xlate_bcm56601_c0;
extern egr_vlan_xlate_entry_t _soc_mem_entry_null_egr_vlan_xlate_bcm56601_c0;
extern vrf_vfi_intf_entry_t _soc_mem_entry_null_vrf_vfi_intf_bcm56601_c0;
extern ipmc_group_v4_entry_t _soc_mem_entry_null_ipmc_group_v4_bcm56601_c0;
extern ipmc_group_v6_entry_t _soc_mem_entry_null_ipmc_group_v6_bcm56601_c0;
extern defip_alg_entry_t _soc_mem_entry_null_defip_alg_bcm56601_c0;


/* bcm56602_a0 */

/* These are the null memory descriptions for BCM56602_A0 */
extern defip_cam_entry_t _soc_mem_entry_null_defip_cam_bcm56602_a0;
extern defip_tcam_entry_t _soc_mem_entry_null_defip_tcam_bcm56602_a0;
extern fp_external_entry_t _soc_mem_entry_null_fp_ex_bcm56602_a0;
extern fp_tcam_external_entry_t _soc_mem_entry_null_fp_tex_bcm56602_a0;
extern igr_vlan_xlate_entry_t _soc_mem_entry_null_igr_vlan_xlate_bcm56602_a0;
extern egr_vlan_xlate_entry_t _soc_mem_entry_null_egr_vlan_xlate_bcm56602_a0;
extern vrf_vfi_intf_entry_t _soc_mem_entry_null_vrf_vfi_intf_bcm56602_a0;
extern ipmc_group_v4_entry_t _soc_mem_entry_null_ipmc_group_v4_bcm56602_a0;
extern ipmc_group_v6_entry_t _soc_mem_entry_null_ipmc_group_v6_bcm56602_a0;
extern defip_alg_entry_t _soc_mem_entry_null_defip_alg_bcm56602_a0;


/* bcm56602_b0 */

/* These are the null memory descriptions for BCM56602_B0 */
extern defip_cam_entry_t _soc_mem_entry_null_defip_cam_bcm56602_b0;
extern defip_tcam_entry_t _soc_mem_entry_null_defip_tcam_bcm56602_b0;
extern fp_external_entry_t _soc_mem_entry_null_fp_ex_bcm56602_b0;
extern fp_tcam_external_entry_t _soc_mem_entry_null_fp_tex_bcm56602_b0;
extern igr_vlan_xlate_entry_t _soc_mem_entry_null_igr_vlan_xlate_bcm56602_b0;
extern egr_vlan_xlate_entry_t _soc_mem_entry_null_egr_vlan_xlate_bcm56602_b0;
extern vrf_vfi_intf_entry_t _soc_mem_entry_null_vrf_vfi_intf_bcm56602_b0;
extern ipmc_group_v4_entry_t _soc_mem_entry_null_ipmc_group_v4_bcm56602_b0;
extern ipmc_group_v6_entry_t _soc_mem_entry_null_ipmc_group_v6_bcm56602_b0;
extern defip_alg_entry_t _soc_mem_entry_null_defip_alg_bcm56602_b0;


/* bcm56602_c0 */

/* These are the null memory descriptions for BCM56602_C0 */
extern defip_cam_entry_t _soc_mem_entry_null_defip_cam_bcm56602_c0;
extern defip_tcam_entry_t _soc_mem_entry_null_defip_tcam_bcm56602_c0;
extern fp_external_entry_t _soc_mem_entry_null_fp_ex_bcm56602_c0;
extern fp_tcam_external_entry_t _soc_mem_entry_null_fp_tex_bcm56602_c0;
extern igr_vlan_xlate_entry_t _soc_mem_entry_null_igr_vlan_xlate_bcm56602_c0;
extern egr_vlan_xlate_entry_t _soc_mem_entry_null_egr_vlan_xlate_bcm56602_c0;
extern vrf_vfi_intf_entry_t _soc_mem_entry_null_vrf_vfi_intf_bcm56602_c0;
extern ipmc_group_v4_entry_t _soc_mem_entry_null_ipmc_group_v4_bcm56602_c0;
extern ipmc_group_v6_entry_t _soc_mem_entry_null_ipmc_group_v6_bcm56602_c0;
extern defip_alg_entry_t _soc_mem_entry_null_defip_alg_bcm56602_c0;


/* bcm56504_a0 */
extern vlan_tab_entry_t _soc_mem_entry_null_vlan_tab_bcm56504_a0;


/* bcm56504_b0 */
extern vlan_tab_entry_t _soc_mem_entry_null_vlan_tab_bcm56504_b0;


/* bcm56304_b0 */
extern vlan_tab_entry_t _soc_mem_entry_null_vlan_tab_bcm56304_b0;


/* bcm56314_a0 */
extern vlan_tab_entry_t _soc_mem_entry_null_vlan_tab_bcm56314_a0;


/* bcm56102_a0 */
extern vlan_tab_entry_t _soc_mem_entry_null_vlan_tab_bcm56102_a0;


/* bcm56112_a0 */
extern vlan_tab_entry_t _soc_mem_entry_null_vlan_tab_bcm56112_a0;


/* bcm56800_a0 */

/* bcm56218_a0 */
extern port_or_trunk_mac_limit_entry_t
    _soc_mem_entry_null_port_or_trunk_mac_limit_bcm56218_a0;
extern fp_slice_map_entry_t
    _soc_mem_entry_null_fp_slice_map_entry_bcm56218_a0;


/* bcm56514_a0 */
extern fp_slice_map_entry_t
    _soc_mem_entry_null_fp_slice_map_entry_bcm56514_a0;


/* bcm56624_a0 */
extern fp_slice_map_entry_t
    _soc_mem_entry_null_fp_slice_map_entry_bcm56624_a0;

extern mtu_values_entry_t 
    _soc_mem_entry_null_l3_mtu_values_bcm56624_a0;

extern ext_l2_entry_tcam_entry_t
    _soc_mem_entry_null_ext_l2_entry_tcam_bcm56624_a0;


/* bcm56680_a0 */
extern fp_slice_map_entry_t
    _soc_mem_entry_null_fp_slice_map_entry_bcm56680_a0;

extern mtu_values_entry_t 
    _soc_mem_entry_null_l3_mtu_values_bcm56680_a0;


/* bcm56224_a0 */
extern port_or_trunk_mac_limit_entry_t
    _soc_mem_entry_null_port_or_trunk_mac_limit_bcm56224_a0;
extern fp_slice_map_entry_t
    _soc_mem_entry_null_fp_slice_map_entry_bcm56224_a0;


/* bcm56224_b0 */
extern port_or_trunk_mac_limit_entry_t
    _soc_mem_entry_null_port_or_trunk_mac_limit_bcm56224_b0;
extern fp_slice_map_entry_t
    _soc_mem_entry_null_fp_slice_map_entry_bcm56224_b0;


/* bcm56820_a0 */
extern fp_slice_map_entry_t
    _soc_mem_entry_null_fp_slice_map_entry_bcm56820_a0;


/* bcm56725_a0 */
extern fp_slice_map_entry_t
    _soc_mem_entry_null_fp_slice_map_entry_bcm56725_a0;




/*****************************************************************************
 **
 **	REGISTER READ and WRITE MACROS
 **
 *****************************************************************************/

#define READ_ACL_END_OVRDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ACL_END_OVRDr, REG_PORT_ANY, 0), rvp)
#define WRITE_ACL_END_OVRDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ACL_END_OVRDr, REG_PORT_ANY, 0), rv)

#define READ_ACL_START_OVRDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ACL_START_OVRDr, REG_PORT_ANY, 0), rvp)
#define WRITE_ACL_START_OVRDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ACL_START_OVRDr, REG_PORT_ANY, 0), rv)

#define READ_AGE_TIMERr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, AGE_TIMERr, port, 0), rvp)
#define WRITE_AGE_TIMERr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, AGE_TIMERr, port, 0), rv)

#define READ_AGINGCTRMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, AGINGCTRMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_AGINGCTRMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, AGINGCTRMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_AGINGEXPMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, AGINGEXPMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_AGINGEXPMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, AGINGEXPMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_AGING_THRESHOLDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, AGING_THRESHOLDr, REG_PORT_ANY, 0), rvp)
#define WRITE_AGING_THRESHOLDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, AGING_THRESHOLDr, REG_PORT_ANY, 0), rv)

#define READ_ANCTLr(unit, port, rvp) \
	soc_reg_read(unit, ANCTLr, soc_reg_addr(unit, ANCTLr, port, 0), rvp)
#define WRITE_ANCTLr(unit, port, rv) \
	soc_reg_write(unit, ANCTLr, soc_reg_addr(unit, ANCTLr, port, 0), rv)

#define READ_ANLPAr(unit, port, rvp) \
	soc_reg_read(unit, ANLPAr, soc_reg_addr(unit, ANLPAr, port, 0), rvp)
#define WRITE_ANLPAr(unit, port, rv) \
	soc_reg_write(unit, ANLPAr, soc_reg_addr(unit, ANLPAr, port, 0), rv)

#define READ_ANNPGr(unit, port, rvp) \
	soc_reg_read(unit, ANNPGr, soc_reg_addr(unit, ANNPGr, port, 0), rvp)
#define WRITE_ANNPGr(unit, port, rv) \
	soc_reg_write(unit, ANNPGr, soc_reg_addr(unit, ANNPGr, port, 0), rv)

#define READ_ANSTTr(unit, port, rvp) \
	soc_reg_read(unit, ANSTTr, soc_reg_addr(unit, ANSTTr, port, 0), rvp)
#define WRITE_ANSTTr(unit, port, rv) \
	soc_reg_write(unit, ANSTTr, soc_reg_addr(unit, ANSTTr, port, 0), rv)

#define READ_ARB_EOP_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARB_EOP_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARB_EOP_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARB_EOP_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_ARL_AGE_TIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_AGE_TIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_AGE_TIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_AGE_TIMERr, REG_PORT_ANY, 0), rv)

#define READ_ARL_CAM_BIST_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_CAM_BIST_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_CAM_BIST_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_CAM_BIST_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_ARL_CAM_BIST_STATUS_S2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_CAM_BIST_STATUS_S2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_CAM_BIST_STATUS_S2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_CAM_BIST_STATUS_S2r, REG_PORT_ANY, 0), rv)

#define READ_ARL_CAM_BIST_STATUS_S3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_CAM_BIST_STATUS_S3r, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_CAM_BIST_STATUS_S3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_CAM_BIST_STATUS_S3r, REG_PORT_ANY, 0), rv)

#define READ_ARL_CAM_BIST_STATUS_S5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_CAM_BIST_STATUS_S5r, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_CAM_BIST_STATUS_S5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_CAM_BIST_STATUS_S5r, REG_PORT_ANY, 0), rv)

#define READ_ARL_CAM_BIST_STATUS_S6r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_CAM_BIST_STATUS_S6r, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_CAM_BIST_STATUS_S6r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_CAM_BIST_STATUS_S6r, REG_PORT_ANY, 0), rv)

#define READ_ARL_CAM_BIST_STATUS_S8r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_CAM_BIST_STATUS_S8r, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_CAM_BIST_STATUS_S8r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_CAM_BIST_STATUS_S8r, REG_PORT_ANY, 0), rv)

#define READ_ARL_CAM_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_CAM_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_CAM_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_CAM_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_ARL_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_ARL_DEFAULT_DEFAULT_ROUTER_IPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_DEFAULT_DEFAULT_ROUTER_IPr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_DEFAULT_DEFAULT_ROUTER_IPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_DEFAULT_DEFAULT_ROUTER_IPr, REG_PORT_ANY, 0), rv)

#define READ_ARL_DEFIP_HI_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_DEFIP_HI_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_DEFIP_HI_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_DEFIP_HI_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ARL_DEFIP_LO_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_DEFIP_LO_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_DEFIP_LO_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_DEFIP_LO_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ARL_IPIC_CONFIG_DEBUGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_IPIC_CONFIG_DEBUGr, REG_PORT_ANY, idx), rvp)
#define WRITE_ARL_IPIC_CONFIG_DEBUGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_IPIC_CONFIG_DEBUGr, REG_PORT_ANY, idx), rv)

#define READ_ARL_L2_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_L2_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_L2_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_L2_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ARL_L3_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_L3_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_L3_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_L3_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ARL_MEMBIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_MEMBIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_MEMBIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_MEMBIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ARL_PARADDR_DEFIPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_PARADDR_DEFIPr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_PARADDR_DEFIPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_PARADDR_DEFIPr, REG_PORT_ANY, 0), rv)

#define READ_ARL_PARADDR_IPMCr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_PARADDR_IPMCr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_PARADDR_IPMCr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_PARADDR_IPMCr, REG_PORT_ANY, 0), rv)

#define READ_ARL_PARADDR_L2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_PARADDR_L2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_PARADDR_L2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_PARADDR_L2r, REG_PORT_ANY, 0), rv)

#define READ_ARL_PARADDR_L3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_PARADDR_L3r, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_PARADDR_L3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_PARADDR_L3r, REG_PORT_ANY, 0), rv)

#define READ_ARL_PARADDR_L2MCr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_PARADDR_L2MCr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_PARADDR_L2MCr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_PARADDR_L2MCr, REG_PORT_ANY, 0), rv)

#define READ_ARL_PARADDR_L2_STATICr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_PARADDR_L2_STATICr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_PARADDR_L2_STATICr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_PARADDR_L2_STATICr, REG_PORT_ANY, 0), rv)

#define READ_ARL_PARADDR_L2_VALIDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_PARADDR_L2_VALIDr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_PARADDR_L2_VALIDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_PARADDR_L2_VALIDr, REG_PORT_ANY, 0), rv)

#define READ_ARL_PARADDR_L3IFr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_PARADDR_L3IFr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_PARADDR_L3IFr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_PARADDR_L3IFr, REG_PORT_ANY, 0), rv)

#define READ_ARL_PARADDR_L3_VALIDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_PARADDR_L3_VALIDr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_PARADDR_L3_VALIDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_PARADDR_L3_VALIDr, REG_PORT_ANY, 0), rv)

#define READ_ARL_PARADDR_QVLANr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_PARADDR_QVLANr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_PARADDR_QVLANr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_PARADDR_QVLANr, REG_PORT_ANY, 0), rv)

#define READ_ARL_PARADDR_SPFr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_PARADDR_SPFr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_PARADDR_SPFr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_PARADDR_SPFr, REG_PORT_ANY, 0), rv)

#define READ_ARL_PARADDR_STGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_PARADDR_STGr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_PARADDR_STGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_PARADDR_STGr, REG_PORT_ANY, 0), rv)

#define READ_ARL_PARERRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_PARERRr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_PARERRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_PARERRr, REG_PORT_ANY, 0), rv)

#define READ_ARL_QVLAN_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_QVLAN_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_QVLAN_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_QVLAN_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ARL_SPARE_REG0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_SPARE_REG0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_SPARE_REG0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_SPARE_REG0r, REG_PORT_ANY, 0), rv)

#define READ_ARL_SPARE_REG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_SPARE_REG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_SPARE_REG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_SPARE_REG1r, REG_PORT_ANY, 0), rv)

#define READ_ARL_SPARE_REG2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_SPARE_REG2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ARL_SPARE_REG2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_SPARE_REG2r, REG_PORT_ANY, 0), rv)

#define READ_ARL_XPIC_CONFIG_DEBUGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ARL_XPIC_CONFIG_DEBUGr, REG_PORT_ANY, idx), rvp)
#define WRITE_ARL_XPIC_CONFIG_DEBUGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ARL_XPIC_CONFIG_DEBUGr, REG_PORT_ANY, idx), rv)

#define READ_ASFCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ASFCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_ASFCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ASFCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_ASFPORTSPEEDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ASFPORTSPEEDr, port, 0), rvp)
#define WRITE_ASFPORTSPEEDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ASFPORTSPEEDr, port, 0), rv)

#define READ_ASF_PORT_SPEEDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ASF_PORT_SPEEDr, port, 0), rvp)
#define WRITE_ASF_PORT_SPEEDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ASF_PORT_SPEEDr, port, 0), rv)

#define READ_AUX_ARB_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, AUX_ARB_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_AUX_ARB_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, AUX_ARB_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_AUX_ARB_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, AUX_ARB_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_AUX_ARB_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, AUX_ARB_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_BACKPRESSUREDISCARDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BACKPRESSUREDISCARDr, REG_PORT_ANY, 0), rvp)
#define WRITE_BACKPRESSUREDISCARDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BACKPRESSUREDISCARDr, REG_PORT_ANY, 0), rv)

#define READ_BACKPRESSUREWARNr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BACKPRESSUREWARNr, REG_PORT_ANY, 0), rvp)
#define WRITE_BACKPRESSUREWARNr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BACKPRESSUREWARNr, REG_PORT_ANY, 0), rv)

#define READ_BCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg_read(unit, BCAST_BLOCK_MASKr, soc_reg_addr(unit, BCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_BCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg_write(unit, BCAST_BLOCK_MASKr, soc_reg_addr(unit, BCAST_BLOCK_MASKr, port, 0), rv)

#define READ_BCAST_BLOCK_MASK_64r(unit, port, rvp) \
	soc_reg_read(unit, BCAST_BLOCK_MASK_64r, soc_reg_addr(unit, BCAST_BLOCK_MASK_64r, port, 0), rvp)
#define WRITE_BCAST_BLOCK_MASK_64r(unit, port, rv) \
	soc_reg_write(unit, BCAST_BLOCK_MASK_64r, soc_reg_addr(unit, BCAST_BLOCK_MASK_64r, port, 0), rv)

#define READ_BCAST_BLOCK_MASK_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BCAST_BLOCK_MASK_HIr, port, 0), rvp)
#define WRITE_BCAST_BLOCK_MASK_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BCAST_BLOCK_MASK_HIr, port, 0), rv)

#define READ_BCAST_RATE_CONTROLr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BCAST_RATE_CONTROLr, REG_PORT_ANY, idx), rvp)
#define WRITE_BCAST_RATE_CONTROLr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BCAST_RATE_CONTROLr, REG_PORT_ANY, idx), rv)

#define READ_BCAST_RATE_CONTROL_M0r(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BCAST_RATE_CONTROL_M0r, REG_PORT_ANY, idx), rvp)
#define WRITE_BCAST_RATE_CONTROL_M0r(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BCAST_RATE_CONTROL_M0r, REG_PORT_ANY, idx), rv)

#define READ_BCAST_RATE_CONTROL_M1r(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BCAST_RATE_CONTROL_M1r, REG_PORT_ANY, idx), rvp)
#define WRITE_BCAST_RATE_CONTROL_M1r(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BCAST_RATE_CONTROL_M1r, REG_PORT_ANY, idx), rv)

#define READ_BCAST_STORM_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BCAST_STORM_CONTROLr, port, 0), rvp)
#define WRITE_BCAST_STORM_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BCAST_STORM_CONTROLr, port, 0), rv)

#define READ_BIGINGBUFFERTHRESr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BIGINGBUFFERTHRESr, REG_PORT_ANY, 0), rvp)
#define WRITE_BIGINGBUFFERTHRESr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BIGINGBUFFERTHRESr, REG_PORT_ANY, 0), rv)

#define READ_BISR_DEBUG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BISR_DEBUG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_BISR_DEBUG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BISR_DEBUG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_BISR_LOAD_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BISR_LOAD_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_BISR_LOAD_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BISR_LOAD_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_BISTMEMFAILUREr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BISTMEMFAILUREr, REG_PORT_ANY, 0), rvp)
#define WRITE_BISTMEMFAILUREr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BISTMEMFAILUREr, REG_PORT_ANY, 0), rv)

#define READ_BKPMETERINGBUCKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGBUCKETr, port, 0), rvp)
#define WRITE_BKPMETERINGBUCKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGBUCKETr, port, 0), rv)

#define READ_BKPMETERINGCONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGCONFIGr, port, 0), rvp)
#define WRITE_BKPMETERINGCONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGCONFIGr, port, 0), rv)

#define READ_BKPMETERINGCONFIG1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGCONFIG1r, port, 0), rvp)
#define WRITE_BKPMETERINGCONFIG1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGCONFIG1r, port, 0), rv)

#define READ_BKPMETERINGCONFIG_64r(unit, port, rvp) \
	soc_reg_read(unit, BKPMETERINGCONFIG_64r, soc_reg_addr(unit, BKPMETERINGCONFIG_64r, port, 0), rvp)
#define WRITE_BKPMETERINGCONFIG_64r(unit, port, rv) \
	soc_reg_write(unit, BKPMETERINGCONFIG_64r, soc_reg_addr(unit, BKPMETERINGCONFIG_64r, port, 0), rv)

#define READ_BKPMETERINGCONFIG_EXTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGCONFIG_EXTr, port, 0), rvp)
#define WRITE_BKPMETERINGCONFIG_EXTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGCONFIG_EXTr, port, 0), rv)

#define READ_BKPMETERINGDISCSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGDISCSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_BKPMETERINGDISCSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGDISCSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_BKPMETERINGDISCSTATUS_64r(unit, rvp) \
	soc_reg_read(unit, BKPMETERINGDISCSTATUS_64r, soc_reg_addr(unit, BKPMETERINGDISCSTATUS_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_BKPMETERINGDISCSTATUS_64r(unit, rv) \
	soc_reg_write(unit, BKPMETERINGDISCSTATUS_64r, soc_reg_addr(unit, BKPMETERINGDISCSTATUS_64r, REG_PORT_ANY, 0), rv)

#define READ_BKPMETERINGDISCSTATUS_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGDISCSTATUS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_BKPMETERINGDISCSTATUS_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGDISCSTATUS_HIr, REG_PORT_ANY, 0), rv)

#define READ_BKPMETERINGSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_BKPMETERINGSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_BKPMETERINGSTATUS_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGSTATUS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_BKPMETERINGSTATUS_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGSTATUS_HIr, REG_PORT_ANY, 0), rv)

#define READ_BKPMETERINGWARNSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKPMETERINGWARNSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_BKPMETERINGWARNSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKPMETERINGWARNSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_BKPMETERINGWARNSTATUS_64r(unit, rvp) \
	soc_reg_read(unit, BKPMETERINGWARNSTATUS_64r, soc_reg_addr(unit, BKPMETERINGWARNSTATUS_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_BKPMETERINGWARNSTATUS_64r(unit, rv) \
	soc_reg_write(unit, BKPMETERINGWARNSTATUS_64r, soc_reg_addr(unit, BKPMETERINGWARNSTATUS_64r, REG_PORT_ANY, 0), rv)

#define READ_BKP_DISCr(unit, port, rvp) \
	soc_reg_read(unit, BKP_DISCr, soc_reg_addr(unit, BKP_DISCr, port, 0), rvp)
#define WRITE_BKP_DISCr(unit, port, rv) \
	soc_reg_write(unit, BKP_DISCr, soc_reg_addr(unit, BKP_DISCr, port, 0), rv)

#define READ_BKP_DISC_BMAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKP_DISC_BMAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_BKP_DISC_BMAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKP_DISC_BMAPr, REG_PORT_ANY, 0), rv)

#define READ_BKP_DISC_BMAP_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKP_DISC_BMAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_BKP_DISC_BMAP_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKP_DISC_BMAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_BKP_DISC_PRIORITYr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BKP_DISC_PRIORITYr, port, 0), rvp)
#define WRITE_BKP_DISC_PRIORITYr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BKP_DISC_PRIORITYr, port, 0), rv)

#define READ_BOUNDARY_MPLSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BOUNDARY_MPLSr, REG_PORT_ANY, 0), rvp)
#define WRITE_BOUNDARY_MPLSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BOUNDARY_MPLSr, REG_PORT_ANY, 0), rv)

#define READ_BOUNDARY_V4_PREFIXr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BOUNDARY_V4_PREFIXr, REG_PORT_ANY, idx), rvp)
#define WRITE_BOUNDARY_V4_PREFIXr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BOUNDARY_V4_PREFIXr, REG_PORT_ANY, idx), rv)

#define READ_BOUNDARY_V6_PREFIXr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BOUNDARY_V6_PREFIXr, REG_PORT_ANY, idx), rvp)
#define WRITE_BOUNDARY_V6_PREFIXr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BOUNDARY_V6_PREFIXr, REG_PORT_ANY, idx), rv)

#define READ_BPDU0r(unit, port, rvp) \
	soc_reg_read(unit, BPDU0r, soc_reg_addr(unit, BPDU0r, port, 0), rvp)
#define WRITE_BPDU0r(unit, port, rv) \
	soc_reg_write(unit, BPDU0r, soc_reg_addr(unit, BPDU0r, port, 0), rv)

#define READ_BPDU1r(unit, port, rvp) \
	soc_reg_read(unit, BPDU1r, soc_reg_addr(unit, BPDU1r, port, 0), rvp)
#define WRITE_BPDU1r(unit, port, rv) \
	soc_reg_write(unit, BPDU1r, soc_reg_addr(unit, BPDU1r, port, 0), rv)

#define READ_BPDU2r(unit, port, rvp) \
	soc_reg_read(unit, BPDU2r, soc_reg_addr(unit, BPDU2r, port, 0), rvp)
#define WRITE_BPDU2r(unit, port, rv) \
	soc_reg_write(unit, BPDU2r, soc_reg_addr(unit, BPDU2r, port, 0), rv)

#define READ_BPDU3r(unit, port, rvp) \
	soc_reg_read(unit, BPDU3r, soc_reg_addr(unit, BPDU3r, port, 0), rvp)
#define WRITE_BPDU3r(unit, port, rv) \
	soc_reg_write(unit, BPDU3r, soc_reg_addr(unit, BPDU3r, port, 0), rv)

#define READ_BPDU4r(unit, port, rvp) \
	soc_reg_read(unit, BPDU4r, soc_reg_addr(unit, BPDU4r, port, 0), rvp)
#define WRITE_BPDU4r(unit, port, rv) \
	soc_reg_write(unit, BPDU4r, soc_reg_addr(unit, BPDU4r, port, 0), rv)

#define READ_BPDU5r(unit, port, rvp) \
	soc_reg_read(unit, BPDU5r, soc_reg_addr(unit, BPDU5r, port, 0), rvp)
#define WRITE_BPDU5r(unit, port, rv) \
	soc_reg_write(unit, BPDU5r, soc_reg_addr(unit, BPDU5r, port, 0), rv)

#define READ_BSAFE_GLB_CMD_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_CMD_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_CMD_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_CMD_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_CMD_DATA_INr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_CMD_DATA_INr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_CMD_DATA_INr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_CMD_DATA_INr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_CMD_DATA_OUTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_CMD_DATA_OUTr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_CMD_DATA_OUTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_CMD_DATA_OUTr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_DEV_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_DEV_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_DEV_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_DEV_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_INT_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_INT_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_INT_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_INT_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_MEM_PARAMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_MEM_PARAMr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_MEM_PARAMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_MEM_PARAMr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_MEM_TST_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_MEM_TST_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_MEM_TST_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_MEM_TST_CTLr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_PRESCALEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_PRESCALEr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_PRESCALEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_PRESCALEr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_PROD_CFGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_PROD_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_PROD_CFGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_PROD_CFGr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_TIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_TIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_TIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_TIMERr, REG_PORT_ANY, 0), rv)

#define READ_BSAFE_GLB_UHSM_CFGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, BSAFE_GLB_UHSM_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_BSAFE_GLB_UHSM_CFGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, BSAFE_GLB_UHSM_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CABCONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CABCONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CABCONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CABCONTROLr, REG_PORT_ANY, 0), rv)

#define READ_CAM_BIST_STATUS_S2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CAM_BIST_STATUS_S2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CAM_BIST_STATUS_S2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CAM_BIST_STATUS_S2r, REG_PORT_ANY, 0), rv)

#define READ_CAM_BIST_STATUS_S3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CAM_BIST_STATUS_S3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CAM_BIST_STATUS_S3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CAM_BIST_STATUS_S3r, REG_PORT_ANY, 0), rv)

#define READ_CAM_BIST_STATUS_S5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CAM_BIST_STATUS_S5r, REG_PORT_ANY, 0), rvp)
#define WRITE_CAM_BIST_STATUS_S5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CAM_BIST_STATUS_S5r, REG_PORT_ANY, 0), rv)

#define READ_CAM_BIST_STATUS_S6r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CAM_BIST_STATUS_S6r, REG_PORT_ANY, 0), rvp)
#define WRITE_CAM_BIST_STATUS_S6r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CAM_BIST_STATUS_S6r, REG_PORT_ANY, 0), rv)

#define READ_CAM_BIST_STATUS_S8r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CAM_BIST_STATUS_S8r, REG_PORT_ANY, 0), rvp)
#define WRITE_CAM_BIST_STATUS_S8r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CAM_BIST_STATUS_S8r, REG_PORT_ANY, 0), rv)

#define READ_CAR1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CAR1r, port, 0), rvp)
#define WRITE_CAR1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CAR1r, port, 0), rv)

#define READ_CAR2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CAR2r, port, 0), rvp)
#define WRITE_CAR2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CAR2r, port, 0), rv)

#define READ_CBL_ATTRIBUTEr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBL_ATTRIBUTEr, REG_PORT_ANY, idx), rvp)
#define WRITE_CBL_ATTRIBUTEr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBL_ATTRIBUTEr, REG_PORT_ANY, idx), rv)

#define READ_CBPCELLCRCERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPCELLCRCERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPCELLCRCERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPCELLCRCERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_CBPCELLHDRMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPCELLHDRMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPCELLHDRMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPCELLHDRMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPCELLHDRPARITYERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPCELLHDRPARITYERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPCELLHDRPARITYERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPCELLHDRPARITYERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_CBPCONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPCONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPCONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPCONTROLr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM0DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM0DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM0DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM0DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM10DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM10DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM10DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM10DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM11DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM11DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM11DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM11DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM12DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM12DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM12DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM12DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM13DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM13DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM13DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM13DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM14DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM14DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM14DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM14DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM15DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM15DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM15DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM15DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM1DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM1DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM1DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM1DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM2DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM2DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM2DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM2DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM3DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM3DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM3DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM3DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM4DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM4DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM4DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM4DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM5DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM5DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM5DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM5DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM6DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM6DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM6DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM6DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM7DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM7DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM7DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM7DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM8DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM8DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM8DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM8DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEM9DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEM9DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPDATAMEM9DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEM9DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPDATAMEMDEBUGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPDATAMEMDEBUGr, REG_PORT_ANY, idx), rvp)
#define WRITE_CBPDATAMEMDEBUGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPDATAMEMDEBUGr, REG_PORT_ANY, idx), rv)

#define READ_CBPPKTHDR0MEMDEBUGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPPKTHDR0MEMDEBUGr, REG_PORT_ANY, idx), rvp)
#define WRITE_CBPPKTHDR0MEMDEBUGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPPKTHDR0MEMDEBUGr, REG_PORT_ANY, idx), rv)

#define READ_CBPPKTHDR1MEMDEBUGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPPKTHDR1MEMDEBUGr, REG_PORT_ANY, idx), rvp)
#define WRITE_CBPPKTHDR1MEMDEBUGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPPKTHDR1MEMDEBUGr, REG_PORT_ANY, idx), rv)

#define READ_CBPPKTHDR2MEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPPKTHDR2MEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPPKTHDR2MEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPPKTHDR2MEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPPKTHDRCPUMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPPKTHDRCPUMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPPKTHDRCPUMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPPKTHDRCPUMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPPKTHDRMEM0DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPPKTHDRMEM0DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPPKTHDRMEM0DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPPKTHDRMEM0DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPPKTHDRMEM1DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPPKTHDRMEM1DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPPKTHDRMEM1DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPPKTHDRMEM1DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CBPPKTHDRPARITYERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBPPKTHDRPARITYERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBPPKTHDRPARITYERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBPPKTHDRPARITYERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_CBP_FULLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CBP_FULLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CBP_FULLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CBP_FULLr, REG_PORT_ANY, 0), rv)

#define READ_CCPMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CCPMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CCPMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CCPMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CCPPARITYERRORPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CCPPARITYERRORPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CCPPARITYERRORPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CCPPARITYERRORPTRr, REG_PORT_ANY, 0), rv)

#define READ_CELLASSEMBLY_PARITY_ERRORSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CELLASSEMBLY_PARITY_ERRORSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CELLASSEMBLY_PARITY_ERRORSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CELLASSEMBLY_PARITY_ERRORSr, REG_PORT_ANY, 0), rv)

#define READ_CELLCHKMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CELLCHKMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CELLCHKMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CELLCHKMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CELLCRCERRCOUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CELLCRCERRCOUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CELLCRCERRCOUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CELLCRCERRCOUNTr, REG_PORT_ANY, 0), rv)

#define READ_CELLCRCERRPOINTERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CELLCRCERRPOINTERr, REG_PORT_ANY, 0), rvp)
#define WRITE_CELLCRCERRPOINTERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CELLCRCERRPOINTERr, REG_PORT_ANY, 0), rv)

#define READ_CELLLINKMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CELLLINKMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CELLLINKMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CELLLINKMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CELLPTR_RELEASE_MGR_PARITYERRORSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CELLPTR_RELEASE_MGR_PARITYERRORSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CELLPTR_RELEASE_MGR_PARITYERRORSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CELLPTR_RELEASE_MGR_PARITYERRORSr, REG_PORT_ANY, 0), rv)

#define READ_CELL_OVERLAPSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CELL_OVERLAPSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CELL_OVERLAPSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CELL_OVERLAPSr, REG_PORT_ANY, 0), rv)

#define READ_CFAPCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_CFAPDEBUGSCR0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPDEBUGSCR0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPDEBUGSCR0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPDEBUGSCR0r, REG_PORT_ANY, 0), rv)

#define READ_CFAPDEBUGSCR1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPDEBUGSCR1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPDEBUGSCR1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPDEBUGSCR1r, REG_PORT_ANY, 0), rv)

#define READ_CFAPDEBUGSCR2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPDEBUGSCR2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPDEBUGSCR2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPDEBUGSCR2r, REG_PORT_ANY, 0), rv)

#define READ_CFAPFULLCLEARPOINTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPFULLCLEARPOINTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPFULLCLEARPOINTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPFULLCLEARPOINTr, REG_PORT_ANY, 0), rv)

#define READ_CFAPFULLSETPOINTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPFULLSETPOINTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPFULLSETPOINTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPFULLSETPOINTr, REG_PORT_ANY, 0), rv)

#define READ_CFAPFULLTHRESHOLDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPFULLTHRESHOLDr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPFULLTHRESHOLDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPFULLTHRESHOLDr, REG_PORT_ANY, 0), rv)

#define READ_CFAPMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CFAPOTPCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPOTPCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPOTPCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPOTPCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_CFAPPARITYERRORPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPPARITYERRORPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPPARITYERRORPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPPARITYERRORPTRr, REG_PORT_ANY, 0), rv)

#define READ_CFAPPOOLSIZEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPPOOLSIZEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPPOOLSIZEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPPOOLSIZEr, REG_PORT_ANY, 0), rv)

#define READ_CFAPREADPOINTERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAPREADPOINTERr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFAPREADPOINTERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAPREADPOINTERr, REG_PORT_ANY, 0), rv)

#define READ_CFAP_DROP_PKT_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFAP_DROP_PKT_CNTr, port, 0), rvp)
#define WRITE_CFAP_DROP_PKT_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFAP_DROP_PKT_CNTr, port, 0), rv)

#define READ_CFG_RAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CFG_RAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CFG_RAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CFG_RAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_CHGROUPSELECTIONr(unit, rvp) \
	soc_reg_read(unit, CHGROUPSELECTIONr, soc_reg_addr(unit, CHGROUPSELECTIONr, REG_PORT_ANY, 0), rvp)
#define WRITE_CHGROUPSELECTIONr(unit, rv) \
	soc_reg_write(unit, CHGROUPSELECTIONr, soc_reg_addr(unit, CHGROUPSELECTIONr, REG_PORT_ANY, 0), rv)

#define READ_CHIP_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CHIP_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CHIP_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CHIP_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_CHIP_CONFIG_ECC_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CHIP_CONFIG_ECC_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CHIP_CONFIG_ECC_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CHIP_CONFIG_ECC_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_CMDWORD_SHADOW_BSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CMDWORD_SHADOW_BSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMDWORD_SHADOW_BSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CMDWORD_SHADOW_BSEr, REG_PORT_ANY, 0), rv)

#define READ_CMDWORD_SHADOW_CSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CMDWORD_SHADOW_CSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMDWORD_SHADOW_CSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CMDWORD_SHADOW_CSEr, REG_PORT_ANY, 0), rv)

#define READ_CMDWORD_SHADOW_HSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CMDWORD_SHADOW_HSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMDWORD_SHADOW_HSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CMDWORD_SHADOW_HSEr, REG_PORT_ANY, 0), rv)

#define READ_CMICMINTIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CMICMINTIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMICMINTIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CMICMINTIMERr, REG_PORT_ANY, 0), rv)

#define READ_CMICTXCOSMASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CMICTXCOSMASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMICTXCOSMASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CMICTXCOSMASKr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_1000_BASE_X_MODEr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_1000_BASE_X_MODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_1000_BASE_X_MODEr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_1000_BASE_X_MODEr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_64BIT_STATS_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_64BIT_STATS_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_64BIT_STATS_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_64BIT_STATS_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_ARL_DMA_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_ARL_DMA_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_ARL_DMA_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_ARL_DMA_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_ARL_DMA_CNTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_ARL_DMA_CNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_ARL_DMA_CNTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_ARL_DMA_CNTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_ARL_MBUF0r(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_ARL_MBUF0r, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_ARL_MBUF0r(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_ARL_MBUF0r, REG_PORT_ANY, idx), rv)

#define READ_CMIC_ARL_MBUF1r(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_ARL_MBUF1r, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_ARL_MBUF1r(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_ARL_MBUF1r, REG_PORT_ANY, idx), rv)

#define READ_CMIC_ARL_MBUF2r(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_ARL_MBUF2r, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_ARL_MBUF2r(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_ARL_MBUF2r, REG_PORT_ANY, idx), rv)

#define READ_CMIC_ARL_MBUF3r(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_ARL_MBUF3r, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_ARL_MBUF3r(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_ARL_MBUF3r, REG_PORT_ANY, idx), rv)

#define READ_CMIC_CHIP_PARITY_INTR_ENABLEr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CHIP_PARITY_INTR_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CHIP_PARITY_INTR_ENABLEr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CHIP_PARITY_INTR_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CHIP_PARITY_INTR_STATUSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CHIP_PARITY_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CHIP_PARITY_INTR_STATUSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CHIP_PARITY_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CLK_ENABLEr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CLK_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CLK_ENABLEr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CLK_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CLK_GATE_RESET_CONTROLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CLK_GATE_RESET_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CLK_GATE_RESET_CONTROLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CLK_GATE_RESET_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CMICE_BISR_REG_RD_DATAr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CMICE_BISR_REG_RD_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CMICE_BISR_REG_RD_DATAr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CMICE_BISR_REG_RD_DATAr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CONFIGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CONFIGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL0_CTRL_STATUS_REGISTER_3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL1_CTRL_STATUS_REGISTER_3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL2_CTRL_STATUS_REGISTER_3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_CORE_PLL3_CTRL_STATUS_REGISTER_3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_AVAILABLEr(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLEr, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_COS_AVAILABLEr(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLEr, REG_PORT_ANY, idx), rv)

#define READ_CMIC_COS_AVAILABLE0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_AVAILABLE0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_AVAILABLE1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_AVAILABLE1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_AVAILABLE2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_AVAILABLE2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_AVAILABLE3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_AVAILABLE3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_AVAILABLE4r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE4r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_AVAILABLE4r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE4r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_AVAILABLE5r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE5r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_AVAILABLE5r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE5r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_AVAILABLE6r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE6r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_AVAILABLE6r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE6r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_AVAILABLE7r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE7r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_AVAILABLE7r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_AVAILABLE7r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_CTRL_RXr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RXr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_CTRL_RXr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RXr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_CTRL_RX_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_CTRL_RX_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_CTRL_RX_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_CTRL_RX_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_CTRL_RX_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_CTRL_RX_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_CTRL_RX_3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_CTRL_RX_3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_CTRL_RX_4r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_CTRL_RX_4r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_4r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_CTRL_RX_5r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_5r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_CTRL_RX_5r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_5r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_CTRL_RX_6r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_6r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_CTRL_RX_6r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_6r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_CTRL_RX_7r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_7r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_CTRL_RX_7r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_7r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_COS_CTRL_RX_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_COS_CTRL_RX_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_COS_CTRL_RX_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DEVICE_IDr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DEVICE_IDr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DEVICE_IDr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DEVICE_IDr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DEV_REV_IDr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DEV_REV_IDr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DEV_REV_IDr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DEV_REV_IDr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DMA_CTRLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DMA_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DMA_CTRLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DMA_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DMA_DESC0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DMA_DESC0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DMA_DESC0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DMA_DESC0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DMA_DESC1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DMA_DESC1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DMA_DESC1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DMA_DESC1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DMA_DESC2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DMA_DESC2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DMA_DESC2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DMA_DESC2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DMA_DESC3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DMA_DESC3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DMA_DESC3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DMA_DESC3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_DMA_STATr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_DMA_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_DMA_STATr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_DMA_STATr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_ENDIANESS_SELr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_ENDIANESS_SELr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_ENDIANESS_SELr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_ENDIANESS_SELr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH0_RD_DMA_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH0_RD_DMA_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH0_RD_DMA_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH0_RD_DMA_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH0_RD_DMA_HOSTMEM_READ_PTRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH0_RD_DMA_HOSTMEM_READ_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH0_RD_DMA_HOSTMEM_READ_PTRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH0_RD_DMA_HOSTMEM_READ_PTRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH0_RD_DMA_HOSTMEM_START_ADDRESSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH0_RD_DMA_HOSTMEM_START_ADDRESSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH0_RD_DMA_HOSTMEM_START_ADDRESSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH0_RD_DMA_HOSTMEM_START_ADDRESSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH0_RD_DMA_HOSTMEM_THRESHOLDr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH0_RD_DMA_HOSTMEM_THRESHOLDr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH0_RD_DMA_HOSTMEM_THRESHOLDr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH0_RD_DMA_HOSTMEM_THRESHOLDr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH0_RD_DMA_HOSTMEM_WRITE_PTRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH0_RD_DMA_HOSTMEM_WRITE_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH0_RD_DMA_HOSTMEM_WRITE_PTRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH0_RD_DMA_HOSTMEM_WRITE_PTRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH0_RD_DMA_SBUS_START_ADDRESSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH0_RD_DMA_SBUS_START_ADDRESSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH0_RD_DMA_SBUS_START_ADDRESSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH0_RD_DMA_SBUS_START_ADDRESSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH1_RD_DMA_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH1_RD_DMA_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH1_RD_DMA_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH1_RD_DMA_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH1_RD_DMA_HOSTMEM_READ_PTRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH1_RD_DMA_HOSTMEM_READ_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH1_RD_DMA_HOSTMEM_READ_PTRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH1_RD_DMA_HOSTMEM_READ_PTRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH1_RD_DMA_HOSTMEM_START_ADDRESSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH1_RD_DMA_HOSTMEM_START_ADDRESSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH1_RD_DMA_HOSTMEM_START_ADDRESSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH1_RD_DMA_HOSTMEM_START_ADDRESSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH1_RD_DMA_HOSTMEM_THRESHOLDr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH1_RD_DMA_HOSTMEM_THRESHOLDr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH1_RD_DMA_HOSTMEM_THRESHOLDr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH1_RD_DMA_HOSTMEM_THRESHOLDr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH1_RD_DMA_HOSTMEM_WRITE_PTRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH1_RD_DMA_HOSTMEM_WRITE_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH1_RD_DMA_HOSTMEM_WRITE_PTRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH1_RD_DMA_HOSTMEM_WRITE_PTRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH1_RD_DMA_SBUS_START_ADDRESSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH1_RD_DMA_SBUS_START_ADDRESSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH1_RD_DMA_SBUS_START_ADDRESSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH1_RD_DMA_SBUS_START_ADDRESSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH2_RD_DMA_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH2_RD_DMA_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH2_RD_DMA_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH2_RD_DMA_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH2_RD_DMA_HOSTMEM_READ_PTRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH2_RD_DMA_HOSTMEM_READ_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH2_RD_DMA_HOSTMEM_READ_PTRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH2_RD_DMA_HOSTMEM_READ_PTRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH2_RD_DMA_HOSTMEM_START_ADDRESSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH2_RD_DMA_HOSTMEM_START_ADDRESSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH2_RD_DMA_HOSTMEM_START_ADDRESSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH2_RD_DMA_HOSTMEM_START_ADDRESSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH2_RD_DMA_HOSTMEM_THRESHOLDr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH2_RD_DMA_HOSTMEM_THRESHOLDr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH2_RD_DMA_HOSTMEM_THRESHOLDr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH2_RD_DMA_HOSTMEM_THRESHOLDr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH2_RD_DMA_HOSTMEM_WRITE_PTRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH2_RD_DMA_HOSTMEM_WRITE_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH2_RD_DMA_HOSTMEM_WRITE_PTRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH2_RD_DMA_HOSTMEM_WRITE_PTRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH2_RD_DMA_SBUS_START_ADDRESSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH2_RD_DMA_SBUS_START_ADDRESSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH2_RD_DMA_SBUS_START_ADDRESSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH2_RD_DMA_SBUS_START_ADDRESSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH3_RD_DMA_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH3_RD_DMA_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH3_RD_DMA_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH3_RD_DMA_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH3_RD_DMA_HOSTMEM_READ_PTRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH3_RD_DMA_HOSTMEM_READ_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH3_RD_DMA_HOSTMEM_READ_PTRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH3_RD_DMA_HOSTMEM_READ_PTRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH3_RD_DMA_HOSTMEM_START_ADDRESSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH3_RD_DMA_HOSTMEM_START_ADDRESSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH3_RD_DMA_HOSTMEM_START_ADDRESSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH3_RD_DMA_HOSTMEM_START_ADDRESSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH3_RD_DMA_HOSTMEM_THRESHOLDr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH3_RD_DMA_HOSTMEM_THRESHOLDr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH3_RD_DMA_HOSTMEM_THRESHOLDr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH3_RD_DMA_HOSTMEM_THRESHOLDr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH3_RD_DMA_HOSTMEM_WRITE_PTRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH3_RD_DMA_HOSTMEM_WRITE_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH3_RD_DMA_HOSTMEM_WRITE_PTRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH3_RD_DMA_HOSTMEM_WRITE_PTRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_CH3_RD_DMA_SBUS_START_ADDRESSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_CH3_RD_DMA_SBUS_START_ADDRESSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_CH3_RD_DMA_SBUS_START_ADDRESSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_CH3_RD_DMA_SBUS_START_ADDRESSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_DMA_SB_ARB_CTRLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_DMA_SB_ARB_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_DMA_SB_ARB_CTRLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_DMA_SB_ARB_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_FIFO_RD_DMA_DEBUGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_FIFO_RD_DMA_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_FIFO_RD_DMA_DEBUGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_FIFO_RD_DMA_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_GFPORT_CLOCK_CONFIGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_GFPORT_CLOCK_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_GFPORT_CLOCK_CONFIGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_GFPORT_CLOCK_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HGTX_CTRLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HGTX_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HGTX_CTRLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HGTX_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HGTX_CTRL1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HGTX_CTRL1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HGTX_CTRL1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HGTX_CTRL1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HGTX_CTRL2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HGTX_CTRL2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HGTX_CTRL2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HGTX_CTRL2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL0_AVAILABLE_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL0_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL0_AVAILABLE_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL0_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL0_AVAILABLE_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL0_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL0_AVAILABLE_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL0_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL1_AVAILABLE_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL1_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL1_AVAILABLE_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL1_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL1_AVAILABLE_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL1_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL1_AVAILABLE_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL1_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL2_AVAILABLE_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL2_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL2_AVAILABLE_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL2_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL2_AVAILABLE_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL2_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL2_AVAILABLE_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL2_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL3_AVAILABLE_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL3_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL3_AVAILABLE_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL3_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL3_AVAILABLE_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL3_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL3_AVAILABLE_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL3_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL4_AVAILABLE_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL4_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL4_AVAILABLE_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL4_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL4_AVAILABLE_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL4_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL4_AVAILABLE_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL4_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL5_AVAILABLE_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL5_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL5_AVAILABLE_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL5_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL5_AVAILABLE_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL5_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL5_AVAILABLE_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL5_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL6_AVAILABLE_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL6_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL6_AVAILABLE_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL6_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL6_AVAILABLE_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL6_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL6_AVAILABLE_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL6_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL7_AVAILABLE_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL7_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL7_AVAILABLE_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL7_AVAILABLE_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL7_AVAILABLE_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL7_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL7_AVAILABLE_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL7_AVAILABLE_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_HOL_STATr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_HOL_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_HOL_STATr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_HOL_STATr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_I2C_CTRLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_I2C_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_I2C_CTRLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_I2C_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_I2C_DATAr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_I2C_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_I2C_DATAr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_I2C_DATAr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_I2C_RESETr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_I2C_RESETr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_I2C_RESETr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_I2C_RESETr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_I2C_SLAVE_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_I2C_SLAVE_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_I2C_SLAVE_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_I2C_SLAVE_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_I2C_SLAVE_XADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_I2C_SLAVE_XADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_I2C_SLAVE_XADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_I2C_SLAVE_XADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_I2C_STATr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_I2C_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_I2C_STATr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_I2C_STATr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_IGBP_DISCARDr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_IGBP_DISCARDr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_IGBP_DISCARDr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_IGBP_DISCARDr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_IGBP_DISCARD_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_IGBP_DISCARD_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_IGBP_DISCARD_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_IGBP_DISCARD_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_IGBP_DISCARD_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_IGBP_DISCARD_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_IGBP_DISCARD_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_IGBP_DISCARD_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_IGBP_WARNr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_IGBP_WARNr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_IGBP_WARNr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_IGBP_WARNr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_IGBP_WARN_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_IGBP_WARN_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_IGBP_WARN_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_IGBP_WARN_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_IGBP_WARN_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_IGBP_WARN_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_IGBP_WARN_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_IGBP_WARN_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_INT_PHY_SCANr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_INT_PHY_SCANr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_INT_PHY_SCANr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_INT_PHY_SCANr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_IPIC_STATS_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_IPIC_STATS_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_IPIC_STATS_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_IPIC_STATS_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_IRQ_MASKr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_IRQ_MASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_IRQ_MASKr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_IRQ_MASKr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_IRQ_STATr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_IRQ_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_IRQ_STATr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_IRQ_STATr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_JTAGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_JTAGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_JTAGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_JTAGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LEDUP_CTRLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LEDUP_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LEDUP_CTRLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LEDUP_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LEDUP_DATA_RAMr(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LEDUP_DATA_RAMr, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_LEDUP_DATA_RAMr(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LEDUP_DATA_RAMr, REG_PORT_ANY, idx), rv)

#define READ_CMIC_LEDUP_PROGRAM_RAMr(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LEDUP_PROGRAM_RAMr, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_LEDUP_PROGRAM_RAMr(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LEDUP_PROGRAM_RAMr, REG_PORT_ANY, idx), rv)

#define READ_CMIC_LEDUP_STATUSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LEDUP_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LEDUP_STATUSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LEDUP_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_CONTROLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_CONTROLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_0_4r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_0_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_0_4r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_0_4r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_10_14r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_10_14r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_10_14r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_10_14r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_15_19r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_15_19r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_15_19r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_15_19r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_20_24r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_20_24r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_20_24r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_20_24r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_25_29r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_25_29r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_25_29r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_25_29r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_30_34r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_30_34r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_30_34r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_30_34r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_35_39r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_35_39r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_35_39r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_35_39r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_40_44r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_40_44r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_40_44r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_40_44r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_45_49r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_45_49r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_45_49r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_45_49r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_50_54r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_50_54r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_50_54r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_50_54r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_PORT_ORDER_REMAP_5_9r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_5_9r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_PORT_ORDER_REMAP_5_9r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_PORT_ORDER_REMAP_5_9r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LED_STATUSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LED_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LED_STATUSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LED_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LINK_STATr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LINK_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LINK_STATr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LINK_STATr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LINK_STAT_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LINK_STAT_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LINK_STAT_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LINK_STAT_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LINK_STAT_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LINK_STAT_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LINK_STAT_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LINK_STAT_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_LINK_STAT_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_LINK_STAT_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_LINK_STAT_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_LINK_STAT_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MEM_FAILr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MEM_FAILr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MEM_FAILr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MEM_FAILr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_ADDRESSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_ADDRESSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_ADDRESSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_ADDRESSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_AUTO_SCAN_ADDRESSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_AUTO_SCAN_ADDRESSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_AUTO_SCAN_ADDRESSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_AUTO_SCAN_ADDRESSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_11_8r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_11_8r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_11_8r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_11_8r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_15_12r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_15_12r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_15_12r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_15_12r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_19_16r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_19_16r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_19_16r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_19_16r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_23_20r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_23_20r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_23_20r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_23_20r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_27_24r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_27_24r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_27_24r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_27_24r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_31_28r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_31_28r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_31_28r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_31_28r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_35_32r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_35_32r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_35_32r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_35_32r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_39_36r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_39_36r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_39_36r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_39_36r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_3_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_3_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_3_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_3_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_43_40r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_43_40r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_43_40r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_43_40r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_47_44r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_47_44r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_47_44r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_47_44r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_51_48r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_51_48r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_51_48r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_51_48r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_55_52r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_55_52r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_55_52r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_55_52r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_59_56r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_59_56r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_59_56r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_59_56r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_63_60r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_63_60r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_63_60r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_63_60r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_EXT_PHY_ADDR_MAP_7_4r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_7_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_EXT_PHY_ADDR_MAP_7_4r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_EXT_PHY_ADDR_MAP_7_4r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_INT_SEL_MAPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_INT_SEL_MAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_INT_SEL_MAPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_INT_SEL_MAPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_INT_SEL_MAP_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_INT_SEL_MAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_INT_SEL_MAP_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_INT_SEL_MAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_PARAMr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_PARAMr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_PARAMr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_PARAMr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_PORT_TYPE_MAPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_PORT_TYPE_MAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_PORT_TYPE_MAPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_PORT_TYPE_MAPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_PORT_TYPE_MAP_BUS2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_PORT_TYPE_MAP_BUS2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_PORT_TYPE_MAP_BUS2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_PORT_TYPE_MAP_BUS2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_PORT_TYPE_MAP_BUS2_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_PORT_TYPE_MAP_BUS2_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_PORT_TYPE_MAP_BUS2_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_PORT_TYPE_MAP_BUS2_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_PORT_TYPE_MAP_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_PORT_TYPE_MAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_PORT_TYPE_MAP_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_PORT_TYPE_MAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_PROTOCOL_MAPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_PROTOCOL_MAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_PROTOCOL_MAPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_PROTOCOL_MAPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_PROTOCOL_MAP_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_PROTOCOL_MAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_PROTOCOL_MAP_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_PROTOCOL_MAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIIM_READ_DATAr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIIM_READ_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIIM_READ_DATAr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIIM_READ_DATAr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIRRORED_PORTS_TXr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIRRORED_PORTS_TXr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIRRORED_PORTS_TXr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIRRORED_PORTS_TXr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIRRORED_PORTS_TX_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIRRORED_PORTS_TX_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIRRORED_PORTS_TX_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIRRORED_PORTS_TX_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIRRORED_PORTS_TX_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIRRORED_PORTS_TX_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIRRORED_PORTS_TX_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIRRORED_PORTS_TX_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIRROR_TO_PORTSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIRROR_TO_PORTSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIRROR_TO_PORTSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIRROR_TO_PORTSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIRROR_TO_PORTS_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIRROR_TO_PORTS_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIRROR_TO_PORTS_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIRROR_TO_PORTS_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MIRROR_TO_PORTS_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MIRROR_TO_PORTS_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MIRROR_TO_PORTS_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MIRROR_TO_PORTS_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MISC_CONTROLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MISC_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MISC_CONTROLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MISC_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MISC_STATUSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MISC_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MISC_STATUSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MISC_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MMUIRQ_MASKr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MMUIRQ_MASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MMUIRQ_MASKr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MMUIRQ_MASKr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MMUIRQ_STATr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MMUIRQ_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MMUIRQ_STATr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MMUIRQ_STATr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MMU_COSLC_COUNT_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MMU_COSLC_COUNT_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MMU_COSLC_COUNT_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MMU_COSLC_COUNT_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_MMU_COSLC_COUNT_DATAr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_MMU_COSLC_COUNT_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_MMU_COSLC_COUNT_DATAr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_MMU_COSLC_COUNT_DATAr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PCIE_MISCELr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PCIE_MISCELr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PCIE_MISCELr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PCIE_MISCELr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COS_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COS_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COS_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_FROMCPUr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_FROMCPUr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_FROMCPUr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_FROMCPUr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_FROMCPU_MHr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_FROMCPU_MHr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_FROMCPU_MHr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_FROMCPU_MHr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_SCHANr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_SCHANr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_SCHANr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_SCHANr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_SCHAN_REPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_SCHAN_REPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_SCHAN_REPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_SCHAN_REPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_TOCPUDr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUDr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_TOCPUDr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUDr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_TOCPUDMr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUDMr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_TOCPUDMr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUDMr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_TOCPUEr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_TOCPUEr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUEr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_TOCPUEMr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUEMr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_TOCPUEMr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUEMr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_COUNT_TOCPUNr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUNr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_COUNT_TOCPUNr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_COUNT_TOCPUNr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_CTRLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_CTRLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_ETHER_SIGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_ETHER_SIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_ETHER_SIGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_ETHER_SIGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_HEADERr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_HEADERr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_HEADERr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_HEADERr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_LMAC0_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_LMAC0_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_LMAC0_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_LMAC0_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_LMAC0_LOr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_LMAC0_LOr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_LMAC0_LOr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_LMAC0_LOr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_LMAC1_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_LMAC1_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_LMAC1_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_LMAC1_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_LMAC1_LOr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_LMAC1_LOr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_LMAC1_LOr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_LMAC1_LOr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_PORTSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_PORTSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_PORTSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_PORTSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_PORTS_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_PORTS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_PORTS_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_PORTS_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_PRI_MAP_TABLEr(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_PRI_MAP_TABLEr, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_PKT_PRI_MAP_TABLEr(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_PRI_MAP_TABLEr, REG_PORT_ANY, idx), rv)

#define READ_CMIC_PKT_REASONr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_REASONr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_REASONr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_REASONr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_REASON_DIRECTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_REASON_DIRECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_REASON_DIRECTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_REASON_DIRECTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_REASON_DIRECT_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_REASON_DIRECT_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_REASON_DIRECT_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_REASON_DIRECT_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_REASON_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_REASON_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_REASON_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_REASON_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_REASON_MINIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_REASON_MINIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_REASON_MINIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_REASON_MINIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_REASON_MINI_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_REASON_MINI_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_REASON_MINI_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_REASON_MINI_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_RMACr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_RMACr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_RMACr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_RMACr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_RMAC_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_RMAC_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_RMAC_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_RMAC_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_RMH0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_RMH0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_RMH0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_RMH0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_RMH1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_RMH1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_RMH1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_RMH1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_RMH2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_RMH2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_RMH2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_RMH2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_RMH3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_RMH3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_RMH3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_RMH3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_PKT_VLANr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_PKT_VLANr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_PKT_VLANr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_PKT_VLANr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_RATE_ADJUSTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_RATE_ADJUSTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_RATE_ADJUSTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_RATE_ADJUSTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_RATE_ADJUST_I2Cr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_RATE_ADJUST_I2Cr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_RATE_ADJUST_I2Cr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_RATE_ADJUST_I2Cr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_RATE_ADJUST_INT_MDIOr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_RATE_ADJUST_INT_MDIOr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_RATE_ADJUST_INT_MDIOr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_RATE_ADJUST_INT_MDIOr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_RATE_ADJUST_STDMAr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_RATE_ADJUST_STDMAr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_RATE_ADJUST_STDMAr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_RATE_ADJUST_STDMAr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SBUS_RING_MAPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SBUS_RING_MAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SBUS_RING_MAPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SBUS_RING_MAPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SBUS_TIMEOUTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SBUS_TIMEOUTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SBUS_TIMEOUTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SBUS_TIMEOUTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SCAN_PORTSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCAN_PORTSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SCAN_PORTSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCAN_PORTSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SCAN_PORTS_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCAN_PORTS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SCAN_PORTS_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCAN_PORTS_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SCAN_PORTS_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCAN_PORTS_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SCAN_PORTS_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCAN_PORTS_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SCAN_PORTS_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCAN_PORTS_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SCAN_PORTS_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCAN_PORTS_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SCHAN_CTRLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCHAN_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SCHAN_CTRLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCHAN_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SCHAN_ERRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCHAN_ERRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SCHAN_ERRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCHAN_ERRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SCHAN_MESSAGEr(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCHAN_MESSAGEr, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_SCHAN_MESSAGEr(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCHAN_MESSAGEr, REG_PORT_ANY, idx), rv)

#define READ_CMIC_SCHAN_MESSAGE_EXTr(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCHAN_MESSAGE_EXTr, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_SCHAN_MESSAGE_EXTr(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCHAN_MESSAGE_EXTr, REG_PORT_ANY, idx), rv)

#define READ_CMIC_SCHAN_RCPU_RPIO_MESSAGEr(unit, idx, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SCHAN_RCPU_RPIO_MESSAGEr, REG_PORT_ANY, idx), rvp)
#define WRITE_CMIC_SCHAN_RCPU_RPIO_MESSAGEr(unit, idx, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SCHAN_RCPU_RPIO_MESSAGEr, REG_PORT_ANY, idx), rv)

#define READ_CMIC_SKIP_STATS_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SKIP_STATS_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SKIP_STATS_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SKIP_STATS_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SLAM_DMA_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SLAM_DMA_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SLAM_DMA_CUR_ENTRY_SBUS_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_CUR_ENTRY_SBUS_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SLAM_DMA_CUR_ENTRY_SBUS_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_CUR_ENTRY_SBUS_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SLAM_DMA_ENTRY_COUNTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_ENTRY_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SLAM_DMA_ENTRY_COUNTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_ENTRY_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SLAM_DMA_PCIMEM_START_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_PCIMEM_START_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SLAM_DMA_PCIMEM_START_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_PCIMEM_START_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SLAM_DMA_SBUS_START_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_SBUS_START_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SLAM_DMA_SBUS_START_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SLAM_DMA_SBUS_START_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SOFT_RESET_REGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SOFT_RESET_REGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SOFT_RESET_REGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SOFT_RESET_REGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SPARE1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SPARE1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SPARE1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SPARE1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SPARE2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SPARE2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SPARE2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SPARE2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_15_8r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_15_8r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_15_8r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_15_8r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_23_16r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_23_16r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_23_16r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_23_16r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_31_24r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_31_24r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_31_24r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_31_24r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_39_32r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_39_32r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_39_32r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_39_32r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_47_40r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_47_40r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_47_40r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_47_40r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_55_48r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_55_48r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_55_48r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_55_48r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_63_56r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_63_56r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_63_56r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_63_56r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_BLKNUM_MAP_7_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_7_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_BLKNUM_MAP_7_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_BLKNUM_MAP_7_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_CURRENTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_CURRENTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_CURRENTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_CURRENTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_EGR_STATS_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_EGR_STATS_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_EGR_STATS_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_EGR_STATS_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_ING_STATS_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_ING_STATS_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_ING_STATS_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_ING_STATS_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_MAC_STATS_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_MAC_STATS_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_MAC_STATS_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_MAC_STATS_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_MMU_PORTS0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_MMU_PORTS0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_MMU_PORTS0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_MMU_PORTS0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_MMU_PORTS1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_MMU_PORTS1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_MMU_PORTS1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_MMU_PORTS1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_MMU_SETUPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_MMU_SETUPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_MMU_SETUPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_MMU_SETUPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_11_6r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_11_6r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_11_6r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_11_6r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_11_8r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_11_8r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_11_8r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_11_8r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_15_8r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_15_8r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_15_8r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_15_8r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_15_12r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_15_12r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_15_12r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_15_12r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_17_12r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_17_12r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_17_12r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_17_12r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_19_16r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_19_16r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_19_16r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_19_16r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_23_16r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_23_16r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_23_16r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_23_16r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_23_18r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_23_18r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_23_18r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_23_18r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_23_20r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_23_20r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_23_20r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_23_20r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_27_24r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_27_24r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_27_24r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_27_24r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_31_24r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_31_24r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_31_24r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_31_24r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_31_28r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_31_28r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_31_28r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_31_28r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_35_32r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_35_32r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_35_32r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_35_32r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_39_36r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_39_36r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_39_36r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_39_36r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_3_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_3_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_3_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_3_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_43_40r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_43_40r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_43_40r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_43_40r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_47_44r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_47_44r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_47_44r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_47_44r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_51_48r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_51_48r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_51_48r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_51_48r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_55_52r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_55_52r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_55_52r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_55_52r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_59_56r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_59_56r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_59_56r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_59_56r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_5_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_5_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_5_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_5_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_63_60r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_63_60r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_63_60r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_63_60r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_7_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_7_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_7_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_7_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTNUM_MAP_7_4r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_7_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTNUM_MAP_7_4r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTNUM_MAP_7_4r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTS_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTS_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTS_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTS_MOD0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTS_MOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTS_MOD0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTS_MOD0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORTS_MOD1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTS_MOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORTS_MOD1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORTS_MOD1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORT_TYPE_MAPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORT_TYPE_MAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORT_TYPE_MAPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORT_TYPE_MAPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_PORT_TYPE_MAP_HIr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORT_TYPE_MAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_PORT_TYPE_MAP_HIr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_PORT_TYPE_MAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_SBUS_START_ADDRESSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_SBUS_START_ADDRESSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_SBUS_START_ADDRESSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_SBUS_START_ADDRESSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STAT_DMA_SETUPr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STAT_DMA_SETUPr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STAT_DMA_SETUPr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STAT_DMA_SETUPr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_STRAP_OPTIONSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_STRAP_OPTIONSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_STRAP_OPTIONSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_STRAP_OPTIONSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SWITCH_FEATURE_ENABLEr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SWITCH_FEATURE_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SWITCH_FEATURE_ENABLEr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SWITCH_FEATURE_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_SW_PIO_ACK_DATA_BEAT_COUNTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_SW_PIO_ACK_DATA_BEAT_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_SW_PIO_ACK_DATA_BEAT_COUNTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_SW_PIO_ACK_DATA_BEAT_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TABLE_DMA_CFGr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TABLE_DMA_CFGr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_CFGr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TABLE_DMA_CUR_ENTRY_SBUS_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_CUR_ENTRY_SBUS_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TABLE_DMA_CUR_ENTRY_SBUS_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_CUR_ENTRY_SBUS_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TABLE_DMA_ENTRY_COUNTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_ENTRY_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TABLE_DMA_ENTRY_COUNTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_ENTRY_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TABLE_DMA_PCIMEM_START_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_PCIMEM_START_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TABLE_DMA_PCIMEM_START_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_PCIMEM_START_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TABLE_DMA_SBUS_START_ADDRr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_SBUS_START_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TABLE_DMA_SBUS_START_ADDRr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_SBUS_START_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TABLE_DMA_STARTr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_STARTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TABLE_DMA_STARTr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TABLE_DMA_STARTr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TAP_CONTROLr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TAP_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TAP_CONTROLr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TAP_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TO_CORE_PLL_CONTROL_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TO_CORE_PLL_CONTROL_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TO_CORE_PLL_CONTROL_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TO_CORE_PLL_CONTROL_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TO_CORE_PLL_X2_1_CONTROL_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_X2_1_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TO_CORE_PLL_X2_1_CONTROL_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_X2_1_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TO_CORE_PLL_X2_1_CONTROL_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_X2_1_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TO_CORE_PLL_X2_1_CONTROL_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_X2_1_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TO_CORE_PLL_X2_2_CONTROL_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_X2_2_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TO_CORE_PLL_X2_2_CONTROL_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_X2_2_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TO_CORE_PLL_X2_2_CONTROL_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_X2_2_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TO_CORE_PLL_X2_2_CONTROL_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_X2_2_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TO_CORE_PLL_X2_3_CONTROL_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_X2_3_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TO_CORE_PLL_X2_3_CONTROL_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_X2_3_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_TO_CORE_PLL_X2_3_CONTROL_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_X2_3_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_TO_CORE_PLL_X2_3_CONTROL_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_TO_CORE_PLL_X2_3_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS0_PLL_CONTROL_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS0_PLL_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS0_PLL_CONTROL_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS0_PLL_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS0_PLL_CONTROL_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS0_PLL_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS0_PLL_CONTROL_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS0_PLL_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS0_PLL_CONTROL_3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS0_PLL_CONTROL_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS0_PLL_CONTROL_3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS0_PLL_CONTROL_3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS0_PLL_CONTROL_4r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS0_PLL_CONTROL_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS0_PLL_CONTROL_4r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS0_PLL_CONTROL_4r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS0_PLL_STATUSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS0_PLL_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS0_PLL_STATUSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS0_PLL_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS1_PLL_CONTROL_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS1_PLL_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS1_PLL_CONTROL_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS1_PLL_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS1_PLL_CONTROL_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS1_PLL_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS1_PLL_CONTROL_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS1_PLL_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS1_PLL_CONTROL_3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS1_PLL_CONTROL_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS1_PLL_CONTROL_3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS1_PLL_CONTROL_3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS1_PLL_CONTROL_4r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS1_PLL_CONTROL_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS1_PLL_CONTROL_4r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS1_PLL_CONTROL_4r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS1_PLL_STATUSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS1_PLL_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS1_PLL_STATUSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS1_PLL_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS2_PLL_CONTROL_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS2_PLL_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS2_PLL_CONTROL_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS2_PLL_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS2_PLL_CONTROL_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS2_PLL_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS2_PLL_CONTROL_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS2_PLL_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS2_PLL_CONTROL_3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS2_PLL_CONTROL_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS2_PLL_CONTROL_3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS2_PLL_CONTROL_3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS2_PLL_CONTROL_4r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS2_PLL_CONTROL_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS2_PLL_CONTROL_4r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS2_PLL_CONTROL_4r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS2_PLL_STATUSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS2_PLL_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS2_PLL_STATUSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS2_PLL_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_0r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_0r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_0r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_4r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_4r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_4r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_5r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_5r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_5r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_5r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_6r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_6r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_6r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_6r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_7r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_7r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_7r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_7r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_8r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_8r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_8r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_8r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_9r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_9r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_9r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_9r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_10r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_10r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_10r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_10r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_11r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_11r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_11r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_11r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_12r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_12r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_12r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_12r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_13r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_13r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_13r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_13r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_14r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_14r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_14r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_14r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_15r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_15r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_15r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_15r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_16r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_16r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_16r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_16r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_17r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_17r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_17r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_17r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_18r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_18r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_18r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_18r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_19r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_19r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_19r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_19r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_20r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_20r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_20r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_20r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_21r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_21r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_21r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_21r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_22r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_22r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_22r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_22r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_23r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_23r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_23r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_23r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_MDIO_CONFIG_24r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_24r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_MDIO_CONFIG_24r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_MDIO_CONFIG_24r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_PLL_CONTROL_1r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_PLL_CONTROL_1r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_PLL_CONTROL_2r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_PLL_CONTROL_2r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_PLL_CONTROL_3r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_CONTROL_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_PLL_CONTROL_3r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_CONTROL_3r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_PLL_CONTROL_4r(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_CONTROL_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_PLL_CONTROL_4r(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_CONTROL_4r, REG_PORT_ANY, 0), rv)

#define READ_CMIC_XGXS_PLL_STATUSr(unit, rvp) \
	soc_pci_getreg(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CMIC_XGXS_PLL_STATUSr(unit, rv) \
	soc_pci_write(unit, soc_reg_addr(unit, CMIC_XGXS_PLL_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_CNG0COSDROPRATEr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNG0COSDROPRATEr, port, idx), rvp)
#define WRITE_CNG0COSDROPRATEr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNG0COSDROPRATEr, port, idx), rv)

#define READ_CNG1COSDROPRATEr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNG1COSDROPRATEr, port, idx), rvp)
#define WRITE_CNG1COSDROPRATEr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNG1COSDROPRATEr, port, idx), rv)

#define READ_CNGCOSCELLLIMIT0r(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGCOSCELLLIMIT0r, port, idx), rvp)
#define WRITE_CNGCOSCELLLIMIT0r(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGCOSCELLLIMIT0r, port, idx), rv)

#define READ_CNGCOSCELLLIMIT1r(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGCOSCELLLIMIT1r, port, idx), rvp)
#define WRITE_CNGCOSCELLLIMIT1r(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGCOSCELLLIMIT1r, port, idx), rv)

#define READ_CNGCOSPKTLIMITr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGCOSPKTLIMITr, REG_PORT_ANY, idx), rvp)
#define WRITE_CNGCOSPKTLIMITr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGCOSPKTLIMITr, REG_PORT_ANY, idx), rv)

#define READ_CNGCOSPKTLIMIT0r(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGCOSPKTLIMIT0r, port, idx), rvp)
#define WRITE_CNGCOSPKTLIMIT0r(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGCOSPKTLIMIT0r, port, idx), rv)

#define READ_CNGCOSPKTLIMIT1r(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGCOSPKTLIMIT1r, port, idx), rvp)
#define WRITE_CNGCOSPKTLIMIT1r(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGCOSPKTLIMIT1r, port, idx), rv)

#define READ_CNGDROPCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGDROPCOUNTr, port, 0), rvp)
#define WRITE_CNGDROPCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGDROPCOUNTr, port, 0), rv)

#define READ_CNGDROPCOUNT0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGDROPCOUNT0r, port, 0), rvp)
#define WRITE_CNGDROPCOUNT0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGDROPCOUNT0r, port, 0), rv)

#define READ_CNGDROPCOUNT1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGDROPCOUNT1r, port, 0), rvp)
#define WRITE_CNGDROPCOUNT1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGDROPCOUNT1r, port, 0), rv)

#define READ_CNGDYNCELLLIMIT0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGDYNCELLLIMIT0r, port, 0), rvp)
#define WRITE_CNGDYNCELLLIMIT0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGDYNCELLLIMIT0r, port, 0), rv)

#define READ_CNGDYNCELLLIMIT1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGDYNCELLLIMIT1r, port, 0), rvp)
#define WRITE_CNGDYNCELLLIMIT1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGDYNCELLLIMIT1r, port, 0), rv)

#define READ_CNGPORTPKTLIMIT0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGPORTPKTLIMIT0r, port, 0), rvp)
#define WRITE_CNGPORTPKTLIMIT0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGPORTPKTLIMIT0r, port, 0), rv)

#define READ_CNGPORTPKTLIMIT1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGPORTPKTLIMIT1r, port, 0), rvp)
#define WRITE_CNGPORTPKTLIMIT1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGPORTPKTLIMIT1r, port, 0), rv)

#define READ_CNGTOTALDYNCELLLIMIT0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGTOTALDYNCELLLIMIT0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CNGTOTALDYNCELLLIMIT0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGTOTALDYNCELLLIMIT0r, REG_PORT_ANY, 0), rv)

#define READ_CNGTOTALDYNCELLLIMIT1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNGTOTALDYNCELLLIMIT1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CNGTOTALDYNCELLLIMIT1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNGTOTALDYNCELLLIMIT1r, REG_PORT_ANY, 0), rv)

#define READ_CNG_MAPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CNG_MAPr, port, 0), rvp)
#define WRITE_CNG_MAPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CNG_MAPr, port, 0), rv)

#define READ_COMMAND_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COMMAND_CONFIGr, port, 0), rvp)
#define WRITE_COMMAND_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COMMAND_CONFIGr, port, 0), rv)

#define READ_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CONFIGr, port, 0), rvp)
#define WRITE_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CONFIGr, port, 0), rv)

#define READ_CONFIG2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CONFIG2r, port, 0), rvp)
#define WRITE_CONFIG2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CONFIG2r, port, 0), rv)

#define READ_COPYCOUNTCTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COPYCOUNTCTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_COPYCOUNTCTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COPYCOUNTCTLr, REG_PORT_ANY, 0), rv)

#define READ_COPYCOUNT_PARITYr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COPYCOUNT_PARITYr, REG_PORT_ANY, 0), rvp)
#define WRITE_COPYCOUNT_PARITYr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COPYCOUNT_PARITYr, REG_PORT_ANY, 0), rv)

#define READ_COSARBSELr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COSARBSELr, REG_PORT_ANY, 0), rvp)
#define WRITE_COSARBSELr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COSARBSELr, REG_PORT_ANY, 0), rv)

#define READ_COSLCCOUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COSLCCOUNTr, port, idx), rvp)
#define WRITE_COSLCCOUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COSLCCOUNTr, port, idx), rv)

#define READ_COSMASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COSMASKr, port, 0), rvp)
#define WRITE_COSMASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COSMASKr, port, 0), rv)

#define READ_COSMASK_CPUr(unit, rvp) \
	soc_reg_read(unit, COSMASK_CPUr, soc_reg_addr(unit, COSMASK_CPUr, REG_PORT_ANY, 0), rvp)
#define WRITE_COSMASK_CPUr(unit, rv) \
	soc_reg_write(unit, COSMASK_CPUr, soc_reg_addr(unit, COSMASK_CPUr, REG_PORT_ANY, 0), rv)

#define READ_COSMASK_CPU1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COSMASK_CPU1r, REG_PORT_ANY, 0), rvp)
#define WRITE_COSMASK_CPU1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COSMASK_CPU1r, REG_PORT_ANY, 0), rv)

#define READ_COSPKTCOUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COSPKTCOUNTr, port, idx), rvp)
#define WRITE_COSPKTCOUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COSPKTCOUNTr, port, idx), rv)

#define READ_COSWEIGHTSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COSWEIGHTSr, port, idx), rvp)
#define WRITE_COSWEIGHTSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COSWEIGHTSr, port, idx), rv)

#define READ_COS_ENABLEr(unit, port, cos, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COS_ENABLEr, port, cos), rvp)
#define WRITE_COS_ENABLEr(unit, port, cos, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COS_ENABLEr, port, cos), rv)

#define READ_COS_MAP_SELr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COS_MAP_SELr, port, 0), rvp)
#define WRITE_COS_MAP_SELr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COS_MAP_SELr, port, 0), rv)

#define READ_COS_MODEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COS_MODEr, port, 0), rvp)
#define WRITE_COS_MODEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COS_MODEr, port, 0), rv)

#define READ_COS_SELr(unit, port, rvp) \
	soc_reg_read(unit, COS_SELr, soc_reg_addr(unit, COS_SELr, port, 0), rvp)
#define WRITE_COS_SELr(unit, port, rv) \
	soc_reg_write(unit, COS_SELr, soc_reg_addr(unit, COS_SELr, port, 0), rv)

#define READ_COS_SEL_2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, COS_SEL_2r, port, 0), rvp)
#define WRITE_COS_SEL_2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, COS_SEL_2r, port, 0), rv)

#define READ_CPATHBISRDBGRDDATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPATHBISRDBGRDDATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPATHBISRDBGRDDATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPATHBISRDBGRDDATAr, REG_PORT_ANY, 0), rv)

#define READ_CPUPKTMAXBUCKETr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPUPKTMAXBUCKETr, REG_PORT_ANY, idx), rvp)
#define WRITE_CPUPKTMAXBUCKETr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPUPKTMAXBUCKETr, REG_PORT_ANY, idx), rv)

#define READ_CPUPKTMAXBUCKETCONFIGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPUPKTMAXBUCKETCONFIGr, REG_PORT_ANY, idx), rvp)
#define WRITE_CPUPKTMAXBUCKETCONFIGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPUPKTMAXBUCKETCONFIGr, REG_PORT_ANY, idx), rv)

#define READ_CPUPKTPORTMAXBUCKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPUPKTPORTMAXBUCKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPUPKTPORTMAXBUCKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPUPKTPORTMAXBUCKETr, REG_PORT_ANY, 0), rv)

#define READ_CPUPKTPORTMAXBUCKETCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPUPKTPORTMAXBUCKETCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPUPKTPORTMAXBUCKETCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPUPKTPORTMAXBUCKETCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_CPUSLOTMINTIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPUSLOTMINTIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPUSLOTMINTIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPUSLOTMINTIMERr, REG_PORT_ANY, 0), rv)

#define READ_CPU_BWr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_BWr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_BWr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_BWr, REG_PORT_ANY, 0), rv)

#define READ_CPU_CONTROLr(unit, port, rvp) \
	soc_reg_read(unit, CPU_CONTROLr, soc_reg_addr(unit, CPU_CONTROLr, port, 0), rvp)
#define WRITE_CPU_CONTROLr(unit, port, rv) \
	soc_reg_write(unit, CPU_CONTROLr, soc_reg_addr(unit, CPU_CONTROLr, port, 0), rv)

#define READ_CPU_CONTROL_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_CONTROL_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_CONTROL_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_CONTROL_0r, REG_PORT_ANY, 0), rv)

#define READ_CPU_CONTROL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_CONTROL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_CPU_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_CPU_CONTROL_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_CONTROL_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_CONTROL_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_CONTROL_3r, REG_PORT_ANY, 0), rv)

#define READ_CPU_CONTROL_Mr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_CONTROL_Mr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_CONTROL_Mr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_CONTROL_Mr, REG_PORT_ANY, 0), rv)

#define READ_CPU_COS_CAM_BIST_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_COS_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_COS_CAM_BIST_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_COS_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_CPU_COS_CAM_BIST_DBG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_COS_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_COS_CAM_BIST_DBG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_COS_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_CPU_COS_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_COS_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_COS_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_COS_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_CPU_COS_CAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_COS_CAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_COS_CAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_COS_CAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_CPU_COS_SELr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_COS_SELr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_COS_SELr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_COS_SELr, REG_PORT_ANY, 0), rv)

#define READ_CPU_COS_SEL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_COS_SEL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_COS_SEL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_COS_SEL_2r, REG_PORT_ANY, 0), rv)

#define READ_CPU_PRIORITY_SELr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_PRIORITY_SELr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_PRIORITY_SELr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_PRIORITY_SELr, REG_PORT_ANY, 0), rv)

#define READ_CPU_PRIORITY_SEL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_PRIORITY_SEL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_PRIORITY_SEL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_PRIORITY_SEL_2r, REG_PORT_ANY, 0), rv)

#define READ_CPU_SLOT_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CPU_SLOT_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_CPU_SLOT_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CPU_SLOT_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_CSE_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_ATE_STS0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_ATE_STS0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_ATE_STS0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_ATE_STS0r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_ATE_STS1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_ATE_STS1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_ATE_STS1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_ATE_STS1r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_ATE_STS2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_ATE_STS2r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_ATE_STS2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_ATE_STS2r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_ATE_TMODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_ATE_TMODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_ATE_TMODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_ATE_TMODEr, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_ADR0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_ADR0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_ADR0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_ADR0r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_ADR1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_ADR1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_ADR1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_ADR1r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_D0F_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_D0F_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_D0F_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_D0F_0r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_D0F_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_D0F_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_D0F_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_D0F_1r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_D0R_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_D0R_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_D0R_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_D0R_0r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_D0R_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_D0R_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_D0R_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_D0R_1r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_D1F_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_D1F_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_D1F_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_D1F_0r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_D1F_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_D1F_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_D1F_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_D1F_1r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_D1R_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_D1R_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_D1R_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_D1R_0r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_D1R_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_D1R_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_D1R_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_D1R_1r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_STS_DONEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_STS_DONEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_STS_DONEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_STS_DONEr, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_STS_ERR_ADRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_STS_ERR_ADRr, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_STS_ERR_ADRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_STS_ERR_ADRr, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_STS_ERR_DF_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_STS_ERR_DF_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_STS_ERR_DF_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_STS_ERR_DF_0r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_STS_ERR_DF_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_STS_ERR_DF_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_STS_ERR_DF_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_STS_ERR_DF_1r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_STS_ERR_DR_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_STS_ERR_DR_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_STS_ERR_DR_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_STS_ERR_DR_0r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_STS_ERR_DR_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_STS_ERR_DR_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_STS_ERR_DR_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_STS_ERR_DR_1r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_TMODE0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_TMODE0r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_TMODE0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_TMODE0r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_LTE_TMODE1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_LTE_TMODE1r, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_LTE_TMODE1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_LTE_TMODE1r, REG_PORT_ANY, 0), rv)

#define READ_CSE_DTU_MODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, CSE_DTU_MODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_CSE_DTU_MODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, CSE_DTU_MODEr, REG_PORT_ANY, 0), rv)

#define READ_DDR72_CONFIG_REG1_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DDR72_CONFIG_REG1_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_DDR72_CONFIG_REG1_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DDR72_CONFIG_REG1_ISr, REG_PORT_ANY, 0), rv)

#define READ_DDR72_CONFIG_REG2_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DDR72_CONFIG_REG2_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_DDR72_CONFIG_REG2_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DDR72_CONFIG_REG2_ISr, REG_PORT_ANY, 0), rv)

#define READ_DDR72_CONFIG_REG3_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DDR72_CONFIG_REG3_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_DDR72_CONFIG_REG3_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DDR72_CONFIG_REG3_ISr, REG_PORT_ANY, 0), rv)

#define READ_DDR72_STATUS_REG1_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DDR72_STATUS_REG1_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_DDR72_STATUS_REG1_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DDR72_STATUS_REG1_ISr, REG_PORT_ANY, 0), rv)

#define READ_DDR72_STATUS_REG2_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DDR72_STATUS_REG2_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_DDR72_STATUS_REG2_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DDR72_STATUS_REG2_ISr, REG_PORT_ANY, 0), rv)

#define READ_DEBUG0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEBUG0r, REG_PORT_ANY, 0), rvp)
#define WRITE_DEBUG0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEBUG0r, REG_PORT_ANY, 0), rv)

#define READ_DEBUG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEBUG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_DEBUG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEBUG1r, REG_PORT_ANY, 0), rv)

#define READ_DEBUGCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEBUGCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_DEBUGCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEBUGCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_DEBUG_BSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEBUG_BSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_DEBUG_BSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEBUG_BSEr, REG_PORT_ANY, 0), rv)

#define READ_DEBUG_CSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEBUG_CSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_DEBUG_CSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEBUG_CSEr, REG_PORT_ANY, 0), rv)

#define READ_DEBUG_HSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEBUG_HSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_DEBUG_HSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEBUG_HSEr, REG_PORT_ANY, 0), rv)

#define READ_DEF_VLAN_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEF_VLAN_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_DEF_VLAN_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEF_VLAN_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_DEQ_AGINGMASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEQ_AGINGMASKr, port, 0), rvp)
#define WRITE_DEQ_AGINGMASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEQ_AGINGMASKr, port, 0), rv)

#define READ_DEQ_AGINGMASK_64r(unit, port, rvp) \
	soc_reg_read(unit, DEQ_AGINGMASK_64r, soc_reg_addr(unit, DEQ_AGINGMASK_64r, port, 0), rvp)
#define WRITE_DEQ_AGINGMASK_64r(unit, port, rv) \
	soc_reg_write(unit, DEQ_AGINGMASK_64r, soc_reg_addr(unit, DEQ_AGINGMASK_64r, port, 0), rv)

#define READ_DEQ_AGINGMASK_CPU_PORTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEQ_AGINGMASK_CPU_PORTr, REG_PORT_ANY, 0), rvp)
#define WRITE_DEQ_AGINGMASK_CPU_PORTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEQ_AGINGMASK_CPU_PORTr, REG_PORT_ANY, 0), rv)

#define READ_DEQ_BYPASSMMUr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEQ_BYPASSMMUr, REG_PORT_ANY, 0), rvp)
#define WRITE_DEQ_BYPASSMMUr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEQ_BYPASSMMUr, REG_PORT_ANY, 0), rv)

#define READ_DEQ_CBPERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEQ_CBPERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_DEQ_CBPERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEQ_CBPERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_DEQ_LENGTHERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEQ_LENGTHERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_DEQ_LENGTHERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEQ_LENGTHERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_DEQ_PKTHDR0ERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEQ_PKTHDR0ERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_DEQ_PKTHDR0ERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEQ_PKTHDR0ERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_DEQ_PKTHDR2ERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEQ_PKTHDR2ERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_DEQ_PKTHDR2ERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEQ_PKTHDR2ERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_DEQ_PKTHDRCPUERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEQ_PKTHDRCPUERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_DEQ_PKTHDRCPUERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEQ_PKTHDRCPUERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_DEQ_SPAREr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEQ_SPAREr, REG_PORT_ANY, 0), rvp)
#define WRITE_DEQ_SPAREr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEQ_SPAREr, REG_PORT_ANY, 0), rv)

#define READ_DEST_MIRRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DEST_MIRRr, port, 0), rvp)
#define WRITE_DEST_MIRRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DEST_MIRRr, port, 0), rv)

#define READ_DLFBC_RATE_CONTROLr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DLFBC_RATE_CONTROLr, REG_PORT_ANY, idx), rvp)
#define WRITE_DLFBC_RATE_CONTROLr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DLFBC_RATE_CONTROLr, REG_PORT_ANY, idx), rv)

#define READ_DLFBC_RATE_CONTROL_M0r(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DLFBC_RATE_CONTROL_M0r, REG_PORT_ANY, idx), rvp)
#define WRITE_DLFBC_RATE_CONTROL_M0r(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DLFBC_RATE_CONTROL_M0r, REG_PORT_ANY, idx), rv)

#define READ_DLFBC_RATE_CONTROL_M1r(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DLFBC_RATE_CONTROL_M1r, REG_PORT_ANY, idx), rvp)
#define WRITE_DLFBC_RATE_CONTROL_M1r(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DLFBC_RATE_CONTROL_M1r, REG_PORT_ANY, idx), rv)

#define READ_DLFBC_STORM_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DLFBC_STORM_CONTROLr, port, 0), rvp)
#define WRITE_DLFBC_STORM_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DLFBC_STORM_CONTROLr, port, 0), rv)

#define READ_DLF_RATE_CONTROLr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DLF_RATE_CONTROLr, REG_PORT_ANY, idx), rvp)
#define WRITE_DLF_RATE_CONTROLr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DLF_RATE_CONTROLr, REG_PORT_ANY, idx), rv)

#define READ_DLF_TRUNK_BITMAPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DLF_TRUNK_BITMAPr, port, 0), rvp)
#define WRITE_DLF_TRUNK_BITMAPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DLF_TRUNK_BITMAPr, port, 0), rv)

#define READ_DLF_TRUNK_BLOCK_MASKr(unit, port, rvp) \
	soc_reg_read(unit, DLF_TRUNK_BLOCK_MASKr, soc_reg_addr(unit, DLF_TRUNK_BLOCK_MASKr, port, 0), rvp)
#define WRITE_DLF_TRUNK_BLOCK_MASKr(unit, port, rv) \
	soc_reg_write(unit, DLF_TRUNK_BLOCK_MASKr, soc_reg_addr(unit, DLF_TRUNK_BLOCK_MASKr, port, 0), rv)

#define READ_DLLCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DLLCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_DLLCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DLLCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_DMUX_TRUNKSELr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DMUX_TRUNKSELr, port, 0), rvp)
#define WRITE_DMUX_TRUNKSELr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DMUX_TRUNKSELr, port, 0), rv)

#define READ_DOS_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DOS_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_DOS_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DOS_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_DOS_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DOS_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_DOS_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DOS_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_DPATHBISRDBGRDDATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DPATHBISRDBGRDDATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_DPATHBISRDBGRDDATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DPATHBISRDBGRDDATAr, REG_PORT_ANY, 0), rv)

#define READ_DQSINTARGETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DQSINTARGETr, REG_PORT_ANY, 0), rvp)
#define WRITE_DQSINTARGETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DQSINTARGETr, REG_PORT_ANY, 0), rv)

#define READ_DQSOUTTARGETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DQSOUTTARGETr, REG_PORT_ANY, 0), rvp)
#define WRITE_DQSOUTTARGETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DQSOUTTARGETr, REG_PORT_ANY, 0), rv)

#define READ_DROPPEDCELLCOUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DROPPEDCELLCOUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_DROPPEDCELLCOUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DROPPEDCELLCOUNTr, REG_PORT_ANY, 0), rv)

#define READ_DROPPEDPACKETCOUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DROPPEDPACKETCOUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_DROPPEDPACKETCOUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DROPPEDPACKETCOUNTr, REG_PORT_ANY, 0), rv)

#define READ_DROPPEDPKTCOUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DROPPEDPKTCOUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_DROPPEDPKTCOUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DROPPEDPKTCOUNTr, REG_PORT_ANY, 0), rv)

#define READ_DROP_BYTE_CNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DROP_BYTE_CNTr, port, idx), rvp)
#define WRITE_DROP_BYTE_CNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DROP_BYTE_CNTr, port, idx), rv)

#define READ_DROP_BYTE_CNT_INGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DROP_BYTE_CNT_INGr, port, 0), rvp)
#define WRITE_DROP_BYTE_CNT_INGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DROP_BYTE_CNT_INGr, port, 0), rv)

#define READ_DROP_CBPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DROP_CBPr, REG_PORT_ANY, 0), rvp)
#define WRITE_DROP_CBPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DROP_CBPr, REG_PORT_ANY, 0), rv)

#define READ_DROP_PKT_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DROP_PKT_CNTr, port, 0), rvp)
#define WRITE_DROP_PKT_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DROP_PKT_CNTr, port, 0), rv)

#define READ_DROP_PKT_CNT_INGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DROP_PKT_CNT_INGr, port, 0), rvp)
#define WRITE_DROP_PKT_CNT_INGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DROP_PKT_CNT_INGr, port, 0), rv)

#define READ_DROP_PKT_CNT_REDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DROP_PKT_CNT_REDr, port, 0), rvp)
#define WRITE_DROP_PKT_CNT_REDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DROP_PKT_CNT_REDr, port, 0), rv)

#define READ_DROP_PKT_CNT_YELr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DROP_PKT_CNT_YELr, port, 0), rvp)
#define WRITE_DROP_PKT_CNT_YELr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DROP_PKT_CNT_YELr, port, 0), rv)

#define READ_DROP_PORT_EGRPKTUSECOSr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DROP_PORT_EGRPKTUSECOSr, REG_PORT_ANY, idx), rvp)
#define WRITE_DROP_PORT_EGRPKTUSECOSr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DROP_PORT_EGRPKTUSECOSr, REG_PORT_ANY, idx), rv)

#define READ_DROP_XQ_PARITYr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DROP_XQ_PARITYr, REG_PORT_ANY, 0), rvp)
#define WRITE_DROP_XQ_PARITYr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DROP_XQ_PARITYr, REG_PORT_ANY, 0), rv)

#define READ_DSCP_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DSCP_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_DSCP_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DSCP_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_DSCP_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DSCP_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_DSCP_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DSCP_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_DSCP_TABLE_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DSCP_TABLE_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_DSCP_TABLE_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DSCP_TABLE_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_DSCP_TABLE_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DSCP_TABLE_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_DSCP_TABLE_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DSCP_TABLE_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_DT_CONFIG1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DT_CONFIG1r, port, 0), rvp)
#define WRITE_DT_CONFIG1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DT_CONFIG1r, port, 0), rv)

#define READ_DYNAMICCELLCOUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DYNAMICCELLCOUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_DYNAMICCELLCOUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DYNAMICCELLCOUNTr, REG_PORT_ANY, 0), rv)

#define READ_DYNCELLCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DYNCELLCOUNTr, port, 0), rvp)
#define WRITE_DYNCELLCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DYNCELLCOUNTr, port, 0), rv)

#define READ_DYNCELLLIMITr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DYNCELLLIMITr, port, 0), rvp)
#define WRITE_DYNCELLLIMITr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DYNCELLLIMITr, port, 0), rv)

#define READ_DYNPKTCNTPORTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DYNPKTCNTPORTr, port, 0), rvp)
#define WRITE_DYNPKTCNTPORTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DYNPKTCNTPORTr, port, 0), rv)

#define READ_DYNRESETLIMPORTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DYNRESETLIMPORTr, port, 0), rvp)
#define WRITE_DYNRESETLIMPORTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DYNRESETLIMPORTr, port, 0), rv)

#define READ_DYNXQCNTPORTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, DYNXQCNTPORTr, port, 0), rvp)
#define WRITE_DYNXQCNTPORTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, DYNXQCNTPORTr, port, 0), rv)

#define READ_E2ECC_HOL_ENr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2ECC_HOL_ENr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2ECC_HOL_ENr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2ECC_HOL_ENr, REG_PORT_ANY, 0), rv)

#define READ_E2ECC_HOL_PBMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2ECC_HOL_PBMr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2ECC_HOL_PBMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2ECC_HOL_PBMr, REG_PORT_ANY, 0), rv)

#define READ_E2ECC_MAX_TX_TIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2ECC_MAX_TX_TIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2ECC_MAX_TX_TIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2ECC_MAX_TX_TIMERr, REG_PORT_ANY, 0), rv)

#define READ_E2ECC_MIN_TX_TIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2ECC_MIN_TX_TIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2ECC_MIN_TX_TIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2ECC_MIN_TX_TIMERr, REG_PORT_ANY, 0), rv)

#define READ_E2ECONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2ECONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2ECONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2ECONFIGr, REG_PORT_ANY, 0), rv)

#define READ_E2EFC_CNT_ATTRr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_CNT_ATTRr, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_CNT_ATTRr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_CNT_ATTRr, REG_PORT_ANY, idx), rv)

#define READ_E2EFC_CNT_DISC_LIMITr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_CNT_DISC_LIMITr, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_CNT_DISC_LIMITr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_CNT_DISC_LIMITr, REG_PORT_ANY, idx), rv)

#define READ_E2EFC_CNT_RESET_LIMITr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_CNT_RESET_LIMITr, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_CNT_RESET_LIMITr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_CNT_RESET_LIMITr, REG_PORT_ANY, idx), rv)

#define READ_E2EFC_CNT_SET_LIMITr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_CNT_SET_LIMITr, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_CNT_SET_LIMITr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_CNT_SET_LIMITr, REG_PORT_ANY, idx), rv)

#define READ_E2EFC_CNT_VALr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_CNT_VALr, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_CNT_VALr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_CNT_VALr, REG_PORT_ANY, idx), rv)

#define READ_E2EFC_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EFC_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_E2EFC_HG_MAX_TX_TIMERr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_HG_MAX_TX_TIMERr, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_HG_MAX_TX_TIMERr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_HG_MAX_TX_TIMERr, REG_PORT_ANY, idx), rv)

#define READ_E2EFC_HG_MIN_TX_TIMERr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_HG_MIN_TX_TIMERr, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_HG_MIN_TX_TIMERr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_HG_MIN_TX_TIMERr, REG_PORT_ANY, idx), rv)

#define READ_E2EFC_IBP_ENr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_IBP_ENr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EFC_IBP_ENr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_IBP_ENr, REG_PORT_ANY, 0), rv)

#define READ_E2EFC_IBP_HG_RMODr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_IBP_HG_RMODr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EFC_IBP_HG_RMODr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_IBP_HG_RMODr, REG_PORT_ANY, 0), rv)

#define READ_E2EFC_PARITYERRORPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_PARITYERRORPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EFC_PARITYERRORPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_PARITYERRORPTRr, REG_PORT_ANY, 0), rv)

#define READ_E2EFC_RX_RMODIDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_RX_RMODIDr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EFC_RX_RMODIDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_RX_RMODIDr, REG_PORT_ANY, 0), rv)

#define READ_E2EFC_RX_RMT_IBP0r(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_RX_RMT_IBP0r, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_RX_RMT_IBP0r(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_RX_RMT_IBP0r, REG_PORT_ANY, idx), rv)

#define READ_E2EFC_RX_RMT_IBP1r(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_RX_RMT_IBP1r, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_RX_RMT_IBP1r(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_RX_RMT_IBP1r, REG_PORT_ANY, idx), rv)

#define READ_E2EFC_RX_RMT_TIMEOUTr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_RX_RMT_TIMEOUTr, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_RX_RMT_TIMEOUTr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_RX_RMT_TIMEOUTr, REG_PORT_ANY, idx), rv)

#define READ_E2EFC_TX_RMODIDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_TX_RMODIDr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EFC_TX_RMODIDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_TX_RMODIDr, REG_PORT_ANY, 0), rv)

#define READ_E2EFC_TX_RMT_DISC0r(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_TX_RMT_DISC0r, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_TX_RMT_DISC0r(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_TX_RMT_DISC0r, REG_PORT_ANY, idx), rv)

#define READ_E2EFC_TX_RMT_DISC1r(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_TX_RMT_DISC1r, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_TX_RMT_DISC1r(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_TX_RMT_DISC1r, REG_PORT_ANY, idx), rv)

#define READ_E2EFC_TX_RMT_IBP0r(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_TX_RMT_IBP0r, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_TX_RMT_IBP0r(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_TX_RMT_IBP0r, REG_PORT_ANY, idx), rv)

#define READ_E2EFC_TX_RMT_IBP1r(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EFC_TX_RMT_IBP1r, REG_PORT_ANY, idx), rvp)
#define WRITE_E2EFC_TX_RMT_IBP1r(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EFC_TX_RMT_IBP1r, REG_PORT_ANY, idx), rv)

#define READ_E2EHOLCCDEBUG0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EHOLCCDEBUG0r, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EHOLCCDEBUG0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EHOLCCDEBUG0r, REG_PORT_ANY, 0), rv)

#define READ_E2EHOLCCDEBUG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EHOLCCDEBUG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EHOLCCDEBUG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EHOLCCDEBUG1r, REG_PORT_ANY, 0), rv)

#define READ_E2EHOLCCDEBUG2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EHOLCCDEBUG2r, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EHOLCCDEBUG2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EHOLCCDEBUG2r, REG_PORT_ANY, 0), rv)

#define READ_E2EHOLCCDEBUG3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EHOLCCDEBUG3r, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EHOLCCDEBUG3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EHOLCCDEBUG3r, REG_PORT_ANY, 0), rv)

#define READ_E2EIBPBKPSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPBKPSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EIBPBKPSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPBKPSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_E2EIBPCELLCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPCELLCOUNTr, port, 0), rvp)
#define WRITE_E2EIBPCELLCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPCELLCOUNTr, port, 0), rv)

#define READ_E2EIBPCELLCOUNT1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPCELLCOUNT1r, port, 0), rvp)
#define WRITE_E2EIBPCELLCOUNT1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPCELLCOUNT1r, port, 0), rv)

#define READ_E2EIBPCELLCOUNT2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPCELLCOUNT2r, port, 0), rvp)
#define WRITE_E2EIBPCELLCOUNT2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPCELLCOUNT2r, port, 0), rv)

#define READ_E2EIBPCELLCOUNT3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPCELLCOUNT3r, port, 0), rvp)
#define WRITE_E2EIBPCELLCOUNT3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPCELLCOUNT3r, port, 0), rv)

#define READ_E2EIBPCELLRESETLIMIT1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPCELLRESETLIMIT1r, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EIBPCELLRESETLIMIT1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPCELLRESETLIMIT1r, REG_PORT_ANY, 0), rv)

#define READ_E2EIBPCELLRESETLIMIT2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPCELLRESETLIMIT2r, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EIBPCELLRESETLIMIT2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPCELLRESETLIMIT2r, REG_PORT_ANY, 0), rv)

#define READ_E2EIBPCELLRESETLIMIT3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPCELLRESETLIMIT3r, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EIBPCELLRESETLIMIT3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPCELLRESETLIMIT3r, REG_PORT_ANY, 0), rv)

#define READ_E2EIBPCELLSETLIMITr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPCELLSETLIMITr, port, 0), rvp)
#define WRITE_E2EIBPCELLSETLIMITr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPCELLSETLIMITr, port, 0), rv)

#define READ_E2EIBPCELLSETLIMIT1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPCELLSETLIMIT1r, port, 0), rvp)
#define WRITE_E2EIBPCELLSETLIMIT1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPCELLSETLIMIT1r, port, 0), rv)

#define READ_E2EIBPCELLSETLIMIT2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPCELLSETLIMIT2r, port, 0), rvp)
#define WRITE_E2EIBPCELLSETLIMIT2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPCELLSETLIMIT2r, port, 0), rv)

#define READ_E2EIBPCELLSETLIMIT3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPCELLSETLIMIT3r, port, 0), rvp)
#define WRITE_E2EIBPCELLSETLIMIT3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPCELLSETLIMIT3r, port, 0), rv)

#define READ_E2EIBPDISCARDSETLIMITr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPDISCARDSETLIMITr, port, 0), rvp)
#define WRITE_E2EIBPDISCARDSETLIMITr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPDISCARDSETLIMITr, port, 0), rv)

#define READ_E2EIBPDISCSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPDISCSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EIBPDISCSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPDISCSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_E2EIBPFCBITMAP1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPFCBITMAP1r, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EIBPFCBITMAP1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPFCBITMAP1r, REG_PORT_ANY, 0), rv)

#define READ_E2EIBPFCBITMAP2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPFCBITMAP2r, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EIBPFCBITMAP2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPFCBITMAP2r, REG_PORT_ANY, 0), rv)

#define READ_E2EIBPFCBITMAP3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPFCBITMAP3r, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EIBPFCBITMAP3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPFCBITMAP3r, REG_PORT_ANY, 0), rv)

#define READ_E2EIBPFCDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPFCDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EIBPFCDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPFCDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_E2EIBPPKTCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPPKTCOUNTr, port, 0), rvp)
#define WRITE_E2EIBPPKTCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPPKTCOUNTr, port, 0), rv)

#define READ_E2EIBPPKTCOUNT1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPPKTCOUNT1r, port, 0), rvp)
#define WRITE_E2EIBPPKTCOUNT1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPPKTCOUNT1r, port, 0), rv)

#define READ_E2EIBPPKTCOUNT2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPPKTCOUNT2r, port, 0), rvp)
#define WRITE_E2EIBPPKTCOUNT2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPPKTCOUNT2r, port, 0), rv)

#define READ_E2EIBPPKTCOUNT3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPPKTCOUNT3r, port, 0), rvp)
#define WRITE_E2EIBPPKTCOUNT3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPPKTCOUNT3r, port, 0), rv)

#define READ_E2EIBPPKTRESETLIMIT1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPPKTRESETLIMIT1r, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EIBPPKTRESETLIMIT1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPPKTRESETLIMIT1r, REG_PORT_ANY, 0), rv)

#define READ_E2EIBPPKTRESETLIMIT2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPPKTRESETLIMIT2r, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EIBPPKTRESETLIMIT2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPPKTRESETLIMIT2r, REG_PORT_ANY, 0), rv)

#define READ_E2EIBPPKTRESETLIMIT3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPPKTRESETLIMIT3r, REG_PORT_ANY, 0), rvp)
#define WRITE_E2EIBPPKTRESETLIMIT3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPPKTRESETLIMIT3r, REG_PORT_ANY, 0), rv)

#define READ_E2EIBPPKTSETLIMITr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPPKTSETLIMITr, port, 0), rvp)
#define WRITE_E2EIBPPKTSETLIMITr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPPKTSETLIMITr, port, 0), rv)

#define READ_E2EIBPPKTSETLIMIT1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPPKTSETLIMIT1r, port, 0), rvp)
#define WRITE_E2EIBPPKTSETLIMIT1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPPKTSETLIMIT1r, port, 0), rv)

#define READ_E2EIBPPKTSETLIMIT2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPPKTSETLIMIT2r, port, 0), rvp)
#define WRITE_E2EIBPPKTSETLIMIT2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPPKTSETLIMIT2r, port, 0), rv)

#define READ_E2EIBPPKTSETLIMIT3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2EIBPPKTSETLIMIT3r, port, 0), rvp)
#define WRITE_E2EIBPPKTSETLIMIT3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2EIBPPKTSETLIMIT3r, port, 0), rv)

#define READ_E2E_DROP_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_DROP_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_DROP_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_DROP_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_E2E_HOL_ENr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_HOL_ENr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_HOL_ENr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_HOL_ENr, REG_PORT_ANY, 0), rv)

#define READ_E2E_HOL_PBMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_HOL_PBMr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_HOL_PBMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_HOL_PBMr, REG_PORT_ANY, 0), rv)

#define READ_E2E_HOL_RX_DA_LSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_HOL_RX_DA_LSr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_HOL_RX_DA_LSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_HOL_RX_DA_LSr, REG_PORT_ANY, 0), rv)

#define READ_E2E_HOL_RX_DA_MSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_HOL_RX_DA_MSr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_HOL_RX_DA_MSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_HOL_RX_DA_MSr, REG_PORT_ANY, 0), rv)

#define READ_E2E_HOL_RX_LENGTH_TYPEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_HOL_RX_LENGTH_TYPEr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_HOL_RX_LENGTH_TYPEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_HOL_RX_LENGTH_TYPEr, REG_PORT_ANY, 0), rv)

#define READ_E2E_HOL_RX_OPCODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_HOL_RX_OPCODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_HOL_RX_OPCODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_HOL_RX_OPCODEr, REG_PORT_ANY, 0), rv)

#define READ_E2E_IBP_RX_DA_LSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_IBP_RX_DA_LSr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_IBP_RX_DA_LSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_IBP_RX_DA_LSr, REG_PORT_ANY, 0), rv)

#define READ_E2E_IBP_RX_DA_MSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_IBP_RX_DA_MSr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_IBP_RX_DA_MSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_IBP_RX_DA_MSr, REG_PORT_ANY, 0), rv)

#define READ_E2E_IBP_RX_LENGTH_TYPEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_IBP_RX_LENGTH_TYPEr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_IBP_RX_LENGTH_TYPEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_IBP_RX_LENGTH_TYPEr, REG_PORT_ANY, 0), rv)

#define READ_E2E_IBP_RX_OPCODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_IBP_RX_OPCODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_IBP_RX_OPCODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_IBP_RX_OPCODEr, REG_PORT_ANY, 0), rv)

#define READ_E2E_LOCAL_BMPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_LOCAL_BMPr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_LOCAL_BMPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_LOCAL_BMPr, REG_PORT_ANY, 0), rv)

#define READ_E2E_MAX_TX_TIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_MAX_TX_TIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_MAX_TX_TIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_MAX_TX_TIMERr, REG_PORT_ANY, 0), rv)

#define READ_E2E_MIN_TX_TIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_MIN_TX_TIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_MIN_TX_TIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_MIN_TX_TIMERr, REG_PORT_ANY, 0), rv)

#define READ_E2E_MODULE_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_MODULE_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_MODULE_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_MODULE_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_E2E_RX_BP_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_RX_BP_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_RX_BP_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_RX_BP_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_E2E_XQ_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, E2E_XQ_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_E2E_XQ_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, E2E_XQ_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_ECCP_1B_ERR_INT_CTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ECCP_1B_ERR_INT_CTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_ECCP_1B_ERR_INT_CTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ECCP_1B_ERR_INT_CTRr, REG_PORT_ANY, 0), rv)

#define READ_ECCP_1B_ERR_INT_STATr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ECCP_1B_ERR_INT_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_ECCP_1B_ERR_INT_STATr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ECCP_1B_ERR_INT_STATr, REG_PORT_ANY, 0), rv)

#define READ_ECC_SINGLE_BIT_ERRORSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ECC_SINGLE_BIT_ERRORSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ECC_SINGLE_BIT_ERRORSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ECC_SINGLE_BIT_ERRORSr, REG_PORT_ANY, 0), rv)

#define READ_ECN_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ECN_CONFIGr, port, 0), rvp)
#define WRITE_ECN_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ECN_CONFIGr, port, 0), rv)

#define READ_ECRCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ECRCr, port, 0), rvp)
#define WRITE_ECRCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ECRCr, port, 0), rv)

#define READ_ECRC_LIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ECRC_LIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_ECRC_LIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ECRC_LIMITr, REG_PORT_ANY, 0), rv)

#define READ_EDATABUF_RAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EDATABUF_RAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EDATABUF_RAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EDATABUF_RAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EDATABUF_RAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EDATABUF_RAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EDATABUF_RAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EDATABUF_RAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_DBG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_DBG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_DEBUG_DATA_VALIDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_DEBUG_DATA_VALIDr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_DEBUG_DATA_VALIDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_DEBUG_DATA_VALIDr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_DEBUG_SENDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_DEBUG_SENDr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_DEBUG_SENDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_DEBUG_SENDr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_S10_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_S10_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_S12_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_S12_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_S12_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_S12_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_S14_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_S14_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_S14_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_S14_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_S15_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_S15_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_S15_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_S15_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_CONTROL_3_THRU_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_CONTROL_3_THRU_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_CONTROL_3_THRU_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_CONTROL_3_THRU_0r, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_DEBUG_DATA_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_DATA_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_DEBUG_DATA_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_DATA_0r, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_DEBUG_DATA_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_DATA_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_DEBUG_DATA_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_DATA_1r, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_DEBUG_DATA_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_DATA_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_DEBUG_DATA_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_DATA_2r, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_DEBUG_DATA_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_DATA_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_DEBUG_DATA_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_DATA_3r, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_DEBUG_DATA_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_DATA_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_DEBUG_DATA_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_DATA_4r, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_DEBUG_DATA_5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_DATA_5r, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_DEBUG_DATA_5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_DATA_5r, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_DEBUG_GLOBAL_MASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_GLOBAL_MASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_DEBUG_GLOBAL_MASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_GLOBAL_MASKr, REG_PORT_ANY, 0), rv)

#define READ_EFP_CAM_DEBUG_SENDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_SENDr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_CAM_DEBUG_SENDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_CAM_DEBUG_SENDr, REG_PORT_ANY, 0), rv)

#define READ_EFP_METER_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_METER_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_METER_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_METER_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EFP_METER_CONTROL_2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_METER_CONTROL_2r, port, 0), rvp)
#define WRITE_EFP_METER_CONTROL_2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_METER_CONTROL_2r, port, 0), rv)

#define READ_EFP_RAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_RAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_RAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_RAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EFP_SLICE_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_SLICE_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_SLICE_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_SLICE_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EFP_SLICE_MAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EFP_SLICE_MAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_EFP_SLICE_MAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EFP_SLICE_MAPr, REG_PORT_ANY, 0), rv)

#define READ_EGRCELLLIMITCG0COSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRCELLLIMITCG0COSr, port, idx), rvp)
#define WRITE_EGRCELLLIMITCG0COSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRCELLLIMITCG0COSr, port, idx), rv)

#define READ_EGRCELLLIMITCG1COSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRCELLLIMITCG1COSr, port, idx), rvp)
#define WRITE_EGRCELLLIMITCG1COSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRCELLLIMITCG1COSr, port, idx), rv)

#define READ_EGRCELLLIMITCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRCELLLIMITCOSr, port, idx), rvp)
#define WRITE_EGRCELLLIMITCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRCELLLIMITCOSr, port, idx), rv)

#define READ_EGRCELLLIMIT_E2Er(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRCELLLIMIT_E2Er, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRCELLLIMIT_E2Er(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRCELLLIMIT_E2Er, REG_PORT_ANY, 0), rv)

#define READ_EGRDROPPKTCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRDROPPKTCOUNTr, port, 0), rvp)
#define WRITE_EGRDROPPKTCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRDROPPKTCOUNTr, port, 0), rv)

#define READ_EGRESSCELLREQUESTCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRESSCELLREQUESTCOUNTr, port, 0), rvp)
#define WRITE_EGRESSCELLREQUESTCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRESSCELLREQUESTCOUNTr, port, 0), rv)

#define READ_EGRFREEPTRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRFREEPTRr, port, 0), rvp)
#define WRITE_EGRFREEPTRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRFREEPTRr, port, 0), rv)

#define READ_EGRMETERINGBUCKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRMETERINGBUCKETr, port, 0), rvp)
#define WRITE_EGRMETERINGBUCKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRMETERINGBUCKETr, port, 0), rv)

#define READ_EGRMETERINGCONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRMETERINGCONFIGr, port, 0), rvp)
#define WRITE_EGRMETERINGCONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRMETERINGCONFIGr, port, 0), rv)

#define READ_EGRMETERINGCONFIG1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRMETERINGCONFIG1r, port, 0), rvp)
#define WRITE_EGRMETERINGCONFIG1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRMETERINGCONFIG1r, port, 0), rv)

#define READ_EGRMETERINGCONFIG_64r(unit, port, rvp) \
	soc_reg_read(unit, EGRMETERINGCONFIG_64r, soc_reg_addr(unit, EGRMETERINGCONFIG_64r, port, 0), rvp)
#define WRITE_EGRMETERINGCONFIG_64r(unit, port, rv) \
	soc_reg_write(unit, EGRMETERINGCONFIG_64r, soc_reg_addr(unit, EGRMETERINGCONFIG_64r, port, 0), rv)

#define READ_EGRPKTLIMITCNGCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRPKTLIMITCNGCOSr, port, idx), rvp)
#define WRITE_EGRPKTLIMITCNGCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRPKTLIMITCNGCOSr, port, idx), rv)

#define READ_EGRPKTLIMITCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRPKTLIMITCOSr, port, idx), rvp)
#define WRITE_EGRPKTLIMITCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRPKTLIMITCOSr, port, idx), rv)

#define READ_EGRPKTRESETCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRPKTRESETCOSr, port, idx), rvp)
#define WRITE_EGRPKTRESETCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRPKTRESETCOSr, port, idx), rv)

#define READ_EGRPOINTERCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRPOINTERCOSr, port, idx), rvp)
#define WRITE_EGRPOINTERCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRPOINTERCOSr, port, idx), rv)

#define READ_EGRSHAPEPARITYERRORPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRSHAPEPARITYERRORPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRSHAPEPARITYERRORPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRSHAPEPARITYERRORPTRr, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTRr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTRr, REG_PORT_ANY, idx), rvp)
#define WRITE_EGRTXPKTCTRr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTRr, REG_PORT_ANY, idx), rv)

#define READ_EGRTXPKTCTR0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTR0r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTR0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTR0r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTR1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTR1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTR1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTR1r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTR2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTR2r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTR2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTR2r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTR3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTR3r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTR3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTR3r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTR4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTR4r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTR4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTR4r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTR5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTR5r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTR5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTR5r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTR6r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTR6r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTR6r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTR6r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTR7r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTR7r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTR7r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTR7r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTRCONFIGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIGr, REG_PORT_ANY, idx), rvp)
#define WRITE_EGRTXPKTCTRCONFIGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIGr, REG_PORT_ANY, idx), rv)

#define READ_EGRTXPKTCTRCONFIG0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG0r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTRCONFIG0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG0r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTRCONFIG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTRCONFIG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG1r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTRCONFIG2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG2r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTRCONFIG2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG2r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTRCONFIG3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG3r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTRCONFIG3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG3r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTRCONFIG4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG4r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTRCONFIG4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG4r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTRCONFIG5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG5r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTRCONFIG5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG5r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTRCONFIG6r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG6r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTRCONFIG6r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG6r, REG_PORT_ANY, 0), rv)

#define READ_EGRTXPKTCTRCONFIG7r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG7r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGRTXPKTCTRCONFIG7r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGRTXPKTCTRCONFIG7r, REG_PORT_ANY, 0), rv)

#define READ_EGR_ACCU_8BEATSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_ACCU_8BEATSr, port, 0), rvp)
#define WRITE_EGR_ACCU_8BEATSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_ACCU_8BEATSr, port, 0), rv)

#define READ_EGR_BKP_DISr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_BKP_DISr, port, 0), rvp)
#define WRITE_EGR_BKP_DISr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_BKP_DISr, port, 0), rv)

#define READ_EGR_BUCKET_COUNT_READr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_BUCKET_COUNT_READr, port, 0), rvp)
#define WRITE_EGR_BUCKET_COUNT_READr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_BUCKET_COUNT_READr, port, 0), rv)

#define READ_EGR_BUFFER_PARITYr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_BUFFER_PARITYr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_BUFFER_PARITYr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_BUFFER_PARITYr, REG_PORT_ANY, 0), rv)

#define READ_EGR_BYPASS_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_BYPASS_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_BYPASS_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_BYPASS_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_EGR_CONFIG2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_CONFIG2r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_CONFIG2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_CONFIG2r, REG_PORT_ANY, 0), rv)

#define READ_EGR_CONFIG3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_CONFIG3r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_CONFIG3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_CONFIG3r, REG_PORT_ANY, 0), rv)

#define READ_EGR_CONFIG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_CONFIG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_CONFIG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_CONFIG_1r, REG_PORT_ANY, 0), rv)

#define READ_EGR_DBGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_DBGr, port, 0), rvp)
#define WRITE_EGR_DBGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_DBGr, port, 0), rv)

#define READ_EGR_DROP_VECTORr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_DROP_VECTORr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_DROP_VECTORr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_DROP_VECTORr, REG_PORT_ANY, 0), rv)

#define READ_EGR_DROP_VECTOR_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_DROP_VECTOR_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_DROP_VECTOR_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_DROP_VECTOR_Xr, REG_PORT_ANY, 0), rv)

#define READ_EGR_DROP_VECTOR_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_DROP_VECTOR_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_DROP_VECTOR_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_DROP_VECTOR_Yr, REG_PORT_ANY, 0), rv)

#define READ_EGR_DROP_VEC_DBGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_DROP_VEC_DBGr, port, 0), rvp)
#define WRITE_EGR_DROP_VEC_DBGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_DROP_VEC_DBGr, port, 0), rv)

#define READ_EGR_ECC_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_ECC_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_ECC_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_ECC_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_ECC_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_ECC_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_ECC_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_ECC_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_EM_MTP_INDEXr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_EM_MTP_INDEXr, REG_PORT_ANY, idx), rvp)
#define WRITE_EGR_EM_MTP_INDEXr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_EM_MTP_INDEXr, REG_PORT_ANY, idx), rv)

#define READ_EGR_ENABLEr(unit, port, rvp) \
	soc_reg_read(unit, EGR_ENABLEr, soc_reg_addr(unit, EGR_ENABLEr, port, 0), rvp)
#define WRITE_EGR_ENABLEr(unit, port, rv) \
	soc_reg_write(unit, EGR_ENABLEr, soc_reg_addr(unit, EGR_ENABLEr, port, 0), rv)

#define READ_EGR_EVENT_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_EVENT_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_EVENT_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_EVENT_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_EGR_FLEXIBLE_IPV6_EXT_HDRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_FLEXIBLE_IPV6_EXT_HDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_FLEXIBLE_IPV6_EXT_HDRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_FLEXIBLE_IPV6_EXT_HDRr, REG_PORT_ANY, 0), rv)

#define READ_EGR_FLOWCTL_BUCKET_COUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_FLOWCTL_BUCKET_COUNTr, port, 0), rvp)
#define WRITE_EGR_FLOWCTL_BUCKET_COUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_FLOWCTL_BUCKET_COUNTr, port, 0), rv)

#define READ_EGR_FLOWCTL_CFGr(unit, port, rvp) \
	soc_reg_read(unit, EGR_FLOWCTL_CFGr, soc_reg_addr(unit, EGR_FLOWCTL_CFGr, port, 0), rvp)
#define WRITE_EGR_FLOWCTL_CFGr(unit, port, rv) \
	soc_reg_write(unit, EGR_FLOWCTL_CFGr, soc_reg_addr(unit, EGR_FLOWCTL_CFGr, port, 0), rv)

#define READ_EGR_FLOWCTL_COUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_FLOWCTL_COUNTr, port, 0), rvp)
#define WRITE_EGR_FLOWCTL_COUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_FLOWCTL_COUNTr, port, 0), rv)

#define READ_EGR_FP_COUNTER_TABLE_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_FP_COUNTER_TABLE_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_FP_COUNTER_TABLE_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_FP_COUNTER_TABLE_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_EGR_FUSE_REGS_ADDRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_FUSE_REGS_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_FUSE_REGS_ADDRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_FUSE_REGS_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_EGR_FUSE_REGS_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_FUSE_REGS_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_FUSE_REGS_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_FUSE_REGS_DATAr, REG_PORT_ANY, 0), rv)

#define READ_EGR_GRE_VERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_GRE_VERr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_GRE_VERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_GRE_VERr, REG_PORT_ANY, 0), rv)

#define READ_EGR_HW_RESET_CONTROL_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_HW_RESET_CONTROL_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_HW_RESET_CONTROL_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_HW_RESET_CONTROL_0r, REG_PORT_ANY, 0), rv)

#define READ_EGR_HW_RESET_CONTROL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_HW_RESET_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_HW_RESET_CONTROL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_HW_RESET_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_EGR_IM_MTP_INDEXr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IM_MTP_INDEXr, REG_PORT_ANY, idx), rvp)
#define WRITE_EGR_IM_MTP_INDEXr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IM_MTP_INDEXr, REG_PORT_ANY, idx), rv)

#define READ_EGR_INITBUF_ECC_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_INITBUF_ECC_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_INITBUF_ECC_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_INITBUF_ECC_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_INITBUF_ECC_STATUS_DBEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_INITBUF_ECC_STATUS_DBEr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_INITBUF_ECC_STATUS_DBEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_INITBUF_ECC_STATUS_DBEr, REG_PORT_ANY, 0), rv)

#define READ_EGR_INITBUF_ECC_STATUS_SBEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_INITBUF_ECC_STATUS_SBEr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_INITBUF_ECC_STATUS_SBEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_INITBUF_ECC_STATUS_SBEr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_AGE_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_AGE_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_AGE_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_AGE_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_CURRENT_TIMEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_CURRENT_TIMEr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_CURRENT_TIMEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_CURRENT_TIMEr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_EXPORT_FIFO_COUNTERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_EXPORT_FIFO_COUNTERr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_EXPORT_FIFO_COUNTERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_EXPORT_FIFO_COUNTERr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_EXPORT_FIFO_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_EXPORT_FIFO_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_EXPORT_FIFO_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_EXPORT_FIFO_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_EXPORT_FIFO_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_EXPORT_FIFO_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_EXPORT_FIFO_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_EXPORT_FIFO_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_EXPORT_FIFO_READ_PTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_EXPORT_FIFO_READ_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_EXPORT_FIFO_READ_PTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_EXPORT_FIFO_READ_PTRr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_EXPORT_FIFO_WRITE_PTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_EXPORT_FIFO_WRITE_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_EXPORT_FIFO_WRITE_PTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_EXPORT_FIFO_WRITE_PTRr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_HASH_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_HASH_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_HASH_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_HASH_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_MAXIMUM_IDLE_AGE_SETr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_MAXIMUM_IDLE_AGE_SETr, REG_PORT_ANY, idx), rvp)
#define WRITE_EGR_IPFIX_MAXIMUM_IDLE_AGE_SETr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_MAXIMUM_IDLE_AGE_SETr, REG_PORT_ANY, idx), rv)

#define READ_EGR_IPFIX_MINIMUM_LIVE_TIME_SETr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_MINIMUM_LIVE_TIME_SETr, REG_PORT_ANY, idx), rvp)
#define WRITE_EGR_IPFIX_MINIMUM_LIVE_TIME_SETr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_MINIMUM_LIVE_TIME_SETr, REG_PORT_ANY, idx), rv)

#define READ_EGR_IPFIX_MISSED_BUCKET_FULL_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_MISSED_BUCKET_FULL_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_MISSED_BUCKET_FULL_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_MISSED_BUCKET_FULL_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_MISSED_EXPORT_FULL_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_MISSED_EXPORT_FULL_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_MISSED_EXPORT_FULL_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_MISSED_EXPORT_FULL_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_MISSED_PORT_LIMIT_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_MISSED_PORT_LIMIT_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_MISSED_PORT_LIMIT_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_MISSED_PORT_LIMIT_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_PORT_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_PORT_CONFIGr, port, 0), rvp)
#define WRITE_EGR_IPFIX_PORT_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_PORT_CONFIGr, port, 0), rv)

#define READ_EGR_IPFIX_PORT_LIMIT_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_PORT_LIMIT_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_PORT_LIMIT_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_PORT_LIMIT_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_PORT_RECORD_COUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_PORT_RECORD_COUNTr, port, 0), rvp)
#define WRITE_EGR_IPFIX_PORT_RECORD_COUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_PORT_RECORD_COUNTr, port, 0), rv)

#define READ_EGR_IPFIX_PORT_RECORD_LIMIT_SETr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_PORT_RECORD_LIMIT_SETr, REG_PORT_ANY, idx), rvp)
#define WRITE_EGR_IPFIX_PORT_RECORD_LIMIT_SETr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_PORT_RECORD_LIMIT_SETr, REG_PORT_ANY, idx), rv)

#define READ_EGR_IPFIX_PORT_SAMPLING_COUNTERr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_PORT_SAMPLING_COUNTERr, port, 0), rvp)
#define WRITE_EGR_IPFIX_PORT_SAMPLING_COUNTERr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_PORT_SAMPLING_COUNTERr, port, 0), rv)

#define READ_EGR_IPFIX_RAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_RAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_RAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_RAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_SAMPLING_LIMIT_SETr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_SAMPLING_LIMIT_SETr, REG_PORT_ANY, idx), rvp)
#define WRITE_EGR_IPFIX_SAMPLING_LIMIT_SETr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_SAMPLING_LIMIT_SETr, REG_PORT_ANY, idx), rv)

#define READ_EGR_IPFIX_SESSION_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_SESSION_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_SESSION_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_SESSION_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPFIX_SESSION_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPFIX_SESSION_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IPFIX_SESSION_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPFIX_SESSION_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IPMC_CFG0r(unit, port, rvp) \
	soc_reg_read(unit, EGR_IPMC_CFG0r, soc_reg_addr(unit, EGR_IPMC_CFG0r, port, 0), rvp)
#define WRITE_EGR_IPMC_CFG0r(unit, port, rv) \
	soc_reg_write(unit, EGR_IPMC_CFG0r, soc_reg_addr(unit, EGR_IPMC_CFG0r, port, 0), rv)

#define READ_EGR_IPMC_CFG1r(unit, port, rvp) \
	soc_reg_read(unit, EGR_IPMC_CFG1r, soc_reg_addr(unit, EGR_IPMC_CFG1r, port, 0), rvp)
#define WRITE_EGR_IPMC_CFG1r(unit, port, rv) \
	soc_reg_write(unit, EGR_IPMC_CFG1r, soc_reg_addr(unit, EGR_IPMC_CFG1r, port, 0), rv)

#define READ_EGR_IPMC_CFG2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IPMC_CFG2r, port, 0), rvp)
#define WRITE_EGR_IPMC_CFG2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IPMC_CFG2r, port, 0), rv)

#define READ_EGR_IP_TUNNEL_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IP_TUNNEL_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IP_TUNNEL_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IP_TUNNEL_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_IP_TUNNEL_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_IP_TUNNEL_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_IP_TUNNEL_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_IP_TUNNEL_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_L3_INTF_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_L3_INTF_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_L3_INTF_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_L3_INTF_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_L3_INTF_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_L3_INTF_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_L3_INTF_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_L3_INTF_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_L3_NEXT_HOP_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_L3_NEXT_HOP_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_L3_NEXT_HOP_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_L3_NEXT_HOP_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_L3_NEXT_HOP_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_L3_NEXT_HOP_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_L3_NEXT_HOP_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_L3_NEXT_HOP_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_MAP_MH_PRI0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MAP_MH_PRI0r, port, 0), rvp)
#define WRITE_EGR_MAP_MH_PRI0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MAP_MH_PRI0r, port, 0), rv)

#define READ_EGR_MAP_MH_PRI1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MAP_MH_PRI1r, port, 0), rvp)
#define WRITE_EGR_MAP_MH_PRI1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MAP_MH_PRI1r, port, 0), rv)

#define READ_EGR_MASK_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MASK_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_MASK_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MASK_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_MASK_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MASK_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_MASK_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MASK_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_MAXTIMEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MAXTIMEr, port, 0), rvp)
#define WRITE_EGR_MAXTIMEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MAXTIMEr, port, 0), rv)

#define READ_EGR_MC_CONTROL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MC_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_MC_CONTROL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MC_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_EGR_MC_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MC_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_MC_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MC_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_EGR_MIP_HDRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MIP_HDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_MIP_HDRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MIP_HDRr, REG_PORT_ANY, 0), rv)

#define READ_EGR_MMU_REQUESTSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MMU_REQUESTSr, port, 0), rvp)
#define WRITE_EGR_MMU_REQUESTSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MMU_REQUESTSr, port, 0), rv)

#define READ_EGR_MODMAP_CTRLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MODMAP_CTRLr, port, 0), rvp)
#define WRITE_EGR_MODMAP_CTRLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MODMAP_CTRLr, port, 0), rv)

#define READ_EGR_MPLS_VC_AND_SWAP_LABEL_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MPLS_VC_AND_SWAP_LABEL_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_MPLS_VC_AND_SWAP_LABEL_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MPLS_VC_AND_SWAP_LABEL_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_MPLS_VC_AND_SWAP_LABEL_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MPLS_VC_AND_SWAP_LABEL_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_MPLS_VC_AND_SWAP_LABEL_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MPLS_VC_AND_SWAP_LABEL_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_MTU_SIZEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_MTU_SIZEr, port, 0), rvp)
#define WRITE_EGR_MTU_SIZEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_MTU_SIZEr, port, 0), rv)

#define READ_EGR_NEW_MODID_PORTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_NEW_MODID_PORTr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_NEW_MODID_PORTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_NEW_MODID_PORTr, REG_PORT_ANY, 0), rv)

#define READ_EGR_NEXT_HOP_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_NEXT_HOP_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_NEXT_HOP_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_NEXT_HOP_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_NEXT_HOP_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_NEXT_HOP_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_NEXT_HOP_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_NEXT_HOP_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_OUTER_TPIDr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_OUTER_TPIDr, REG_PORT_ANY, idx), rvp)
#define WRITE_EGR_OUTER_TPIDr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_OUTER_TPIDr, REG_PORT_ANY, idx), rv)

#define READ_EGR_OUTER_TPID_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_OUTER_TPID_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_OUTER_TPID_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_OUTER_TPID_0r, REG_PORT_ANY, 0), rv)

#define READ_EGR_OUTER_TPID_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_OUTER_TPID_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_OUTER_TPID_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_OUTER_TPID_1r, REG_PORT_ANY, 0), rv)

#define READ_EGR_OUTER_TPID_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_OUTER_TPID_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_OUTER_TPID_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_OUTER_TPID_2r, REG_PORT_ANY, 0), rv)

#define READ_EGR_OUTER_TPID_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_OUTER_TPID_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_OUTER_TPID_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_OUTER_TPID_3r, REG_PORT_ANY, 0), rv)

#define READ_EGR_PERQ_XMT_COUNTERSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_PERQ_XMT_COUNTERSr, port, idx), rvp)
#define WRITE_EGR_PERQ_XMT_COUNTERSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_PERQ_XMT_COUNTERSr, port, idx), rv)

#define READ_EGR_PKT_MODS_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_PKT_MODS_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_PKT_MODS_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_PKT_MODS_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_PORTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_PORTr, port, 0), rvp)
#define WRITE_EGR_PORTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_PORTr, port, 0), rv)

#define READ_EGR_PORT_L3UC_MODSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_PORT_L3UC_MODSr, port, 0), rvp)
#define WRITE_EGR_PORT_L3UC_MODSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_PORT_L3UC_MODSr, port, 0), rv)

#define READ_EGR_PORT_L3UC_MODS_TABLEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_PORT_L3UC_MODS_TABLEr, port, 0), rvp)
#define WRITE_EGR_PORT_L3UC_MODS_TABLEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_PORT_L3UC_MODS_TABLEr, port, 0), rv)

#define READ_EGR_PORT_MTUr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_PORT_MTUr, port, 0), rvp)
#define WRITE_EGR_PORT_MTUr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_PORT_MTUr, port, 0), rv)

#define READ_EGR_PORT_REQUESTSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_PORT_REQUESTSr, port, 0), rvp)
#define WRITE_EGR_PORT_REQUESTSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_PORT_REQUESTSr, port, 0), rv)

#define READ_EGR_PVLAN_EPORT_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_PVLAN_EPORT_CONTROLr, port, 0), rvp)
#define WRITE_EGR_PVLAN_EPORT_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_PVLAN_EPORT_CONTROLr, port, 0), rv)

#define READ_EGR_PW_INIT_COUNTERS_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_PW_INIT_COUNTERS_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_PW_INIT_COUNTERS_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_PW_INIT_COUNTERS_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_PW_INIT_COUNTERS_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_PW_INIT_COUNTERS_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_PW_INIT_COUNTERS_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_PW_INIT_COUNTERS_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_Q_BEGINr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_Q_BEGINr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_Q_BEGINr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_Q_BEGINr, REG_PORT_ANY, 0), rv)

#define READ_EGR_Q_ENDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_Q_ENDr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_Q_ENDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_Q_ENDr, REG_PORT_ANY, 0), rv)

#define READ_EGR_RSPANr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_RSPANr, port, 0), rvp)
#define WRITE_EGR_RSPANr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_RSPANr, port, 0), rv)

#define READ_EGR_RSPAN_VLAN_TAGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_RSPAN_VLAN_TAGr, port, 0), rvp)
#define WRITE_EGR_RSPAN_VLAN_TAGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_RSPAN_VLAN_TAGr, port, 0), rv)

#define READ_EGR_SBS_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_SBS_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_SBS_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_SBS_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_SF_SRC_MODID_CHECKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_SF_SRC_MODID_CHECKr, port, 0), rvp)
#define WRITE_EGR_SF_SRC_MODID_CHECKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_SF_SRC_MODID_CHECKr, port, 0), rv)

#define READ_EGR_SHAPING_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_SHAPING_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_SHAPING_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_SHAPING_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_SPARE_REG0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_SPARE_REG0r, port, 0), rvp)
#define WRITE_EGR_SPARE_REG0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_SPARE_REG0r, port, 0), rv)

#define READ_EGR_SRC_PORTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_SRC_PORTr, port, 0), rvp)
#define WRITE_EGR_SRC_PORTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_SRC_PORTr, port, 0), rv)

#define READ_EGR_SYS_RSVD_VIDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_SYS_RSVD_VIDr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_SYS_RSVD_VIDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_SYS_RSVD_VIDr, REG_PORT_ANY, 0), rv)

#define READ_EGR_TUNNEL_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_TUNNEL_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_TUNNEL_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_TUNNEL_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_TUNNEL_ID_MASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_TUNNEL_ID_MASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_TUNNEL_ID_MASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_TUNNEL_ID_MASKr, REG_PORT_ANY, 0), rv)

#define READ_EGR_TUNNEL_PIMDR1_CFG0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR1_CFG0r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_TUNNEL_PIMDR1_CFG0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR1_CFG0r, REG_PORT_ANY, 0), rv)

#define READ_EGR_TUNNEL_PIMDR1_CFG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR1_CFG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_TUNNEL_PIMDR1_CFG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR1_CFG1r, REG_PORT_ANY, 0), rv)

#define READ_EGR_TUNNEL_PIMDR2_CFG0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR2_CFG0r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_TUNNEL_PIMDR2_CFG0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR2_CFG0r, REG_PORT_ANY, 0), rv)

#define READ_EGR_TUNNEL_PIMDR2_CFG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR2_CFG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_TUNNEL_PIMDR2_CFG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_TUNNEL_PIMDR2_CFG1r, REG_PORT_ANY, 0), rv)

#define READ_EGR_UDP_TUNNELr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_UDP_TUNNELr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_UDP_TUNNELr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_UDP_TUNNELr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VLAN_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VLAN_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VLAN_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VLAN_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VLAN_CONTROL_1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VLAN_CONTROL_1r, port, 0), rvp)
#define WRITE_EGR_VLAN_CONTROL_1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VLAN_CONTROL_1r, port, 0), rv)

#define READ_EGR_VLAN_CONTROL_2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VLAN_CONTROL_2r, port, 0), rvp)
#define WRITE_EGR_VLAN_CONTROL_2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VLAN_CONTROL_2r, port, 0), rv)

#define READ_EGR_VLAN_CONTROL_3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VLAN_CONTROL_3r, port, 0), rvp)
#define WRITE_EGR_VLAN_CONTROL_3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VLAN_CONTROL_3r, port, 0), rv)

#define READ_EGR_VLAN_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VLAN_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VLAN_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VLAN_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VLAN_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VLAN_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VLAN_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VLAN_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VLAN_STG_ADDR_MASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VLAN_STG_ADDR_MASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VLAN_STG_ADDR_MASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VLAN_STG_ADDR_MASKr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VLAN_TABLE_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VLAN_TABLE_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VLAN_TABLE_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VLAN_TABLE_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VLAN_TABLE_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VLAN_TABLE_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VLAN_TABLE_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VLAN_TABLE_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VLAN_XLATE_HASH_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VLAN_XLATE_HASH_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VLAN_XLATE_HASH_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VLAN_XLATE_HASH_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VLAN_XLATE_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VLAN_XLATE_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VLAN_XLATE_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VLAN_XLATE_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VLAN_XLATE_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VLAN_XLATE_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VLAN_XLATE_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VLAN_XLATE_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VXLT_CAM_BIST_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VXLT_CAM_BIST_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VXLT_CAM_BIST_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VXLT_CAM_BIST_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VXLT_CAM_BIST_DBG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VXLT_CAM_BIST_DBG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VXLT_CAM_BIST_S10_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VXLT_CAM_BIST_S10_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VXLT_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VXLT_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VXLT_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VXLT_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VXLT_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VXLT_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VXLT_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VXLT_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VXLT_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VXLT_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VXLT_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VXLT_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VXLT_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EGR_VXLT_CAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EGR_VXLT_CAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EGR_VXLT_CAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EGR_VXLT_CAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EHCPM_RAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EHCPM_RAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EHCPM_RAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EHCPM_RAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_EL3_RAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EL3_RAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EL3_RAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EL3_RAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_EL3_RAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EL3_RAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EL3_RAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EL3_RAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_EL3_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EL3_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EL3_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EL3_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_EMIRROR_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EMIRROR_CONTROLr, port, 0), rvp)
#define WRITE_EMIRROR_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EMIRROR_CONTROLr, port, 0), rv)

#define READ_EMIRROR_CONTROL1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EMIRROR_CONTROL1r, port, 0), rvp)
#define WRITE_EMIRROR_CONTROL1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EMIRROR_CONTROL1r, port, 0), rv)

#define READ_EMIRROR_CONTROL1_64r(unit, port, rvp) \
	soc_reg_read(unit, EMIRROR_CONTROL1_64r, soc_reg_addr(unit, EMIRROR_CONTROL1_64r, port, 0), rvp)
#define WRITE_EMIRROR_CONTROL1_64r(unit, port, rv) \
	soc_reg_write(unit, EMIRROR_CONTROL1_64r, soc_reg_addr(unit, EMIRROR_CONTROL1_64r, port, 0), rv)

#define READ_EMIRROR_CONTROL_64r(unit, port, rvp) \
	soc_reg_read(unit, EMIRROR_CONTROL_64r, soc_reg_addr(unit, EMIRROR_CONTROL_64r, port, 0), rvp)
#define WRITE_EMIRROR_CONTROL_64r(unit, port, rv) \
	soc_reg_write(unit, EMIRROR_CONTROL_64r, soc_reg_addr(unit, EMIRROR_CONTROL_64r, port, 0), rv)

#define READ_EMIRROR_CONTROL_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EMIRROR_CONTROL_HIr, port, 0), rvp)
#define WRITE_EMIRROR_CONTROL_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EMIRROR_CONTROL_HIr, port, 0), rv)

#define READ_EMMU_FUSE_DEBUG0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EMMU_FUSE_DEBUG0r, REG_PORT_ANY, 0), rvp)
#define WRITE_EMMU_FUSE_DEBUG0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EMMU_FUSE_DEBUG0r, REG_PORT_ANY, 0), rv)

#define READ_EMMU_FUSE_DEBUG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EMMU_FUSE_DEBUG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EMMU_FUSE_DEBUG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EMMU_FUSE_DEBUG1r, REG_PORT_ANY, 0), rv)

#define READ_EMMU_FUSE_DEBUG2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EMMU_FUSE_DEBUG2r, REG_PORT_ANY, 0), rvp)
#define WRITE_EMMU_FUSE_DEBUG2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EMMU_FUSE_DEBUG2r, REG_PORT_ANY, 0), rv)

#define READ_EM_MTP_INDEXr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EM_MTP_INDEXr, REG_PORT_ANY, idx), rvp)
#define WRITE_EM_MTP_INDEXr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EM_MTP_INDEXr, REG_PORT_ANY, idx), rv)

#define READ_ENQ_IPMCGRP_TBL_PARITYERRORPTRr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ENQ_IPMCGRP_TBL_PARITYERRORPTRr, REG_PORT_ANY, idx), rvp)
#define WRITE_ENQ_IPMCGRP_TBL_PARITYERRORPTRr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ENQ_IPMCGRP_TBL_PARITYERRORPTRr, REG_PORT_ANY, idx), rv)

#define READ_ENQ_IPMCGRP_TBL_PARITYERROR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ENQ_IPMCGRP_TBL_PARITYERROR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ENQ_IPMCGRP_TBL_PARITYERROR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ENQ_IPMCGRP_TBL_PARITYERROR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EN_IFILTERr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EN_IFILTERr, port, 0), rvp)
#define WRITE_EN_IFILTERr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EN_IFILTERr, port, 0), rv)

#define READ_EPC_BIST1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_BIST1r, port, 0), rvp)
#define WRITE_EPC_BIST1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_BIST1r, port, 0), rv)

#define READ_EPC_BIST2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_BIST2r, port, 0), rvp)
#define WRITE_EPC_BIST2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_BIST2r, port, 0), rv)

#define READ_EPC_BPDU1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_BPDU1r, port, 0), rvp)
#define WRITE_EPC_BPDU1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_BPDU1r, port, 0), rv)

#define READ_EPC_BPDU2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_BPDU2r, port, 0), rvp)
#define WRITE_EPC_BPDU2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_BPDU2r, port, 0), rv)

#define READ_EPC_BPDU4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_BPDU4r, port, 0), rvp)
#define WRITE_EPC_BPDU4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_BPDU4r, port, 0), rv)

#define READ_EPC_BPDU5r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_BPDU5r, port, 0), rvp)
#define WRITE_EPC_BPDU5r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_BPDU5r, port, 0), rv)

#define READ_EPC_BPDU6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_BPDU6r, port, 0), rvp)
#define WRITE_EPC_BPDU6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_BPDU6r, port, 0), rv)

#define READ_EPC_BPDU7r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_BPDU7r, port, 0), rvp)
#define WRITE_EPC_BPDU7r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_BPDU7r, port, 0), rv)

#define READ_EPC_BPDU8r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_BPDU8r, port, 0), rvp)
#define WRITE_EPC_BPDU8r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_BPDU8r, port, 0), rv)

#define READ_EPC_BPDU9r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_BPDU9r, port, 0), rvp)
#define WRITE_EPC_BPDU9r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_BPDU9r, port, 0), rv)

#define READ_EPC_BPDU10r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_BPDU10r, port, 0), rvp)
#define WRITE_EPC_BPDU10r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_BPDU10r, port, 0), rv)

#define READ_EPC_EGR_DBGr(unit, port, rvp) \
	soc_reg_read(unit, EPC_EGR_DBGr, soc_reg_addr(unit, EPC_EGR_DBGr, port, 0), rvp)
#define WRITE_EPC_EGR_DBGr(unit, port, rv) \
	soc_reg_write(unit, EPC_EGR_DBGr, soc_reg_addr(unit, EPC_EGR_DBGr, port, 0), rv)

#define READ_EPC_EGR_PKT_DROP_CTLr(unit, port, rvp) \
	soc_reg_read(unit, EPC_EGR_PKT_DROP_CTLr, soc_reg_addr(unit, EPC_EGR_PKT_DROP_CTLr, port, 0), rvp)
#define WRITE_EPC_EGR_PKT_DROP_CTLr(unit, port, rv) \
	soc_reg_write(unit, EPC_EGR_PKT_DROP_CTLr, soc_reg_addr(unit, EPC_EGR_PKT_DROP_CTLr, port, 0), rv)

#define READ_EPC_EGR_SNGL_OUTr(unit, port, rvp) \
	soc_reg_read(unit, EPC_EGR_SNGL_OUTr, soc_reg_addr(unit, EPC_EGR_SNGL_OUTr, port, 0), rvp)
#define WRITE_EPC_EGR_SNGL_OUTr(unit, port, rv) \
	soc_reg_write(unit, EPC_EGR_SNGL_OUTr, soc_reg_addr(unit, EPC_EGR_SNGL_OUTr, port, 0), rv)

#define READ_EPC_EGR_SNGL_PKTr(unit, port, rvp) \
	soc_reg_read(unit, EPC_EGR_SNGL_PKTr, soc_reg_addr(unit, EPC_EGR_SNGL_PKTr, port, 0), rvp)
#define WRITE_EPC_EGR_SNGL_PKTr(unit, port, rv) \
	soc_reg_write(unit, EPC_EGR_SNGL_PKTr, soc_reg_addr(unit, EPC_EGR_SNGL_PKTr, port, 0), rv)

#define READ_EPC_FFP_CONFIGr(unit, port, rvp) \
	soc_reg_read(unit, EPC_FFP_CONFIGr, soc_reg_addr(unit, EPC_FFP_CONFIGr, port, 0), rvp)
#define WRITE_EPC_FFP_CONFIGr(unit, port, rv) \
	soc_reg_write(unit, EPC_FFP_CONFIGr, soc_reg_addr(unit, EPC_FFP_CONFIGr, port, 0), rv)

#define READ_EPC_HOLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_HOLr, port, 0), rvp)
#define WRITE_EPC_HOLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_HOLr, port, 0), rv)

#define READ_EPC_INGRESS_DEBUGr(unit, port, rvp) \
	soc_reg_read(unit, EPC_INGRESS_DEBUGr, soc_reg_addr(unit, EPC_INGRESS_DEBUGr, port, 0), rvp)
#define WRITE_EPC_INGRESS_DEBUGr(unit, port, rv) \
	soc_reg_write(unit, EPC_INGRESS_DEBUGr, soc_reg_addr(unit, EPC_INGRESS_DEBUGr, port, 0), rv)

#define READ_EPC_LINKr(unit, port, rvp) \
	soc_reg_read(unit, EPC_LINKr, soc_reg_addr(unit, EPC_LINKr, port, 0), rvp)
#define WRITE_EPC_LINKr(unit, port, rv) \
	soc_reg_write(unit, EPC_LINKr, soc_reg_addr(unit, EPC_LINKr, port, 0), rv)

#define READ_EPC_LINK_BMAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_LINK_BMAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_EPC_LINK_BMAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_LINK_BMAPr, REG_PORT_ANY, 0), rv)

#define READ_EPC_LINK_BMAP_64r(unit, rvp) \
	soc_reg_read(unit, EPC_LINK_BMAP_64r, soc_reg_addr(unit, EPC_LINK_BMAP_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_EPC_LINK_BMAP_64r(unit, rv) \
	soc_reg_write(unit, EPC_LINK_BMAP_64r, soc_reg_addr(unit, EPC_LINK_BMAP_64r, REG_PORT_ANY, 0), rv)

#define READ_EPC_LINK_BMAP_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_LINK_BMAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_EPC_LINK_BMAP_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_LINK_BMAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_EPC_PFM0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_PFM0r, port, 0), rvp)
#define WRITE_EPC_PFM0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_PFM0r, port, 0), rv)

#define READ_EPC_PFM1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_PFM1r, port, 0), rvp)
#define WRITE_EPC_PFM1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_PFM1r, port, 0), rv)

#define READ_EPC_RATE_N_IPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_RATE_N_IPr, port, 0), rvp)
#define WRITE_EPC_RATE_N_IPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_RATE_N_IPr, port, 0), rv)

#define READ_EPC_STAD1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EPC_STAD1r, port, 0), rvp)
#define WRITE_EPC_STAD1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EPC_STAD1r, port, 0), rv)

#define READ_EPC_VLAN_FWD_STATEr(unit, port, rvp) \
	soc_reg_read(unit, EPC_VLAN_FWD_STATEr, soc_reg_addr(unit, EPC_VLAN_FWD_STATEr, port, 0), rvp)
#define WRITE_EPC_VLAN_FWD_STATEr(unit, port, rv) \
	soc_reg_write(unit, EPC_VLAN_FWD_STATEr, soc_reg_addr(unit, EPC_VLAN_FWD_STATEr, port, 0), rv)

#define READ_EP_BISRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EP_BISRr, REG_PORT_ANY, 0), rvp)
#define WRITE_EP_BISRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EP_BISRr, REG_PORT_ANY, 0), rv)

#define READ_EP_INTR_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EP_INTR_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_EP_INTR_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EP_INTR_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_EP_INTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EP_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EP_INTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EP_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_EP_PARITY_INTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EP_PARITY_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_EP_PARITY_INTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EP_PARITY_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADFPCNTR_DED_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADFPCNTR_DED_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADFPCNTR_DED_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADFPCNTR_DED_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADFPCNTR_SEC_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADFPCNTR_SEC_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADFPCNTR_SEC_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADFPCNTR_SEC_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADL2DST_DED_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADL2DST_DED_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADL2DST_DED_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADL2DST_DED_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADL2DST_SEC_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADL2DST_SEC_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADL2DST_SEC_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADL2DST_SEC_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADL2SRC_DED_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADL2SRC_DED_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADL2SRC_DED_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADL2SRC_DED_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADL2SRC_SEC_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADL2SRC_SEC_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADL2SRC_SEC_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADL2SRC_SEC_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADL3DST_DED_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADL3DST_DED_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADL3DST_DED_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADL3DST_DED_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADL3DST_SEC_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADL3DST_SEC_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADL3DST_SEC_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADL3DST_SEC_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADL3SRC_DED_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADL3SRC_DED_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADL3SRC_DED_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADL3SRC_DED_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADL3SRC_SEC_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADL3SRC_SEC_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADL3SRC_SEC_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADL3SRC_SEC_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADREQ0FIFO_RS_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADREQ0FIFO_RS_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADREQ0FIFO_RS_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADREQ0FIFO_RS_CTLr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADREQ0FIFO_RS_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADREQ0FIFO_RS_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADREQ0FIFO_RS_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADREQ0FIFO_RS_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADREQ1FIFO_RS_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADREQ1FIFO_RS_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADREQ1FIFO_RS_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADREQ1FIFO_RS_CTLr, REG_PORT_ANY, 0), rv)

#define READ_ES01_ADREQ1FIFO_RS_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_ADREQ1FIFO_RS_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_ADREQ1FIFO_RS_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_ADREQ1FIFO_RS_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ES01_BYT_CNT_WRAP_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_BYT_CNT_WRAP_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_BYT_CNT_WRAP_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_BYT_CNT_WRAP_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ES01_INTR_CLEARr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_INTR_CLEARr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_INTR_CLEARr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_INTR_CLEARr, REG_PORT_ANY, 0), rv)

#define READ_ES01_INTR_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_INTR_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_INTR_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_INTR_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_ES01_INTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_INTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ES01_MISC_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_MISC_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_MISC_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_MISC_CTLr, REG_PORT_ANY, 0), rv)

#define READ_ES01_MISC_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_MISC_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_MISC_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_MISC_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ES01_PKT_CNT_WRAP_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES01_PKT_CNT_WRAP_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES01_PKT_CNT_WRAP_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES01_PKT_CNT_WRAP_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ES0_DDR36_CONFIG_REG1_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DDR36_CONFIG_REG1_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DDR36_CONFIG_REG1_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DDR36_CONFIG_REG1_ISr, REG_PORT_ANY, 0), rv)

#define READ_ES0_DDR36_CONFIG_REG2_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DDR36_CONFIG_REG2_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DDR36_CONFIG_REG2_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DDR36_CONFIG_REG2_ISr, REG_PORT_ANY, 0), rv)

#define READ_ES0_DDR36_CONFIG_REG3_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DDR36_CONFIG_REG3_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DDR36_CONFIG_REG3_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DDR36_CONFIG_REG3_ISr, REG_PORT_ANY, 0), rv)

#define READ_ES0_DDR36_STATUS_REG1_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DDR36_STATUS_REG1_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DDR36_STATUS_REG1_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DDR36_STATUS_REG1_ISr, REG_PORT_ANY, 0), rv)

#define READ_ES0_DDR36_STATUS_REG2_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DDR36_STATUS_REG2_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DDR36_STATUS_REG2_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DDR36_STATUS_REG2_ISr, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_ATE_STS0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_ATE_STS0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_ATE_STS0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_ATE_STS0r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_ATE_STS1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_ATE_STS1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_ATE_STS1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_ATE_STS1r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_ATE_STS2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_ATE_STS2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_ATE_STS2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_ATE_STS2r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_ATE_STS3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_ATE_STS3r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_ATE_STS3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_ATE_STS3r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_ATE_STS4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_ATE_STS4r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_ATE_STS4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_ATE_STS4r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_ATE_TMODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_ATE_TMODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_ATE_TMODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_ATE_TMODEr, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_ADR0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_ADR0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_ADR0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_ADR0r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_ADR1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_ADR1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_ADR1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_ADR1r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_D0F_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_D0F_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_D0F_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_D0F_0r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_D0F_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_D0F_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_D0F_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_D0F_1r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_D0R_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_D0R_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_D0R_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_D0R_0r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_D0R_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_D0R_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_D0R_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_D0R_1r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_D1F_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_D1F_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_D1F_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_D1F_0r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_D1F_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_D1F_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_D1F_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_D1F_1r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_D1R_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_D1R_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_D1R_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_D1R_0r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_D1R_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_D1R_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_D1R_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_D1R_1r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_STS_DONEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_STS_DONEr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_STS_DONEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_STS_DONEr, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_STS_ERR_ADRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_STS_ERR_ADRr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_STS_ERR_ADRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_STS_ERR_ADRr, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_STS_ERR_DF_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_STS_ERR_DF_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_STS_ERR_DF_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_STS_ERR_DF_0r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_STS_ERR_DF_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_STS_ERR_DF_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_STS_ERR_DF_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_STS_ERR_DF_1r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_STS_ERR_DR_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_STS_ERR_DR_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_STS_ERR_DR_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_STS_ERR_DR_0r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_STS_ERR_DR_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_STS_ERR_DR_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_STS_ERR_DR_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_STS_ERR_DR_1r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_TMODE0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_TMODE0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_TMODE0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_TMODE0r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_LTE_TMODE1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_LTE_TMODE1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_LTE_TMODE1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_LTE_TMODE1r, REG_PORT_ANY, 0), rv)

#define READ_ES0_DTU_MODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_DTU_MODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_DTU_MODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_DTU_MODEr, REG_PORT_ANY, 0), rv)

#define READ_ES0_MCU_ENr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_MCU_ENr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_MCU_ENr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_MCU_ENr, REG_PORT_ANY, 0), rv)

#define READ_ES0_MCU_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_MCU_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_MCU_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_MCU_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ES0_SRAM_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES0_SRAM_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES0_SRAM_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES0_SRAM_CTLr, REG_PORT_ANY, 0), rv)

#define READ_ES1_DDR36_CONFIG_REG1_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DDR36_CONFIG_REG1_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DDR36_CONFIG_REG1_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DDR36_CONFIG_REG1_ISr, REG_PORT_ANY, 0), rv)

#define READ_ES1_DDR36_CONFIG_REG2_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DDR36_CONFIG_REG2_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DDR36_CONFIG_REG2_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DDR36_CONFIG_REG2_ISr, REG_PORT_ANY, 0), rv)

#define READ_ES1_DDR36_CONFIG_REG3_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DDR36_CONFIG_REG3_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DDR36_CONFIG_REG3_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DDR36_CONFIG_REG3_ISr, REG_PORT_ANY, 0), rv)

#define READ_ES1_DDR36_STATUS_REG1_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DDR36_STATUS_REG1_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DDR36_STATUS_REG1_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DDR36_STATUS_REG1_ISr, REG_PORT_ANY, 0), rv)

#define READ_ES1_DDR36_STATUS_REG2_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DDR36_STATUS_REG2_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DDR36_STATUS_REG2_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DDR36_STATUS_REG2_ISr, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_ATE_STS0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_ATE_STS0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_ATE_STS0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_ATE_STS0r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_ATE_STS1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_ATE_STS1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_ATE_STS1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_ATE_STS1r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_ATE_STS2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_ATE_STS2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_ATE_STS2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_ATE_STS2r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_ATE_STS3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_ATE_STS3r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_ATE_STS3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_ATE_STS3r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_ATE_STS4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_ATE_STS4r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_ATE_STS4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_ATE_STS4r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_ATE_TMODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_ATE_TMODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_ATE_TMODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_ATE_TMODEr, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_ADR0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_ADR0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_ADR0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_ADR0r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_ADR1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_ADR1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_ADR1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_ADR1r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_D0F_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_D0F_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_D0F_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_D0F_0r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_D0F_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_D0F_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_D0F_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_D0F_1r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_D0R_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_D0R_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_D0R_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_D0R_0r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_D0R_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_D0R_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_D0R_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_D0R_1r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_D1F_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_D1F_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_D1F_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_D1F_0r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_D1F_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_D1F_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_D1F_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_D1F_1r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_D1R_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_D1R_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_D1R_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_D1R_0r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_D1R_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_D1R_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_D1R_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_D1R_1r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_STS_DONEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_STS_DONEr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_STS_DONEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_STS_DONEr, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_STS_ERR_ADRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_STS_ERR_ADRr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_STS_ERR_ADRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_STS_ERR_ADRr, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_STS_ERR_DF_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_STS_ERR_DF_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_STS_ERR_DF_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_STS_ERR_DF_0r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_STS_ERR_DF_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_STS_ERR_DF_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_STS_ERR_DF_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_STS_ERR_DF_1r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_STS_ERR_DR_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_STS_ERR_DR_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_STS_ERR_DR_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_STS_ERR_DR_0r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_STS_ERR_DR_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_STS_ERR_DR_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_STS_ERR_DR_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_STS_ERR_DR_1r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_TMODE0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_TMODE0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_TMODE0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_TMODE0r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_LTE_TMODE1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_LTE_TMODE1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_LTE_TMODE1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_LTE_TMODE1r, REG_PORT_ANY, 0), rv)

#define READ_ES1_DTU_MODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_DTU_MODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_DTU_MODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_DTU_MODEr, REG_PORT_ANY, 0), rv)

#define READ_ES1_MCU_ENr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_MCU_ENr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_MCU_ENr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_MCU_ENr, REG_PORT_ANY, 0), rv)

#define READ_ES1_MCU_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_MCU_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_MCU_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_MCU_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ES1_SRAM_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES1_SRAM_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES1_SRAM_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES1_SRAM_CTLr, REG_PORT_ANY, 0), rv)

#define READ_ESA0r(unit, port, rvp) \
	soc_reg_read(unit, ESA0r, soc_reg_addr(unit, ESA0r, port, 0), rvp)
#define WRITE_ESA0r(unit, port, rv) \
	soc_reg_write(unit, ESA0r, soc_reg_addr(unit, ESA0r, port, 0), rv)

#define READ_ESA1r(unit, port, rvp) \
	soc_reg_read(unit, ESA1r, soc_reg_addr(unit, ESA1r, port, 0), rvp)
#define WRITE_ESA1r(unit, port, rv) \
	soc_reg_write(unit, ESA1r, soc_reg_addr(unit, ESA1r, port, 0), rv)

#define READ_ESA2r(unit, port, rvp) \
	soc_reg_read(unit, ESA2r, soc_reg_addr(unit, ESA2r, port, 0), rvp)
#define WRITE_ESA2r(unit, port, rv) \
	soc_reg_write(unit, ESA2r, soc_reg_addr(unit, ESA2r, port, 0), rv)

#define READ_ESCONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESCONFIGr, port, 0), rvp)
#define WRITE_ESCONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESCONFIGr, port, 0), rv)

#define READ_ESM_AGE_CNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESM_AGE_CNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_ESM_AGE_CNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESM_AGE_CNTr, REG_PORT_ANY, 0), rv)

#define READ_ESM_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESM_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ESM_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESM_CTLr, REG_PORT_ANY, 0), rv)

#define READ_ESM_ERR_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESM_ERR_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ESM_ERR_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESM_ERR_CTLr, REG_PORT_ANY, 0), rv)

#define READ_ESM_KEYGEN_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESM_KEYGEN_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ESM_KEYGEN_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESM_KEYGEN_CTLr, REG_PORT_ANY, 0), rv)

#define READ_ESM_L2_AGE_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESM_L2_AGE_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ESM_L2_AGE_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESM_L2_AGE_CTLr, REG_PORT_ANY, 0), rv)

#define READ_ESM_L2_AGE_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESM_L2_AGE_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ESM_L2_AGE_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESM_L2_AGE_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ESM_MISC_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESM_MISC_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ESM_MISC_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESM_MISC_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ESM_MODE_PER_PORTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESM_MODE_PER_PORTr, port, 0), rvp)
#define WRITE_ESM_MODE_PER_PORTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESM_MODE_PER_PORTr, port, 0), rv)

#define READ_ESM_PER_PORT_AGE_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESM_PER_PORT_AGE_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ESM_PER_PORT_AGE_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESM_PER_PORT_AGE_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_ESM_PER_PORT_REPL_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESM_PER_PORT_REPL_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ESM_PER_PORT_REPL_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESM_PER_PORT_REPL_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_ESM_PPA_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESM_PPA_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ESM_PPA_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESM_PPA_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ESTDMCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ESTDMCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_ESTDMCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ESTDMCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_ES_BYPASSMMUr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES_BYPASSMMUr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES_BYPASSMMUr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES_BYPASSMMUr, REG_PORT_ANY, 0), rv)

#define READ_ES_CPU_SCHEDULERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ES_CPU_SCHEDULERr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES_CPU_SCHEDULERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ES_CPU_SCHEDULERr, REG_PORT_ANY, 0), rv)

#define READ_ES_QUEUE_TO_PRIOr(unit, rvp) \
	soc_reg_read(unit, ES_QUEUE_TO_PRIOr, soc_reg_addr(unit, ES_QUEUE_TO_PRIOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ES_QUEUE_TO_PRIOr(unit, rv) \
	soc_reg_write(unit, ES_QUEUE_TO_PRIOr, soc_reg_addr(unit, ES_QUEUE_TO_PRIOr, REG_PORT_ANY, 0), rv)

#define READ_ETC_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETC_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETC_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETC_CTLr, REG_PORT_ANY, 0), rv)

#define READ_ETU_ATE_CONFIG_REG2_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_ATE_CONFIG_REG2_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_ATE_CONFIG_REG2_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_ATE_CONFIG_REG2_ISr, REG_PORT_ANY, 0), rv)

#define READ_ETU_BKGND_PROC_ERR_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_BKGND_PROC_ERR_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_BKGND_PROC_ERR_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_BKGND_PROC_ERR_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ETU_BKGND_PROC_SEC_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_BKGND_PROC_SEC_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_BKGND_PROC_SEC_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_BKGND_PROC_SEC_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ETU_DDR72_CONFIG_REG1_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_DDR72_CONFIG_REG1_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_DDR72_CONFIG_REG1_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_DDR72_CONFIG_REG1_ISr, REG_PORT_ANY, 0), rv)

#define READ_ETU_DDR72_CONFIG_REG2_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_DDR72_CONFIG_REG2_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_DDR72_CONFIG_REG2_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_DDR72_CONFIG_REG2_ISr, REG_PORT_ANY, 0), rv)

#define READ_ETU_DDR72_CONFIG_REG3_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_DDR72_CONFIG_REG3_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_DDR72_CONFIG_REG3_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_DDR72_CONFIG_REG3_ISr, REG_PORT_ANY, 0), rv)

#define READ_ETU_DDR72_STATUS_REG1_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_DDR72_STATUS_REG1_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_DDR72_STATUS_REG1_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_DDR72_STATUS_REG1_ISr, REG_PORT_ANY, 0), rv)

#define READ_ETU_DDR72_STATUS_REG2_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_DDR72_STATUS_REG2_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_DDR72_STATUS_REG2_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_DDR72_STATUS_REG2_ISr, REG_PORT_ANY, 0), rv)

#define READ_ETU_DDR72_STATUS_REG3_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_DDR72_STATUS_REG3_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_DDR72_STATUS_REG3_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_DDR72_STATUS_REG3_ISr, REG_PORT_ANY, 0), rv)

#define READ_ETU_DFT_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_DFT_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_DFT_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_DFT_CTLr, REG_PORT_ANY, 0), rv)

#define READ_ETU_DFT_CTL2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_DFT_CTL2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_DFT_CTL2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_DFT_CTL2r, REG_PORT_ANY, 0), rv)

#define READ_ETU_DTU_ATE_CAPT_DATr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_DTU_ATE_CAPT_DATr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_DTU_ATE_CAPT_DATr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_DTU_ATE_CAPT_DATr, REG_PORT_ANY, 0), rv)

#define READ_ETU_DTU_ATE_CONFIG_REG1_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_DTU_ATE_CONFIG_REG1_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_DTU_ATE_CONFIG_REG1_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_DTU_ATE_CONFIG_REG1_ISr, REG_PORT_ANY, 0), rv)

#define READ_ETU_DTU_ATE_EXP_DATr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_DTU_ATE_EXP_DATr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_DTU_ATE_EXP_DATr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_DTU_ATE_EXP_DATr, REG_PORT_ANY, 0), rv)

#define READ_ETU_DTU_ATE_STS1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_DTU_ATE_STS1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_DTU_ATE_STS1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_DTU_ATE_STS1r, REG_PORT_ANY, 0), rv)

#define READ_ETU_ET_INST_REQr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_ET_INST_REQr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_ET_INST_REQr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_ET_INST_REQr, REG_PORT_ANY, 0), rv)

#define READ_ETU_ET_INST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_ET_INST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_ET_INST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_ET_INST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ETU_INST_OPCr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_INST_OPCr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_INST_OPCr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_INST_OPCr, REG_PORT_ANY, 0), rv)

#define READ_ETU_INTR_CLEARr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_INTR_CLEARr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_INTR_CLEARr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_INTR_CLEARr, REG_PORT_ANY, 0), rv)

#define READ_ETU_INTR_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_INTR_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_INTR_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_INTR_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_ETU_INTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_INTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ETU_INT_MEM_RSTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_INT_MEM_RSTr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_INT_MEM_RSTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_INT_MEM_RSTr, REG_PORT_ANY, 0), rv)

#define READ_ETU_L2MODFIFO_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_L2MODFIFO_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_L2MODFIFO_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_L2MODFIFO_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ETU_L2SEARCH72_INSTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_L2SEARCH72_INSTr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_L2SEARCH72_INSTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_L2SEARCH72_INSTr, REG_PORT_ANY, 0), rv)

#define READ_ETU_LTE_BIST_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_LTE_BIST_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_LTE_BIST_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_LTE_BIST_CTLr, REG_PORT_ANY, 0), rv)

#define READ_ETU_LTE_BIST_REF_SEARCH0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_LTE_BIST_REF_SEARCH0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_LTE_BIST_REF_SEARCH0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_LTE_BIST_REF_SEARCH0r, REG_PORT_ANY, 0), rv)

#define READ_ETU_LTE_BIST_REF_SEARCH1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_LTE_BIST_REF_SEARCH1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_LTE_BIST_REF_SEARCH1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_LTE_BIST_REF_SEARCH1r, REG_PORT_ANY, 0), rv)

#define READ_ETU_LTE_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_LTE_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_LTE_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_LTE_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ETU_LUREQFIFO_RS_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_LUREQFIFO_RS_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_LUREQFIFO_RS_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_LUREQFIFO_RS_CTLr, REG_PORT_ANY, 0), rv)

#define READ_ETU_LUREQFIFO_RS_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_LUREQFIFO_RS_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_LUREQFIFO_RS_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_LUREQFIFO_RS_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ETU_RDDATA72_INSTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_RDDATA72_INSTr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_RDDATA72_INSTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_RDDATA72_INSTr, REG_PORT_ANY, 0), rv)

#define READ_ETU_RDMASK72_INSTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_RDMASK72_INSTr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_RDMASK72_INSTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_RDMASK72_INSTr, REG_PORT_ANY, 0), rv)

#define READ_ETU_RSLT_DAT0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_RSLT_DAT0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_RSLT_DAT0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_RSLT_DAT0r, REG_PORT_ANY, 0), rv)

#define READ_ETU_RSLT_DAT1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_RSLT_DAT1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_RSLT_DAT1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_RSLT_DAT1r, REG_PORT_ANY, 0), rv)

#define READ_ETU_RSLT_DAT2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_RSLT_DAT2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_RSLT_DAT2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_RSLT_DAT2r, REG_PORT_ANY, 0), rv)

#define READ_ETU_S0_RBUS_PERR_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_S0_RBUS_PERR_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_S0_RBUS_PERR_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_S0_RBUS_PERR_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ETU_S1_RBUS_PERR_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_S1_RBUS_PERR_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_S1_RBUS_PERR_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_S1_RBUS_PERR_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ETU_SBUS_CMD_ERR_INFO1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_SBUS_CMD_ERR_INFO1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_SBUS_CMD_ERR_INFO1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_SBUS_CMD_ERR_INFO1r, REG_PORT_ANY, 0), rv)

#define READ_ETU_SBUS_CMD_ERR_INFO2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_SBUS_CMD_ERR_INFO2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_SBUS_CMD_ERR_INFO2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_SBUS_CMD_ERR_INFO2r, REG_PORT_ANY, 0), rv)

#define READ_ETU_SBUS_CMD_SEC_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_SBUS_CMD_SEC_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_SBUS_CMD_SEC_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_SBUS_CMD_SEC_INFOr, REG_PORT_ANY, 0), rv)

#define READ_ETU_SEARCH0_RESULTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_SEARCH0_RESULTr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_SEARCH0_RESULTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_SEARCH0_RESULTr, REG_PORT_ANY, 0), rv)

#define READ_ETU_SEARCH1_RESULTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_SEARCH1_RESULTr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_SEARCH1_RESULTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_SEARCH1_RESULTr, REG_PORT_ANY, 0), rv)

#define READ_ETU_WRDM72_INSTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ETU_WRDM72_INSTr, REG_PORT_ANY, 0), rvp)
#define WRITE_ETU_WRDM72_INSTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ETU_WRDM72_INSTr, REG_PORT_ANY, 0), rv)

#define READ_EVLAN_RAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EVLAN_RAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EVLAN_RAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EVLAN_RAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_EVLAN_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EVLAN_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EVLAN_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EVLAN_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_EVTX_ENTRY_SRCH_AVAILr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EVTX_ENTRY_SRCH_AVAILr, REG_PORT_ANY, 0), rvp)
#define WRITE_EVTX_ENTRY_SRCH_AVAILr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EVTX_ENTRY_SRCH_AVAILr, REG_PORT_ANY, 0), rv)

#define READ_EVXLT_RAM_CONTROL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EVXLT_RAM_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EVXLT_RAM_CONTROL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EVXLT_RAM_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_EVXLT_RAM_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EVXLT_RAM_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_EVXLT_RAM_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EVXLT_RAM_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_EVXLT_RAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EVXLT_RAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_EVXLT_RAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EVXLT_RAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_EVXLT_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EVXLT_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_EVXLT_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EVXLT_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_EXT_TCAM_ATTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EXT_TCAM_ATTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_EXT_TCAM_ATTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EXT_TCAM_ATTRr, REG_PORT_ANY, 0), rv)

#define READ_EXT_TCAM_CONFIG_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, EXT_TCAM_CONFIG_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_EXT_TCAM_CONFIG_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, EXT_TCAM_CONFIG_0r, REG_PORT_ANY, 0), rv)

#define READ_FE_CLRTr(unit, port, rvp) \
	soc_reg_read(unit, FE_CLRTr, soc_reg_addr(unit, FE_CLRTr, port, 0), rvp)
#define WRITE_FE_CLRTr(unit, port, rv) \
	soc_reg_write(unit, FE_CLRTr, soc_reg_addr(unit, FE_CLRTr, port, 0), rv)

#define READ_FE_EXCESSIVE_DEFER_LIMITr(unit, port, rvp) \
	soc_reg_read(unit, FE_EXCESSIVE_DEFER_LIMITr, soc_reg_addr(unit, FE_EXCESSIVE_DEFER_LIMITr, port, 0), rvp)
#define WRITE_FE_EXCESSIVE_DEFER_LIMITr(unit, port, rv) \
	soc_reg_write(unit, FE_EXCESSIVE_DEFER_LIMITr, soc_reg_addr(unit, FE_EXCESSIVE_DEFER_LIMITr, port, 0), rv)

#define READ_FE_IPGRr(unit, port, rvp) \
	soc_reg_read(unit, FE_IPGRr, soc_reg_addr(unit, FE_IPGRr, port, 0), rvp)
#define WRITE_FE_IPGRr(unit, port, rv) \
	soc_reg_write(unit, FE_IPGRr, soc_reg_addr(unit, FE_IPGRr, port, 0), rv)

#define READ_FE_IPGTr(unit, port, rvp) \
	soc_reg_read(unit, FE_IPGTr, soc_reg_addr(unit, FE_IPGTr, port, 0), rvp)
#define WRITE_FE_IPGTr(unit, port, rv) \
	soc_reg_write(unit, FE_IPGTr, soc_reg_addr(unit, FE_IPGTr, port, 0), rv)

#define READ_FE_MAC1r(unit, port, rvp) \
	soc_reg_read(unit, FE_MAC1r, soc_reg_addr(unit, FE_MAC1r, port, 0), rvp)
#define WRITE_FE_MAC1r(unit, port, rv) \
	soc_reg_write(unit, FE_MAC1r, soc_reg_addr(unit, FE_MAC1r, port, 0), rv)

#define READ_FE_MAC2r(unit, port, rvp) \
	soc_reg_read(unit, FE_MAC2r, soc_reg_addr(unit, FE_MAC2r, port, 0), rvp)
#define WRITE_FE_MAC2r(unit, port, rv) \
	soc_reg_write(unit, FE_MAC2r, soc_reg_addr(unit, FE_MAC2r, port, 0), rv)

#define READ_FE_MAXFr(unit, port, rvp) \
	soc_reg_read(unit, FE_MAXFr, soc_reg_addr(unit, FE_MAXFr, port, 0), rvp)
#define WRITE_FE_MAXFr(unit, port, rv) \
	soc_reg_write(unit, FE_MAXFr, soc_reg_addr(unit, FE_MAXFr, port, 0), rv)

#define READ_FE_SUPPr(unit, port, rvp) \
	soc_reg_read(unit, FE_SUPPr, soc_reg_addr(unit, FE_SUPPr, port, 0), rvp)
#define WRITE_FE_SUPPr(unit, port, rv) \
	soc_reg_write(unit, FE_SUPPr, soc_reg_addr(unit, FE_SUPPr, port, 0), rv)

#define READ_FE_TESTr(unit, port, rvp) \
	soc_reg_read(unit, FE_TESTr, soc_reg_addr(unit, FE_TESTr, port, 0), rvp)
#define WRITE_FE_TESTr(unit, port, rv) \
	soc_reg_write(unit, FE_TESTr, soc_reg_addr(unit, FE_TESTr, port, 0), rv)

#define READ_FFP_BISTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_BISTr, port, 0), rvp)
#define WRITE_FFP_BISTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_BISTr, port, 0), rv)

#define READ_FFP_CAMBIST_EFSTAT_S2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_EFSTAT_S2r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_EFSTAT_S2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_EFSTAT_S2r, port, 0), rv)

#define READ_FFP_CAMBIST_EFSTAT_S3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_EFSTAT_S3r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_EFSTAT_S3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_EFSTAT_S3r, port, 0), rv)

#define READ_FFP_CAMBIST_EFSTAT_S5r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_EFSTAT_S5r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_EFSTAT_S5r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_EFSTAT_S5r, port, 0), rv)

#define READ_FFP_CAMBIST_EFSTAT_S6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_EFSTAT_S6r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_EFSTAT_S6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_EFSTAT_S6r, port, 0), rv)

#define READ_FFP_CAMBIST_EPSTAT_S2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_EPSTAT_S2r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_EPSTAT_S2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_EPSTAT_S2r, port, 0), rv)

#define READ_FFP_CAMBIST_EPSTAT_S3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_EPSTAT_S3r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_EPSTAT_S3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_EPSTAT_S3r, port, 0), rv)

#define READ_FFP_CAMBIST_EPSTAT_S5r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_EPSTAT_S5r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_EPSTAT_S5r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_EPSTAT_S5r, port, 0), rv)

#define READ_FFP_CAMBIST_EPSTAT_S6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_EPSTAT_S6r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_EPSTAT_S6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_EPSTAT_S6r, port, 0), rv)

#define READ_FFP_CAMBIST_OFSTAT_S2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_OFSTAT_S2r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_OFSTAT_S2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_OFSTAT_S2r, port, 0), rv)

#define READ_FFP_CAMBIST_OFSTAT_S3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_OFSTAT_S3r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_OFSTAT_S3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_OFSTAT_S3r, port, 0), rv)

#define READ_FFP_CAMBIST_OFSTAT_S5r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_OFSTAT_S5r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_OFSTAT_S5r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_OFSTAT_S5r, port, 0), rv)

#define READ_FFP_CAMBIST_OFSTAT_S6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_OFSTAT_S6r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_OFSTAT_S6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_OFSTAT_S6r, port, 0), rv)

#define READ_FFP_CAMBIST_OPSTAT_S2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_OPSTAT_S2r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_OPSTAT_S2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_OPSTAT_S2r, port, 0), rv)

#define READ_FFP_CAMBIST_OPSTAT_S3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_OPSTAT_S3r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_OPSTAT_S3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_OPSTAT_S3r, port, 0), rv)

#define READ_FFP_CAMBIST_OPSTAT_S5r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_OPSTAT_S5r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_OPSTAT_S5r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_OPSTAT_S5r, port, 0), rv)

#define READ_FFP_CAMBIST_OPSTAT_S6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_CAMBIST_OPSTAT_S6r, port, 0), rvp)
#define WRITE_FFP_CAMBIST_OPSTAT_S6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_CAMBIST_OPSTAT_S6r, port, 0), rv)

#define READ_FFP_IRULERESULTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_IRULERESULTr, port, 0), rvp)
#define WRITE_FFP_IRULERESULTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_IRULERESULTr, port, 0), rv)

#define READ_FFP_TEST_CTRLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FFP_TEST_CTRLr, port, 0), rvp)
#define WRITE_FFP_TEST_CTRLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FFP_TEST_CTRLr, port, 0), rv)

#define READ_FLEXIBLE_IPV6_EXT_HDRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FLEXIBLE_IPV6_EXT_HDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_FLEXIBLE_IPV6_EXT_HDRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FLEXIBLE_IPV6_EXT_HDRr, REG_PORT_ANY, 0), rv)

#define READ_FLOWCONTROLr(unit, cos, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FLOWCONTROLr, REG_PORT_ANY, cos), rvp)
#define WRITE_FLOWCONTROLr(unit, cos, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FLOWCONTROLr, REG_PORT_ANY, cos), rv)

#define READ_FLUSH_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FLUSH_CONTROLr, port, 0), rvp)
#define WRITE_FLUSH_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FLUSH_CONTROLr, port, 0), rv)

#define READ_FP_CAM_BIST_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_DBG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_DBG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_DBG_DATA_VALIDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_DBG_DATA_VALIDr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_DBG_DATA_VALIDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_DBG_DATA_VALIDr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_DEBUG_SENDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_DEBUG_SENDr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_DEBUG_SENDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_DEBUG_SENDr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_ENABLE_LOWERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_ENABLE_LOWERr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_ENABLE_LOWERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_ENABLE_LOWERr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_ENABLE_ONE_TCAMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_ENABLE_ONE_TCAMr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_ENABLE_ONE_TCAMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_ENABLE_ONE_TCAMr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_ENABLE_TWO_TCAMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_ENABLE_TWO_TCAMr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_ENABLE_TWO_TCAMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_ENABLE_TWO_TCAMr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_ENABLE_UPPERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_ENABLE_UPPERr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_ENABLE_UPPERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_ENABLE_UPPERr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S10_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S10_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S12_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S12_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S12_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S12_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S14_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S14_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S14_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S14_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S15_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S15_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S15_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S15_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_CONTROLr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_CONTROLr, REG_PORT_ANY, idx), rvp)
#define WRITE_FP_CAM_CONTROLr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_CONTROLr, REG_PORT_ANY, idx), rv)

#define READ_FP_CAM_CONTROL_15r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_CONTROL_15r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_CONTROL_15r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_CONTROL_15r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_CONTROL_14_THRU_10r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_CONTROL_14_THRU_10r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_CONTROL_14_THRU_10r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_CONTROL_14_THRU_10r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_CONTROL_4_THRU_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_CONTROL_4_THRU_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_CONTROL_4_THRU_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_CONTROL_4_THRU_0r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_CONTROL_9_THRU_5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_CONTROL_9_THRU_5r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_CONTROL_9_THRU_5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_CONTROL_9_THRU_5r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_CONTROL_LOWERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_CONTROL_LOWERr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_CONTROL_LOWERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_CONTROL_LOWERr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_CONTROL_SLICE_11_8r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_CONTROL_SLICE_11_8r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_CONTROL_SLICE_11_8r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_CONTROL_SLICE_11_8r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_CONTROL_SLICE_15_8r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_CONTROL_SLICE_15_8r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_CONTROL_SLICE_15_8r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_CONTROL_SLICE_15_8r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_CONTROL_SLICE_7_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_CONTROL_SLICE_7_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_CONTROL_SLICE_7_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_CONTROL_SLICE_7_0r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_CONTROL_TM_7_THRU_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_CONTROL_TM_7_THRU_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_CONTROL_TM_7_THRU_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_CONTROL_TM_7_THRU_0r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_CONTROL_UPPERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_CONTROL_UPPERr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_CONTROL_UPPERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_CONTROL_UPPERr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_DATA_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_DATA_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_0r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_DATA_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_DATA_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_1r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_DATA_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_DATA_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_2r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_DATA_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_DATA_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_3r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_DATA_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_DATA_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_4r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_DATA_5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_5r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_DATA_5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_DATA_5r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_GLOBAL_MASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_GLOBAL_MASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_GLOBAL_MASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_GLOBAL_MASKr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_DEBUG_SENDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_DEBUG_SENDr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_DEBUG_SENDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_DEBUG_SENDr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_SAM_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_SAM_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_SAM_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_SAM_1r, REG_PORT_ANY, 0), rv)

#define READ_FP_CAM_SAM_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_CAM_SAM_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_CAM_SAM_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_CAM_SAM_2r, REG_PORT_ANY, 0), rv)

#define READ_FP_DOUBLE_WIDE_F4_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_DOUBLE_WIDE_F4_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_DOUBLE_WIDE_F4_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_DOUBLE_WIDE_F4_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_FP_F4_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_F4_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_F4_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_F4_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_FP_GLOBAL_MASK_CAM_CONTROL_SLICE_15_8r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_GLOBAL_MASK_CAM_CONTROL_SLICE_15_8r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_GLOBAL_MASK_CAM_CONTROL_SLICE_15_8r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_GLOBAL_MASK_CAM_CONTROL_SLICE_15_8r, REG_PORT_ANY, 0), rv)

#define READ_FP_GLOBAL_MASK_CAM_CONTROL_SLICE_7_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_GLOBAL_MASK_CAM_CONTROL_SLICE_7_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_GLOBAL_MASK_CAM_CONTROL_SLICE_7_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_GLOBAL_MASK_CAM_CONTROL_SLICE_7_0r, REG_PORT_ANY, 0), rv)

#define READ_FP_METER_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_METER_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_METER_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_METER_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_FP_METER_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_METER_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_METER_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_METER_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_FP_METER_TM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_METER_TM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_METER_TM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_METER_TM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_FP_NON_ROTATED_CAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_NON_ROTATED_CAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_NON_ROTATED_CAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_NON_ROTATED_CAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_FP_POLICY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_POLICY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_POLICY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_POLICY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_FP_POLICY_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_POLICY_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_POLICY_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_POLICY_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_FP_POLICY_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_POLICY_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_POLICY_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_POLICY_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_FP_POLICY_TABLE_TM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_POLICY_TABLE_TM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_POLICY_TABLE_TM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_POLICY_TABLE_TM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_FP_POLICY_TM_LOWERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_POLICY_TM_LOWERr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_POLICY_TM_LOWERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_POLICY_TM_LOWERr, REG_PORT_ANY, 0), rv)

#define READ_FP_POLICY_TM_UPPERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_POLICY_TM_UPPERr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_POLICY_TM_UPPERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_POLICY_TM_UPPERr, REG_PORT_ANY, 0), rv)

#define READ_FP_RAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_RAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_RAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_RAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_FP_ROTATED_CAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_ROTATED_CAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_ROTATED_CAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_ROTATED_CAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_FP_SLICE_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_SLICE_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_SLICE_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_SLICE_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_FP_SLICE_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_SLICE_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_SLICE_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_SLICE_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_FP_SLICE_INDEX_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_SLICE_INDEX_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_SLICE_INDEX_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_SLICE_INDEX_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_FP_SLICE_METER_MAP_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FP_SLICE_METER_MAP_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_FP_SLICE_METER_MAP_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FP_SLICE_METER_MAP_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_FREE_CELLPTRS_CG0_CH0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FREE_CELLPTRS_CG0_CH0r, REG_PORT_ANY, 0), rvp)
#define WRITE_FREE_CELLPTRS_CG0_CH0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FREE_CELLPTRS_CG0_CH0r, REG_PORT_ANY, 0), rv)

#define READ_FREE_CELLPTRS_CG0_CH1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FREE_CELLPTRS_CG0_CH1r, REG_PORT_ANY, 0), rvp)
#define WRITE_FREE_CELLPTRS_CG0_CH1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FREE_CELLPTRS_CG0_CH1r, REG_PORT_ANY, 0), rv)

#define READ_FREE_CELLPTRS_CG1_CH0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FREE_CELLPTRS_CG1_CH0r, REG_PORT_ANY, 0), rvp)
#define WRITE_FREE_CELLPTRS_CG1_CH0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FREE_CELLPTRS_CG1_CH0r, REG_PORT_ANY, 0), rv)

#define READ_FREE_CELLPTRS_CG1_CH1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FREE_CELLPTRS_CG1_CH1r, REG_PORT_ANY, 0), rvp)
#define WRITE_FREE_CELLPTRS_CG1_CH1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FREE_CELLPTRS_CG1_CH1r, REG_PORT_ANY, 0), rv)

#define READ_FREE_CELLPTRS_CH0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FREE_CELLPTRS_CH0r, REG_PORT_ANY, 0), rvp)
#define WRITE_FREE_CELLPTRS_CH0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FREE_CELLPTRS_CH0r, REG_PORT_ANY, 0), rv)

#define READ_FREE_CELLPTRS_CH1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FREE_CELLPTRS_CH1r, REG_PORT_ANY, 0), rvp)
#define WRITE_FREE_CELLPTRS_CH1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FREE_CELLPTRS_CH1r, REG_PORT_ANY, 0), rv)

#define READ_FRM_LENGTHr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FRM_LENGTHr, port, 0), rvp)
#define WRITE_FRM_LENGTHr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FRM_LENGTHr, port, 0), rv)

#define READ_FUSE_REGS_FP_TCAM0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FUSE_REGS_FP_TCAM0r, REG_PORT_ANY, 0), rvp)
#define WRITE_FUSE_REGS_FP_TCAM0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FUSE_REGS_FP_TCAM0r, REG_PORT_ANY, 0), rv)

#define READ_FUSE_REGS_ING_L3_NEXT_HOP_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FUSE_REGS_ING_L3_NEXT_HOP_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_FUSE_REGS_ING_L3_NEXT_HOP_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FUSE_REGS_ING_L3_NEXT_HOP_0r, REG_PORT_ANY, 0), rv)

#define READ_FUSE_REGS_L2_ENTRY_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FUSE_REGS_L2_ENTRY_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_FUSE_REGS_L2_ENTRY_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FUSE_REGS_L2_ENTRY_0r, REG_PORT_ANY, 0), rv)

#define READ_FUSE_REGS_L2_ENTRY_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FUSE_REGS_L2_ENTRY_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_FUSE_REGS_L2_ENTRY_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FUSE_REGS_L2_ENTRY_1r, REG_PORT_ANY, 0), rv)

#define READ_FUSE_REGS_VLAN_MAC_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, FUSE_REGS_VLAN_MAC_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_FUSE_REGS_VLAN_MAC_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, FUSE_REGS_VLAN_MAC_0r, REG_PORT_ANY, 0), rv)

#define READ_GCAR1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GCAR1r, port, 0), rvp)
#define WRITE_GCAR1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GCAR1r, port, 0), rv)

#define READ_GCAR2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GCAR2r, port, 0), rvp)
#define WRITE_GCAR2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GCAR2r, port, 0), rv)

#define READ_GCCCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GCCCOUNTr, port, 0), rvp)
#define WRITE_GCCCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GCCCOUNTr, port, 0), rv)

#define READ_GE0_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE0_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE0_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE0_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE0_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE0_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE0_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE0_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE0_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE0_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE0_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE0_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE10_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE10_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE10_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE10_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE10_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE10_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE10_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE10_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE10_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE10_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE10_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE10_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE11_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE11_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE11_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE11_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE11_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE11_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE11_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE11_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE11_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE11_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE11_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE11_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE1_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE1_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE1_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE1_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE1_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE1_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE1_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE1_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE1_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE1_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE1_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE1_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE2_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE2_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE2_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE2_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE2_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE2_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE2_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE2_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE2_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE2_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE2_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE2_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE3_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE3_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE3_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE3_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE3_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE3_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE3_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE3_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE3_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE3_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE3_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE3_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE4_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE4_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE4_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE4_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE4_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE4_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE4_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE4_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE4_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE4_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE4_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE4_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE5_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE5_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE5_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE5_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE5_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE5_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE5_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE5_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE5_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE5_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE5_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE5_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE6_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE6_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE6_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE6_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE6_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE6_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE6_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE6_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE6_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE6_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE6_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE6_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE7_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE7_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE7_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE7_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE7_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE7_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE7_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE7_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE7_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE7_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE7_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE7_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE8_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE8_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE8_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE8_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE8_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE8_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE8_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE8_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE8_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE8_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE8_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE8_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE9_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE9_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE9_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE9_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE9_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE9_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE9_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE9_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE9_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE9_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE9_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE9_GBOD_OVRFLWr, port, 0), rv)

#define READ_GEGR_ENABLEr(unit, port, rvp) \
	soc_reg_read(unit, GEGR_ENABLEr, soc_reg_addr(unit, GEGR_ENABLEr, port, 0), rvp)
#define WRITE_GEGR_ENABLEr(unit, port, rv) \
	soc_reg_write(unit, GEGR_ENABLEr, soc_reg_addr(unit, GEGR_ENABLEr, port, 0), rv)

#define READ_GE_EGR_PKT_DROP_CTLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE_EGR_PKT_DROP_CTLr, port, 0), rvp)
#define WRITE_GE_EGR_PKT_DROP_CTLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE_EGR_PKT_DROP_CTLr, port, 0), rv)

#define READ_GE_GBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE_GBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_GE_GBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE_GBODE_CELL_CNTr, port, 0), rv)

#define READ_GE_GBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE_GBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_GE_GBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE_GBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_GE_GBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE_GBOD_OVRFLWr, port, 0), rvp)
#define WRITE_GE_GBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE_GBOD_OVRFLWr, port, 0), rv)

#define READ_GE_PORT_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GE_PORT_CONFIGr, port, 0), rvp)
#define WRITE_GE_PORT_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GE_PORT_CONFIGr, port, 0), rv)

#define READ_GHOLD0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD0r, port, 0), rvp)
#define WRITE_GHOLD0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD0r, port, 0), rv)

#define READ_GHOLD1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD1r, port, 0), rvp)
#define WRITE_GHOLD1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD1r, port, 0), rv)

#define READ_GHOLD2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD2r, port, 0), rvp)
#define WRITE_GHOLD2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD2r, port, 0), rv)

#define READ_GHOLD3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD3r, port, 0), rvp)
#define WRITE_GHOLD3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD3r, port, 0), rv)

#define READ_GHOLD4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD4r, port, 0), rvp)
#define WRITE_GHOLD4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD4r, port, 0), rv)

#define READ_GHOLD5r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD5r, port, 0), rvp)
#define WRITE_GHOLD5r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD5r, port, 0), rv)

#define READ_GHOLD6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD6r, port, 0), rvp)
#define WRITE_GHOLD6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD6r, port, 0), rv)

#define READ_GHOLD7r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD7r, port, 0), rvp)
#define WRITE_GHOLD7r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD7r, port, 0), rv)

#define READ_GHOLD8r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD8r, port, 0), rvp)
#define WRITE_GHOLD8r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD8r, port, 0), rv)

#define READ_GHOLD9r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD9r, port, 0), rvp)
#define WRITE_GHOLD9r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD9r, port, 0), rv)

#define READ_GHOLD10r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD10r, port, 0), rvp)
#define WRITE_GHOLD10r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD10r, port, 0), rv)

#define READ_GHOLD11r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD11r, port, 0), rvp)
#define WRITE_GHOLD11r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD11r, port, 0), rv)

#define READ_GHOLD12r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD12r, port, 0), rvp)
#define WRITE_GHOLD12r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD12r, port, 0), rv)

#define READ_GHOLD13r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GHOLD13r, port, 0), rvp)
#define WRITE_GHOLD13r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GHOLD13r, port, 0), rv)

#define READ_GIMBPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GIMBPr, port, 0), rvp)
#define WRITE_GIMBPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GIMBPr, port, 0), rv)

#define READ_GIMRPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GIMRPr, port, 0), rvp)
#define WRITE_GIMRPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GIMRPr, port, 0), rv)

#define READ_GLOBAL_HDRM_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_HDRM_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_HDRM_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_HDRM_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_HDRM_LIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_HDRM_LIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_HDRM_LIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_HDRM_LIMITr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_MPLS_RANGE_1_LOWERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_MPLS_RANGE_1_LOWERr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_MPLS_RANGE_1_LOWERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_MPLS_RANGE_1_LOWERr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_MPLS_RANGE_1_UPPERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_MPLS_RANGE_1_UPPERr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_MPLS_RANGE_1_UPPERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_MPLS_RANGE_1_UPPERr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_MPLS_RANGE_2_LOWERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_MPLS_RANGE_2_LOWERr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_MPLS_RANGE_2_LOWERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_MPLS_RANGE_2_LOWERr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_MPLS_RANGE_2_UPPERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_MPLS_RANGE_2_UPPERr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_MPLS_RANGE_2_UPPERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_MPLS_RANGE_2_UPPERr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_SHARED_FILL_STATE_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_SHARED_FILL_STATE_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_SHARED_FILL_STATE_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_SHARED_FILL_STATE_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_WREDAVGQSIZE_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_WREDAVGQSIZE_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_WREDAVGQSIZE_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_WREDAVGQSIZE_CELLr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_WREDAVGQSIZE_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_WREDAVGQSIZE_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_WREDAVGQSIZE_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_WREDAVGQSIZE_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_WREDCONFIG_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_WREDCONFIG_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_WREDCONFIG_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_WREDCONFIG_CELLr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_WREDCONFIG_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_WREDCONFIG_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_WREDCONFIG_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_WREDCONFIG_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_WREDPARAM_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_WREDPARAM_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_CELLr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_WREDPARAM_NONTCP_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_NONTCP_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_WREDPARAM_NONTCP_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_NONTCP_CELLr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_WREDPARAM_NONTCP_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_NONTCP_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_WREDPARAM_NONTCP_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_NONTCP_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_WREDPARAM_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_WREDPARAM_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_WREDPARAM_RED_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_RED_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_WREDPARAM_RED_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_RED_CELLr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_WREDPARAM_RED_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_RED_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_WREDPARAM_RED_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_RED_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_WREDPARAM_YELLOW_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_YELLOW_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_WREDPARAM_YELLOW_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_YELLOW_CELLr, REG_PORT_ANY, 0), rv)

#define READ_GLOBAL_WREDPARAM_YELLOW_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_YELLOW_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_GLOBAL_WREDPARAM_YELLOW_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GLOBAL_WREDPARAM_YELLOW_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_GMACC0r(unit, port, rvp) \
	soc_reg_read(unit, GMACC0r, soc_reg_addr(unit, GMACC0r, port, 0), rvp)
#define WRITE_GMACC0r(unit, port, rv) \
	soc_reg_write(unit, GMACC0r, soc_reg_addr(unit, GMACC0r, port, 0), rv)

#define READ_GMACC1r(unit, port, rvp) \
	soc_reg_read(unit, GMACC1r, soc_reg_addr(unit, GMACC1r, port, 0), rvp)
#define WRITE_GMACC1r(unit, port, rv) \
	soc_reg_write(unit, GMACC1r, soc_reg_addr(unit, GMACC1r, port, 0), rv)

#define READ_GMACC2r(unit, port, rvp) \
	soc_reg_read(unit, GMACC2r, soc_reg_addr(unit, GMACC2r, port, 0), rvp)
#define WRITE_GMACC2r(unit, port, rv) \
	soc_reg_write(unit, GMACC2r, soc_reg_addr(unit, GMACC2r, port, 0), rv)

#define READ_GPCSCr(unit, port, rvp) \
	soc_reg_read(unit, GPCSCr, soc_reg_addr(unit, GPCSCr, port, 0), rvp)
#define WRITE_GPCSCr(unit, port, rv) \
	soc_reg_write(unit, GPCSCr, soc_reg_addr(unit, GPCSCr, port, 0), rv)

#define READ_GPC_BPDU0_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPC_BPDU0_HIr, port, 0), rvp)
#define WRITE_GPC_BPDU0_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPC_BPDU0_HIr, port, 0), rv)

#define READ_GPC_BPDU0_LOr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPC_BPDU0_LOr, port, 0), rvp)
#define WRITE_GPC_BPDU0_LOr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPC_BPDU0_LOr, port, 0), rv)

#define READ_GPC_BPDU1_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPC_BPDU1_HIr, port, 0), rvp)
#define WRITE_GPC_BPDU1_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPC_BPDU1_HIr, port, 0), rv)

#define READ_GPC_BPDU1_LOr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPC_BPDU1_LOr, port, 0), rvp)
#define WRITE_GPC_BPDU1_LOr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPC_BPDU1_LOr, port, 0), rv)

#define READ_GPC_BPDU2_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPC_BPDU2_HIr, port, 0), rvp)
#define WRITE_GPC_BPDU2_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPC_BPDU2_HIr, port, 0), rv)

#define READ_GPC_BPDU2_LOr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPC_BPDU2_LOr, port, 0), rvp)
#define WRITE_GPC_BPDU2_LOr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPC_BPDU2_LOr, port, 0), rv)

#define READ_GPC_BPDU3_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPC_BPDU3_HIr, port, 0), rvp)
#define WRITE_GPC_BPDU3_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPC_BPDU3_HIr, port, 0), rv)

#define READ_GPC_BPDU3_LOr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPC_BPDU3_LOr, port, 0), rvp)
#define WRITE_GPC_BPDU3_LOr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPC_BPDU3_LOr, port, 0), rv)

#define READ_GPC_BPDU4_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPC_BPDU4_HIr, port, 0), rvp)
#define WRITE_GPC_BPDU4_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPC_BPDU4_HIr, port, 0), rv)

#define READ_GPC_BPDU4_LOr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPC_BPDU4_LOr, port, 0), rvp)
#define WRITE_GPC_BPDU4_LOr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPC_BPDU4_LOr, port, 0), rv)

#define READ_GPC_BPDU5_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPC_BPDU5_HIr, port, 0), rvp)
#define WRITE_GPC_BPDU5_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPC_BPDU5_HIr, port, 0), rv)

#define READ_GPC_BPDU5_LOr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPC_BPDU5_LOr, port, 0), rvp)
#define WRITE_GPC_BPDU5_LOr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPC_BPDU5_LOr, port, 0), rv)

#define READ_GPC_EGR_DBGr(unit, port, rvp) \
	soc_reg_read(unit, GPC_EGR_DBGr, soc_reg_addr(unit, GPC_EGR_DBGr, port, 0), rvp)
#define WRITE_GPC_EGR_DBGr(unit, port, rv) \
	soc_reg_write(unit, GPC_EGR_DBGr, soc_reg_addr(unit, GPC_EGR_DBGr, port, 0), rv)

#define READ_GPC_EGR_PKT_DROP_CTLr(unit, port, rvp) \
	soc_reg_read(unit, GPC_EGR_PKT_DROP_CTLr, soc_reg_addr(unit, GPC_EGR_PKT_DROP_CTLr, port, 0), rvp)
#define WRITE_GPC_EGR_PKT_DROP_CTLr(unit, port, rv) \
	soc_reg_write(unit, GPC_EGR_PKT_DROP_CTLr, soc_reg_addr(unit, GPC_EGR_PKT_DROP_CTLr, port, 0), rv)

#define READ_GPC_EGR_SNGL_OUTr(unit, port, rvp) \
	soc_reg_read(unit, GPC_EGR_SNGL_OUTr, soc_reg_addr(unit, GPC_EGR_SNGL_OUTr, port, 0), rvp)
#define WRITE_GPC_EGR_SNGL_OUTr(unit, port, rv) \
	soc_reg_write(unit, GPC_EGR_SNGL_OUTr, soc_reg_addr(unit, GPC_EGR_SNGL_OUTr, port, 0), rv)

#define READ_GPC_EGR_SNGL_PKTr(unit, port, rvp) \
	soc_reg_read(unit, GPC_EGR_SNGL_PKTr, soc_reg_addr(unit, GPC_EGR_SNGL_PKTr, port, 0), rvp)
#define WRITE_GPC_EGR_SNGL_PKTr(unit, port, rv) \
	soc_reg_write(unit, GPC_EGR_SNGL_PKTr, soc_reg_addr(unit, GPC_EGR_SNGL_PKTr, port, 0), rv)

#define READ_GPC_FFP_CONFIGr(unit, port, rvp) \
	soc_reg_read(unit, GPC_FFP_CONFIGr, soc_reg_addr(unit, GPC_FFP_CONFIGr, port, 0), rvp)
#define WRITE_GPC_FFP_CONFIGr(unit, port, rv) \
	soc_reg_write(unit, GPC_FFP_CONFIGr, soc_reg_addr(unit, GPC_FFP_CONFIGr, port, 0), rv)

#define READ_GPC_INGRESS_DEBUGr(unit, port, rvp) \
	soc_reg_read(unit, GPC_INGRESS_DEBUGr, soc_reg_addr(unit, GPC_INGRESS_DEBUGr, port, 0), rvp)
#define WRITE_GPC_INGRESS_DEBUGr(unit, port, rv) \
	soc_reg_write(unit, GPC_INGRESS_DEBUGr, soc_reg_addr(unit, GPC_INGRESS_DEBUGr, port, 0), rv)

#define READ_GPC_IO_CONFIGr(unit, port, rvp) \
	soc_reg_read(unit, GPC_IO_CONFIGr, soc_reg_addr(unit, GPC_IO_CONFIGr, port, 0), rvp)
#define WRITE_GPC_IO_CONFIGr(unit, port, rv) \
	soc_reg_write(unit, GPC_IO_CONFIGr, soc_reg_addr(unit, GPC_IO_CONFIGr, port, 0), rv)

#define READ_GPC_VLAN_FWD_STATEr(unit, port, rvp) \
	soc_reg_read(unit, GPC_VLAN_FWD_STATEr, soc_reg_addr(unit, GPC_VLAN_FWD_STATEr, port, 0), rvp)
#define WRITE_GPC_VLAN_FWD_STATEr(unit, port, rv) \
	soc_reg_write(unit, GPC_VLAN_FWD_STATEr, soc_reg_addr(unit, GPC_VLAN_FWD_STATEr, port, 0), rv)

#define READ_GPDISCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPDISCr, port, 0), rvp)
#define WRITE_GPDISCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPDISCr, port, 0), rv)

#define READ_GPORT_CNTMAXSIZEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_CNTMAXSIZEr, port, 0), rvp)
#define WRITE_GPORT_CNTMAXSIZEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_CNTMAXSIZEr, port, 0), rv)

#define READ_GPORT_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_CONFIGr, port, 0), rvp)
#define WRITE_GPORT_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_CONFIGr, port, 0), rv)

#define READ_GPORT_DROP_ON_WRONG_SOP_S0_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_DROP_ON_WRONG_SOP_S0_CNTr, port, 0), rvp)
#define WRITE_GPORT_DROP_ON_WRONG_SOP_S0_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_DROP_ON_WRONG_SOP_S0_CNTr, port, 0), rv)

#define READ_GPORT_DROP_ON_WRONG_SOP_S1_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_DROP_ON_WRONG_SOP_S1_CNTr, port, 0), rvp)
#define WRITE_GPORT_DROP_ON_WRONG_SOP_S1_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_DROP_ON_WRONG_SOP_S1_CNTr, port, 0), rv)

#define READ_GPORT_DROP_ON_WRONG_SOP_S3_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_DROP_ON_WRONG_SOP_S3_CNTr, port, 0), rvp)
#define WRITE_GPORT_DROP_ON_WRONG_SOP_S3_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_DROP_ON_WRONG_SOP_S3_CNTr, port, 0), rv)

#define READ_GPORT_DROP_ON_WRONG_SOP_S4_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_DROP_ON_WRONG_SOP_S4_CNTr, port, 0), rvp)
#define WRITE_GPORT_DROP_ON_WRONG_SOP_S4_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_DROP_ON_WRONG_SOP_S4_CNTr, port, 0), rv)

#define READ_GPORT_MAC_CRS_SELr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_MAC_CRS_SELr, port, 0), rvp)
#define WRITE_GPORT_MAC_CRS_SELr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_MAC_CRS_SELr, port, 0), rv)

#define READ_GPORT_RSV_MASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_RSV_MASKr, port, 0), rvp)
#define WRITE_GPORT_RSV_MASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_RSV_MASKr, port, 0), rv)

#define READ_GPORT_SGNDET_EARLYCRSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_SGNDET_EARLYCRSr, port, 0), rvp)
#define WRITE_GPORT_SGNDET_EARLYCRSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_SGNDET_EARLYCRSr, port, 0), rv)

#define READ_GPORT_SGN_DET_SELr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_SGN_DET_SELr, port, 0), rvp)
#define WRITE_GPORT_SGN_DET_SELr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_SGN_DET_SELr, port, 0), rv)

#define READ_GPORT_SOP_S0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_SOP_S0r, port, 0), rvp)
#define WRITE_GPORT_SOP_S0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_SOP_S0r, port, 0), rv)

#define READ_GPORT_SOP_S1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_SOP_S1r, port, 0), rvp)
#define WRITE_GPORT_SOP_S1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_SOP_S1r, port, 0), rv)

#define READ_GPORT_SOP_S3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_SOP_S3r, port, 0), rvp)
#define WRITE_GPORT_SOP_S3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_SOP_S3r, port, 0), rv)

#define READ_GPORT_SOP_S4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_SOP_S4r, port, 0), rvp)
#define WRITE_GPORT_SOP_S4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_SOP_S4r, port, 0), rv)

#define READ_GPORT_STAT_UPDATE_MASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_STAT_UPDATE_MASKr, port, 0), rvp)
#define WRITE_GPORT_STAT_UPDATE_MASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_STAT_UPDATE_MASKr, port, 0), rv)

#define READ_GPORT_TPIDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GPORT_TPIDr, port, 0), rvp)
#define WRITE_GPORT_TPIDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GPORT_TPIDr, port, 0), rv)

#define READ_GR64r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR64r, port, 0), rvp)
#define WRITE_GR64r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR64r, port, 0), rv)

#define READ_GR127r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR127r, port, 0), rvp)
#define WRITE_GR127r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR127r, port, 0), rv)

#define READ_GR255r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR255r, port, 0), rvp)
#define WRITE_GR255r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR255r, port, 0), rv)

#define READ_GR511r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR511r, port, 0), rvp)
#define WRITE_GR511r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR511r, port, 0), rv)

#define READ_GR1023r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR1023r, port, 0), rvp)
#define WRITE_GR1023r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR1023r, port, 0), rv)

#define READ_GR1518r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR1518r, port, 0), rvp)
#define WRITE_GR1518r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR1518r, port, 0), rv)

#define READ_GR2047r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR2047r, port, 0), rvp)
#define WRITE_GR2047r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR2047r, port, 0), rv)

#define READ_GR4095r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR4095r, port, 0), rvp)
#define WRITE_GR4095r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR4095r, port, 0), rv)

#define READ_GR9216r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GR9216r, port, 0), rvp)
#define WRITE_GR9216r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GR9216r, port, 0), rv)

#define READ_GRALNr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRALNr, port, 0), rvp)
#define WRITE_GRALNr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRALNr, port, 0), rv)

#define READ_GRBCAr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRBCAr, port, 0), rvp)
#define WRITE_GRBCAr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRBCAr, port, 0), rv)

#define READ_GRBYTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRBYTr, port, 0), rvp)
#define WRITE_GRBYTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRBYTr, port, 0), rv)

#define READ_GRCDEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRCDEr, port, 0), rvp)
#define WRITE_GRCDEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRCDEr, port, 0), rv)

#define READ_GRDISCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRDISCr, port, 0), rvp)
#define WRITE_GRDISCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRDISCr, port, 0), rv)

#define READ_GRDROPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRDROPr, port, 0), rvp)
#define WRITE_GRDROPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRDROPr, port, 0), rv)

#define READ_GRFCRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRFCRr, port, 0), rvp)
#define WRITE_GRFCRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRFCRr, port, 0), rv)

#define READ_GRFCSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRFCSr, port, 0), rvp)
#define WRITE_GRFCSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRFCSr, port, 0), rv)

#define READ_GRFILDRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRFILDRr, port, 0), rvp)
#define WRITE_GRFILDRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRFILDRr, port, 0), rv)

#define READ_GRFLRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRFLRr, port, 0), rvp)
#define WRITE_GRFLRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRFLRr, port, 0), rv)

#define READ_GRFRGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRFRGr, port, 0), rvp)
#define WRITE_GRFRGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRFRGr, port, 0), rv)

#define READ_GRIMDRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRIMDRr, port, 0), rvp)
#define WRITE_GRIMDRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRIMDRr, port, 0), rv)

#define READ_GRIPCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRIPCr, port, 0), rvp)
#define WRITE_GRIPCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRIPCr, port, 0), rv)

#define READ_GRIPCHKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRIPCHKr, port, 0), rvp)
#define WRITE_GRIPCHKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRIPCHKr, port, 0), rv)

#define READ_GRIPDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRIPDr, port, 0), rvp)
#define WRITE_GRIPDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRIPDr, port, 0), rv)

#define READ_GRIPHEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRIPHEr, port, 0), rvp)
#define WRITE_GRIPHEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRIPHEr, port, 0), rv)

#define READ_GRJBRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRJBRr, port, 0), rvp)
#define WRITE_GRJBRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRJBRr, port, 0), rv)

#define READ_GRMCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRMCr, port, 0), rvp)
#define WRITE_GRMCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRMCr, port, 0), rv)

#define READ_GRMCAr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRMCAr, port, 0), rvp)
#define WRITE_GRMCAr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRMCAr, port, 0), rv)

#define READ_GRMGVr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRMGVr, port, 0), rvp)
#define WRITE_GRMGVr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRMGVr, port, 0), rv)

#define READ_GRMTUEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRMTUEr, port, 0), rvp)
#define WRITE_GRMTUEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRMTUEr, port, 0), rv)

#define READ_GROVRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GROVRr, port, 0), rvp)
#define WRITE_GROVRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GROVRr, port, 0), rv)

#define READ_GRPKTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRPKTr, port, 0), rvp)
#define WRITE_GRPKTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRPKTr, port, 0), rv)

#define READ_GRPOKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRPOKr, port, 0), rvp)
#define WRITE_GRPOKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRPOKr, port, 0), rv)

#define READ_GRPORTDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRPORTDr, port, 0), rvp)
#define WRITE_GRPORTDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRPORTDr, port, 0), rv)

#define READ_GRUCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRUCr, port, 0), rvp)
#define WRITE_GRUCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRUCr, port, 0), rv)

#define READ_GRUNDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRUNDr, port, 0), rvp)
#define WRITE_GRUNDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRUNDr, port, 0), rv)

#define READ_GRXCFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRXCFr, port, 0), rvp)
#define WRITE_GRXCFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRXCFr, port, 0), rv)

#define READ_GRXPFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRXPFr, port, 0), rvp)
#define WRITE_GRXPFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRXPFr, port, 0), rv)

#define READ_GRXPPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRXPPr, port, 0), rvp)
#define WRITE_GRXPPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRXPPr, port, 0), rv)

#define READ_GRXUOr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GRXUOr, port, 0), rvp)
#define WRITE_GRXUOr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GRXUOr, port, 0), rv)

#define READ_GSA0r(unit, port, rvp) \
	soc_reg_read(unit, GSA0r, soc_reg_addr(unit, GSA0r, port, 0), rvp)
#define WRITE_GSA0r(unit, port, rv) \
	soc_reg_write(unit, GSA0r, soc_reg_addr(unit, GSA0r, port, 0), rv)

#define READ_GSA1r(unit, port, rvp) \
	soc_reg_read(unit, GSA1r, soc_reg_addr(unit, GSA1r, port, 0), rvp)
#define WRITE_GSA1r(unit, port, rv) \
	soc_reg_write(unit, GSA1r, soc_reg_addr(unit, GSA1r, port, 0), rv)

#define READ_GT64r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT64r, port, 0), rvp)
#define WRITE_GT64r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT64r, port, 0), rv)

#define READ_GT127r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT127r, port, 0), rvp)
#define WRITE_GT127r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT127r, port, 0), rv)

#define READ_GT255r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT255r, port, 0), rvp)
#define WRITE_GT255r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT255r, port, 0), rv)

#define READ_GT511r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT511r, port, 0), rvp)
#define WRITE_GT511r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT511r, port, 0), rv)

#define READ_GT1023r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT1023r, port, 0), rvp)
#define WRITE_GT1023r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT1023r, port, 0), rv)

#define READ_GT1518r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT1518r, port, 0), rvp)
#define WRITE_GT1518r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT1518r, port, 0), rv)

#define READ_GT2047r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT2047r, port, 0), rvp)
#define WRITE_GT2047r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT2047r, port, 0), rv)

#define READ_GT4095r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT4095r, port, 0), rvp)
#define WRITE_GT4095r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT4095r, port, 0), rv)

#define READ_GT9216r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GT9216r, port, 0), rvp)
#define WRITE_GT9216r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GT9216r, port, 0), rv)

#define READ_GTABRTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTABRTr, port, 0), rvp)
#define WRITE_GTABRTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTABRTr, port, 0), rv)

#define READ_GTAGEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTAGEr, port, 0), rvp)
#define WRITE_GTAGEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTAGEr, port, 0), rv)

#define READ_GTBCAr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTBCAr, port, 0), rvp)
#define WRITE_GTBCAr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTBCAr, port, 0), rv)

#define READ_GTBYTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTBYTr, port, 0), rvp)
#define WRITE_GTBYTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTBYTr, port, 0), rv)

#define READ_GTCEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTCEr, port, 0), rvp)
#define WRITE_GTCEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTCEr, port, 0), rv)

#define READ_GTCFIDRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTCFIDRr, port, 0), rvp)
#define WRITE_GTCFIDRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTCFIDRr, port, 0), rv)

#define READ_GTDFRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTDFRr, port, 0), rvp)
#define WRITE_GTDFRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTDFRr, port, 0), rv)

#define READ_GTEDFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTEDFr, port, 0), rvp)
#define WRITE_GTEDFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTEDFr, port, 0), rv)

#define READ_GTFCSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTFCSr, port, 0), rvp)
#define WRITE_GTFCSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTFCSr, port, 0), rv)

#define READ_GTFRGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTFRGr, port, 0), rvp)
#define WRITE_GTFRGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTFRGr, port, 0), rv)

#define READ_GTH_CAR1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_CAR1r, port, 0), rvp)
#define WRITE_GTH_CAR1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_CAR1r, port, 0), rv)

#define READ_GTH_CAR2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_CAR2r, port, 0), rvp)
#define WRITE_GTH_CAR2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_CAR2r, port, 0), rv)

#define READ_GTH_ESA0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_ESA0r, port, 0), rvp)
#define WRITE_GTH_ESA0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_ESA0r, port, 0), rv)

#define READ_GTH_ESA1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_ESA1r, port, 0), rvp)
#define WRITE_GTH_ESA1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_ESA1r, port, 0), rv)

#define READ_GTH_ESA2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_ESA2r, port, 0), rvp)
#define WRITE_GTH_ESA2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_ESA2r, port, 0), rv)

#define READ_GTH_FE_CLRTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_FE_CLRTr, port, 0), rvp)
#define WRITE_GTH_FE_CLRTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_FE_CLRTr, port, 0), rv)

#define READ_GTH_FE_IPGRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_FE_IPGRr, port, 0), rvp)
#define WRITE_GTH_FE_IPGRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_FE_IPGRr, port, 0), rv)

#define READ_GTH_FE_IPGTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_FE_IPGTr, port, 0), rvp)
#define WRITE_GTH_FE_IPGTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_FE_IPGTr, port, 0), rv)

#define READ_GTH_FE_MAC1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_FE_MAC1r, port, 0), rvp)
#define WRITE_GTH_FE_MAC1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_FE_MAC1r, port, 0), rv)

#define READ_GTH_FE_MAC2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_FE_MAC2r, port, 0), rvp)
#define WRITE_GTH_FE_MAC2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_FE_MAC2r, port, 0), rv)

#define READ_GTH_FE_MAXFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_FE_MAXFr, port, 0), rvp)
#define WRITE_GTH_FE_MAXFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_FE_MAXFr, port, 0), rv)

#define READ_GTH_FE_SUPPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_FE_SUPPr, port, 0), rvp)
#define WRITE_GTH_FE_SUPPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_FE_SUPPr, port, 0), rv)

#define READ_GTH_FE_TESTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_FE_TESTr, port, 0), rvp)
#define WRITE_GTH_FE_TESTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_FE_TESTr, port, 0), rv)

#define READ_GTH_IMBPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_IMBPr, port, 0), rvp)
#define WRITE_GTH_IMBPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_IMBPr, port, 0), rv)

#define READ_GTH_IMRPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_IMRPr, port, 0), rvp)
#define WRITE_GTH_IMRPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_IMRPr, port, 0), rv)

#define READ_GTH_RALNr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RALNr, port, 0), rvp)
#define WRITE_GTH_RALNr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RALNr, port, 0), rv)

#define READ_GTH_RBCAr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RBCAr, port, 0), rvp)
#define WRITE_GTH_RBCAr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RBCAr, port, 0), rv)

#define READ_GTH_RBYTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RBYTr, port, 0), rvp)
#define WRITE_GTH_RBYTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RBYTr, port, 0), rv)

#define READ_GTH_RCDEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RCDEr, port, 0), rvp)
#define WRITE_GTH_RCDEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RCDEr, port, 0), rv)

#define READ_GTH_RDISCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RDISCr, port, 0), rvp)
#define WRITE_GTH_RDISCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RDISCr, port, 0), rv)

#define READ_GTH_RFCRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RFCRr, port, 0), rvp)
#define WRITE_GTH_RFCRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RFCRr, port, 0), rv)

#define READ_GTH_RFCSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RFCSr, port, 0), rvp)
#define WRITE_GTH_RFCSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RFCSr, port, 0), rv)

#define READ_GTH_RFLRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RFLRr, port, 0), rvp)
#define WRITE_GTH_RFLRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RFLRr, port, 0), rv)

#define READ_GTH_RFRGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RFRGr, port, 0), rvp)
#define WRITE_GTH_RFRGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RFRGr, port, 0), rv)

#define READ_GTH_RIMDRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RIMDRr, port, 0), rvp)
#define WRITE_GTH_RIMDRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RIMDRr, port, 0), rv)

#define READ_GTH_RIPCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RIPCr, port, 0), rvp)
#define WRITE_GTH_RIPCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RIPCr, port, 0), rv)

#define READ_GTH_RIPCHKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RIPCHKr, port, 0), rvp)
#define WRITE_GTH_RIPCHKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RIPCHKr, port, 0), rv)

#define READ_GTH_RIPDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RIPDr, port, 0), rvp)
#define WRITE_GTH_RIPDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RIPDr, port, 0), rv)

#define READ_GTH_RJBRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RJBRr, port, 0), rvp)
#define WRITE_GTH_RJBRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RJBRr, port, 0), rv)

#define READ_GTH_RMCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RMCr, port, 0), rvp)
#define WRITE_GTH_RMCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RMCr, port, 0), rv)

#define READ_GTH_RMCAr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RMCAr, port, 0), rvp)
#define WRITE_GTH_RMCAr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RMCAr, port, 0), rv)

#define READ_GTH_ROVRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_ROVRr, port, 0), rvp)
#define WRITE_GTH_ROVRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_ROVRr, port, 0), rv)

#define READ_GTH_RPKTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RPKTr, port, 0), rvp)
#define WRITE_GTH_RPKTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RPKTr, port, 0), rv)

#define READ_GTH_RUCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RUCr, port, 0), rvp)
#define WRITE_GTH_RUCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RUCr, port, 0), rv)

#define READ_GTH_RUNDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RUNDr, port, 0), rvp)
#define WRITE_GTH_RUNDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RUNDr, port, 0), rv)

#define READ_GTH_RXCFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RXCFr, port, 0), rvp)
#define WRITE_GTH_RXCFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RXCFr, port, 0), rv)

#define READ_GTH_RXPFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RXPFr, port, 0), rvp)
#define WRITE_GTH_RXPFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RXPFr, port, 0), rv)

#define READ_GTH_RXUOr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_RXUOr, port, 0), rvp)
#define WRITE_GTH_RXUOr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_RXUOr, port, 0), rv)

#define READ_GTH_TABRTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TABRTr, port, 0), rvp)
#define WRITE_GTH_TABRTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TABRTr, port, 0), rv)

#define READ_GTH_TAGEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TAGEr, port, 0), rvp)
#define WRITE_GTH_TAGEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TAGEr, port, 0), rv)

#define READ_GTH_TBCAr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TBCAr, port, 0), rvp)
#define WRITE_GTH_TBCAr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TBCAr, port, 0), rv)

#define READ_GTH_TBYTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TBYTr, port, 0), rvp)
#define WRITE_GTH_TBYTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TBYTr, port, 0), rv)

#define READ_GTH_TCFIDRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TCFIDRr, port, 0), rvp)
#define WRITE_GTH_TCFIDRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TCFIDRr, port, 0), rv)

#define READ_GTH_TDFRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TDFRr, port, 0), rvp)
#define WRITE_GTH_TDFRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TDFRr, port, 0), rv)

#define READ_GTH_TEDFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TEDFr, port, 0), rvp)
#define WRITE_GTH_TEDFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TEDFr, port, 0), rv)

#define READ_GTH_TFCSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TFCSr, port, 0), rvp)
#define WRITE_GTH_TFCSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TFCSr, port, 0), rv)

#define READ_GTH_TFRGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TFRGr, port, 0), rvp)
#define WRITE_GTH_TFRGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TFRGr, port, 0), rv)

#define READ_GTH_TIMDRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TIMDRr, port, 0), rvp)
#define WRITE_GTH_TIMDRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TIMDRr, port, 0), rv)

#define READ_GTH_TIMTLDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TIMTLDr, port, 0), rvp)
#define WRITE_GTH_TIMTLDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TIMTLDr, port, 0), rv)

#define READ_GTH_TIPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TIPr, port, 0), rvp)
#define WRITE_GTH_TIPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TIPr, port, 0), rv)

#define READ_GTH_TIPDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TIPDr, port, 0), rvp)
#define WRITE_GTH_TIPDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TIPDr, port, 0), rv)

#define READ_GTH_TIPXr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TIPXr, port, 0), rvp)
#define WRITE_GTH_TIPXr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TIPXr, port, 0), rv)

#define READ_GTH_TJBRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TJBRr, port, 0), rvp)
#define WRITE_GTH_TJBRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TJBRr, port, 0), rv)

#define READ_GTH_TLCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TLCLr, port, 0), rvp)
#define WRITE_GTH_TLCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TLCLr, port, 0), rv)

#define READ_GTH_TMCAr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TMCAr, port, 0), rvp)
#define WRITE_GTH_TMCAr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TMCAr, port, 0), rv)

#define READ_GTH_TMCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TMCLr, port, 0), rvp)
#define WRITE_GTH_TMCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TMCLr, port, 0), rv)

#define READ_GTH_TNCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TNCLr, port, 0), rvp)
#define WRITE_GTH_TNCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TNCLr, port, 0), rv)

#define READ_GTH_TOVRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TOVRr, port, 0), rvp)
#define WRITE_GTH_TOVRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TOVRr, port, 0), rv)

#define READ_GTH_TPKTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TPKTr, port, 0), rvp)
#define WRITE_GTH_TPKTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TPKTr, port, 0), rv)

#define READ_GTH_TR64r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TR64r, port, 0), rvp)
#define WRITE_GTH_TR64r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TR64r, port, 0), rv)

#define READ_GTH_TR127r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TR127r, port, 0), rvp)
#define WRITE_GTH_TR127r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TR127r, port, 0), rv)

#define READ_GTH_TR255r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TR255r, port, 0), rvp)
#define WRITE_GTH_TR255r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TR255r, port, 0), rv)

#define READ_GTH_TR511r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TR511r, port, 0), rvp)
#define WRITE_GTH_TR511r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TR511r, port, 0), rv)

#define READ_GTH_TR1023r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TR1023r, port, 0), rvp)
#define WRITE_GTH_TR1023r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TR1023r, port, 0), rv)

#define READ_GTH_TRMAXr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TRMAXr, port, 0), rvp)
#define WRITE_GTH_TRMAXr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TRMAXr, port, 0), rv)

#define READ_GTH_TRMGVr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TRMGVr, port, 0), rvp)
#define WRITE_GTH_TRMGVr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TRMGVr, port, 0), rv)

#define READ_GTH_TSCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TSCLr, port, 0), rvp)
#define WRITE_GTH_TSCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TSCLr, port, 0), rv)

#define READ_GTH_TVLANr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TVLANr, port, 0), rvp)
#define WRITE_GTH_TVLANr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TVLANr, port, 0), rv)

#define READ_GTH_TXCFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TXCFr, port, 0), rvp)
#define WRITE_GTH_TXCFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TXCFr, port, 0), rv)

#define READ_GTH_TXCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TXCLr, port, 0), rvp)
#define WRITE_GTH_TXCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TXCLr, port, 0), rv)

#define READ_GTH_TXPFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTH_TXPFr, port, 0), rvp)
#define WRITE_GTH_TXPFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTH_TXPFr, port, 0), rv)

#define READ_GTIMDRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTIMDRr, port, 0), rvp)
#define WRITE_GTIMDRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTIMDRr, port, 0), rv)

#define READ_GTIMTLDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTIMTLDr, port, 0), rvp)
#define WRITE_GTIMTLDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTIMTLDr, port, 0), rv)

#define READ_GTIPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTIPr, port, 0), rvp)
#define WRITE_GTIPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTIPr, port, 0), rv)

#define READ_GTIPAGEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTIPAGEr, port, 0), rvp)
#define WRITE_GTIPAGEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTIPAGEr, port, 0), rv)

#define READ_GTIPDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTIPDr, port, 0), rvp)
#define WRITE_GTIPDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTIPDr, port, 0), rv)

#define READ_GTIPXr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTIPXr, port, 0), rvp)
#define WRITE_GTIPXr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTIPXr, port, 0), rv)

#define READ_GTJBRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTJBRr, port, 0), rvp)
#define WRITE_GTJBRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTJBRr, port, 0), rv)

#define READ_GTLCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTLCLr, port, 0), rvp)
#define WRITE_GTLCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTLCLr, port, 0), rv)

#define READ_GTMCAr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTMCAr, port, 0), rvp)
#define WRITE_GTMCAr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTMCAr, port, 0), rv)

#define READ_GTMCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTMCLr, port, 0), rvp)
#define WRITE_GTMCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTMCLr, port, 0), rv)

#define READ_GTMGVr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTMGVr, port, 0), rvp)
#define WRITE_GTMGVr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTMGVr, port, 0), rv)

#define READ_GTMRPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTMRPr, port, 0), rvp)
#define WRITE_GTMRPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTMRPr, port, 0), rv)

#define READ_GTNCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTNCLr, port, 0), rvp)
#define WRITE_GTNCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTNCLr, port, 0), rv)

#define READ_GTOVRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTOVRr, port, 0), rvp)
#define WRITE_GTOVRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTOVRr, port, 0), rv)

#define READ_GTPKTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTPKTr, port, 0), rvp)
#define WRITE_GTPKTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTPKTr, port, 0), rv)

#define READ_GTPOKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTPOKr, port, 0), rvp)
#define WRITE_GTPOKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTPOKr, port, 0), rv)

#define READ_GTPRGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTPRGr, port, 0), rvp)
#define WRITE_GTPRGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTPRGr, port, 0), rv)

#define READ_GTR64r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTR64r, port, 0), rvp)
#define WRITE_GTR64r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTR64r, port, 0), rv)

#define READ_GTR127r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTR127r, port, 0), rvp)
#define WRITE_GTR127r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTR127r, port, 0), rv)

#define READ_GTR255r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTR255r, port, 0), rvp)
#define WRITE_GTR255r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTR255r, port, 0), rv)

#define READ_GTR511r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTR511r, port, 0), rvp)
#define WRITE_GTR511r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTR511r, port, 0), rv)

#define READ_GTR1023r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTR1023r, port, 0), rvp)
#define WRITE_GTR1023r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTR1023r, port, 0), rv)

#define READ_GTR1518r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTR1518r, port, 0), rvp)
#define WRITE_GTR1518r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTR1518r, port, 0), rv)

#define READ_GTR2047r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTR2047r, port, 0), rvp)
#define WRITE_GTR2047r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTR2047r, port, 0), rv)

#define READ_GTR4095r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTR4095r, port, 0), rvp)
#define WRITE_GTR4095r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTR4095r, port, 0), rv)

#define READ_GTR9216r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTR9216r, port, 0), rvp)
#define WRITE_GTR9216r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTR9216r, port, 0), rv)

#define READ_GTRMAXr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTRMAXr, port, 0), rvp)
#define WRITE_GTRMAXr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTRMAXr, port, 0), rv)

#define READ_GTRMGVr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTRMGVr, port, 0), rvp)
#define WRITE_GTRMGVr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTRMGVr, port, 0), rv)

#define READ_GTSCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTSCLr, port, 0), rvp)
#define WRITE_GTSCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTSCLr, port, 0), rv)

#define READ_GTUCr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTUCr, port, 0), rvp)
#define WRITE_GTUCr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTUCr, port, 0), rv)

#define READ_GTVLANr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTVLANr, port, 0), rvp)
#define WRITE_GTVLANr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTVLANr, port, 0), rv)

#define READ_GTXCFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTXCFr, port, 0), rvp)
#define WRITE_GTXCFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTXCFr, port, 0), rv)

#define READ_GTXCLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTXCLr, port, 0), rvp)
#define WRITE_GTXCLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTXCLr, port, 0), rv)

#define READ_GTXPFr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTXPFr, port, 0), rvp)
#define WRITE_GTXPFr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTXPFr, port, 0), rv)

#define READ_GTXPPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GTXPPr, port, 0), rvp)
#define WRITE_GTXPPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GTXPPr, port, 0), rv)

#define READ_GXPORT_LAG_FAILOVER_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GXPORT_LAG_FAILOVER_CONFIGr, port, 0), rvp)
#define WRITE_GXPORT_LAG_FAILOVER_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GXPORT_LAG_FAILOVER_CONFIGr, port, 0), rv)

#define READ_GXPORT_LAG_FAILOVER_STATUSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, GXPORT_LAG_FAILOVER_STATUSr, port, 0), rvp)
#define WRITE_GXPORT_LAG_FAILOVER_STATUSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, GXPORT_LAG_FAILOVER_STATUSr, port, 0), rv)

#define READ_HASH_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HASH_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_HASH_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HASH_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_HASH_OUTPUTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HASH_OUTPUTr, REG_PORT_ANY, 0), rvp)
#define WRITE_HASH_OUTPUTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HASH_OUTPUTr, REG_PORT_ANY, 0), rv)

#define READ_HG0_INGPKTCELLUSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HG0_INGPKTCELLUSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_HG0_INGPKTCELLUSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HG0_INGPKTCELLUSEr, REG_PORT_ANY, 0), rv)

#define READ_HG12_INGPKTCELLUSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HG12_INGPKTCELLUSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_HG12_INGPKTCELLUSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HG12_INGPKTCELLUSEr, REG_PORT_ANY, 0), rv)

#define READ_HGOPT0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HGOPT0r, REG_PORT_ANY, 0), rvp)
#define WRITE_HGOPT0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HGOPT0r, REG_PORT_ANY, 0), rv)

#define READ_HGOPT1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HGOPT1r, REG_PORT_ANY, 0), rvp)
#define WRITE_HGOPT1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HGOPT1r, REG_PORT_ANY, 0), rv)

#define READ_HG_BP_CFGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HG_BP_CFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_HG_BP_CFGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HG_BP_CFGr, REG_PORT_ANY, 0), rv)

#define READ_HG_BP_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HG_BP_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_HG_BP_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HG_BP_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_HG_LOOKUP_DESTINATIONr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HG_LOOKUP_DESTINATIONr, REG_PORT_ANY, 0), rvp)
#define WRITE_HG_LOOKUP_DESTINATIONr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HG_LOOKUP_DESTINATIONr, REG_PORT_ANY, 0), rv)

#define READ_HG_TRUNK_BITMAPr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HG_TRUNK_BITMAPr, REG_PORT_ANY, idx), rvp)
#define WRITE_HG_TRUNK_BITMAPr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HG_TRUNK_BITMAPr, REG_PORT_ANY, idx), rv)

#define READ_HG_TRUNK_FAILOVER_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HG_TRUNK_FAILOVER_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_HG_TRUNK_FAILOVER_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HG_TRUNK_FAILOVER_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_HG_TRUNK_GROUPr(unit, idx, rvp) \
	soc_reg_read(unit, HG_TRUNK_GROUPr, soc_reg_addr(unit, HG_TRUNK_GROUPr, REG_PORT_ANY, idx), rvp)
#define WRITE_HG_TRUNK_GROUPr(unit, idx, rv) \
	soc_reg_write(unit, HG_TRUNK_GROUPr, soc_reg_addr(unit, HG_TRUNK_GROUPr, REG_PORT_ANY, idx), rv)

#define READ_HG_TRUNK_GROUP_HIr(unit, idx, rvp) \
	soc_reg_read(unit, HG_TRUNK_GROUP_HIr, soc_reg_addr(unit, HG_TRUNK_GROUP_HIr, REG_PORT_ANY, idx), rvp)
#define WRITE_HG_TRUNK_GROUP_HIr(unit, idx, rv) \
	soc_reg_write(unit, HG_TRUNK_GROUP_HIr, soc_reg_addr(unit, HG_TRUNK_GROUP_HIr, REG_PORT_ANY, idx), rv)

#define READ_HIGHWATERMARKERr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HIGHWATERMARKERr, port, 0), rvp)
#define WRITE_HIGHWATERMARKERr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HIGHWATERMARKERr, port, 0), rv)

#define READ_HIGIG_BITMAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HIGIG_BITMAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_HIGIG_BITMAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HIGIG_BITMAPr, REG_PORT_ANY, 0), rv)

#define READ_HIGIG_SIMPLEX_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HIGIG_SIMPLEX_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_HIGIG_SIMPLEX_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HIGIG_SIMPLEX_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_HIGIG_TRUNK_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HIGIG_TRUNK_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_HIGIG_TRUNK_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HIGIG_TRUNK_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_HIGIG_TRUNK_GROUPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HIGIG_TRUNK_GROUPr, REG_PORT_ANY, 0), rvp)
#define WRITE_HIGIG_TRUNK_GROUPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HIGIG_TRUNK_GROUPr, REG_PORT_ANY, 0), rv)

#define READ_HIG_MH_CHKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HIG_MH_CHKr, REG_PORT_ANY, 0), rvp)
#define WRITE_HIG_MH_CHKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HIG_MH_CHKr, REG_PORT_ANY, 0), rv)

#define READ_HOLBLOCKINGMARKERr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLBLOCKINGMARKERr, port, 0), rvp)
#define WRITE_HOLBLOCKINGMARKERr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLBLOCKINGMARKERr, port, 0), rv)

#define READ_HOLCELLRESETLIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLCELLRESETLIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLCELLRESETLIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLCELLRESETLIMITr, REG_PORT_ANY, 0), rv)

#define READ_HOLCOSCELLMAXLIMITr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLCOSCELLMAXLIMITr, port, idx), rvp)
#define WRITE_HOLCOSCELLMAXLIMITr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLCOSCELLMAXLIMITr, port, idx), rv)

#define READ_HOLCOSCELLSETLIMITr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLCOSCELLSETLIMITr, port, idx), rvp)
#define WRITE_HOLCOSCELLSETLIMITr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLCOSCELLSETLIMITr, port, idx), rv)

#define READ_HOLCOSMINXQCNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLCOSMINXQCNTr, port, idx), rvp)
#define WRITE_HOLCOSMINXQCNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLCOSMINXQCNTr, port, idx), rv)

#define READ_HOLCOSPKTRESETLIMITr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLCOSPKTRESETLIMITr, port, idx), rvp)
#define WRITE_HOLCOSPKTRESETLIMITr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLCOSPKTRESETLIMITr, port, idx), rv)

#define READ_HOLCOSPKTSETLIMITr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLCOSPKTSETLIMITr, port, idx), rvp)
#define WRITE_HOLCOSPKTSETLIMITr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLCOSPKTSETLIMITr, port, idx), rv)

#define READ_HOLCOSSTATUSr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLCOSSTATUSr, REG_PORT_ANY, idx), rvp)
#define WRITE_HOLCOSSTATUSr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLCOSSTATUSr, REG_PORT_ANY, idx), rv)

#define READ_HOLCOSSTATUS_HIr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLCOSSTATUS_HIr, REG_PORT_ANY, idx), rvp)
#define WRITE_HOLCOSSTATUS_HIr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLCOSSTATUS_HIr, REG_PORT_ANY, idx), rv)

#define READ_HOLDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLDr, port, 0), rvp)
#define WRITE_HOLDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLDr, port, 0), rv)

#define READ_HOLD12DROPCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD12DROPCOUNTr, port, 0), rvp)
#define WRITE_HOLD12DROPCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD12DROPCOUNTr, port, 0), rv)

#define READ_HOLDROP_PKT_CNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLDROP_PKT_CNTr, port, idx), rvp)
#define WRITE_HOLDROP_PKT_CNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLDROP_PKT_CNTr, port, idx), rv)

#define READ_HOLD_COS0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS0r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS0r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS1r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS1r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS2r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS2r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS3r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS3r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS4r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS4r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS5r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS5r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS6r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS6r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS6r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS6r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS7r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS7r, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS7r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS7r, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS0_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS0_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS0_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS0_Xr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS0_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS0_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS0_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS0_Yr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS1_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS1_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS1_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS1_Xr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS1_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS1_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS1_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS1_Yr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS2_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS2_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS2_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS2_Xr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS2_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS2_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS2_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS2_Yr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS3_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS3_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS3_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS3_Xr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS3_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS3_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS3_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS3_Yr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS4_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS4_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS4_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS4_Xr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS4_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS4_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS4_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS4_Yr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS5_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS5_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS5_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS5_Xr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS5_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS5_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS5_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS5_Yr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS6_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS6_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS6_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS6_Xr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS6_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS6_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS6_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS6_Yr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS7_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS7_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS7_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS7_Xr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS7_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS7_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS7_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS7_Yr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS_PORT_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS_PORT_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS_PORT_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS_PORT_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS_QMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS_QMr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS_QMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS_QMr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS_QM_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS_QM_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS_QM_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS_QM_Xr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS_QM_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS_QM_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS_QM_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS_QM_Yr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS_SCr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS_SCr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS_SCr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS_SCr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS_SC_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS_SC_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS_SC_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS_SC_Xr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_COS_SC_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_COS_SC_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLD_COS_SC_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_COS_SC_Yr, REG_PORT_ANY, 0), rv)

#define READ_HOLD_Xr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_Xr, port, 0), rvp)
#define WRITE_HOLD_Xr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_Xr, port, 0), rv)

#define READ_HOLD_Yr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLD_Yr, port, 0), rvp)
#define WRITE_HOLD_Yr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLD_Yr, port, 0), rv)

#define READ_HOLPKTRESETLIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLPKTRESETLIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOLPKTRESETLIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLPKTRESETLIMITr, REG_PORT_ANY, 0), rv)

#define READ_HOLSTATUSr(unit, port, cos, rvp) \
	soc_reg_read(unit, HOLSTATUSr, soc_reg_addr(unit, HOLSTATUSr, port, cos), rvp)
#define WRITE_HOLSTATUSr(unit, port, cos, rv) \
	soc_reg_write(unit, HOLSTATUSr, soc_reg_addr(unit, HOLSTATUSr, port, cos), rv)

#define READ_HOLSTATUS_E2Er(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOLSTATUS_E2Er, port, 0), rvp)
#define WRITE_HOLSTATUS_E2Er(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOLSTATUS_E2Er, port, 0), rv)

#define READ_HOL_MIN_TIMEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOL_MIN_TIMEr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOL_MIN_TIMEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOL_MIN_TIMEr, REG_PORT_ANY, 0), rv)

#define READ_HOL_STATUS_UPDATE_TIMEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOL_STATUS_UPDATE_TIMEr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOL_STATUS_UPDATE_TIMEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOL_STATUS_UPDATE_TIMEr, REG_PORT_ANY, 0), rv)

#define READ_HOL_STAT_BMAPr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOL_STAT_BMAPr, REG_PORT_ANY, idx), rvp)
#define WRITE_HOL_STAT_BMAPr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOL_STAT_BMAPr, REG_PORT_ANY, idx), rv)

#define READ_HOL_STAT_BMAP_HIr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOL_STAT_BMAP_HIr, REG_PORT_ANY, idx), rvp)
#define WRITE_HOL_STAT_BMAP_HIr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOL_STAT_BMAP_HIr, REG_PORT_ANY, idx), rv)

#define READ_HOL_STAT_CPUr(unit, rvp) \
	soc_reg_read(unit, HOL_STAT_CPUr, soc_reg_addr(unit, HOL_STAT_CPUr, REG_PORT_ANY, 0), rvp)
#define WRITE_HOL_STAT_CPUr(unit, rv) \
	soc_reg_write(unit, HOL_STAT_CPUr, soc_reg_addr(unit, HOL_STAT_CPUr, REG_PORT_ANY, 0), rv)

#define READ_HOL_STAT_PORTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HOL_STAT_PORTr, port, 0), rvp)
#define WRITE_HOL_STAT_PORTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HOL_STAT_PORTr, port, 0), rv)

#define READ_HSE_DTU_ATE_STS0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_ATE_STS0r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_ATE_STS0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_ATE_STS0r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_ATE_STS1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_ATE_STS1r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_ATE_STS1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_ATE_STS1r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_ATE_STS2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_ATE_STS2r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_ATE_STS2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_ATE_STS2r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_ATE_TMODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_ATE_TMODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_ATE_TMODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_ATE_TMODEr, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_ADR0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_ADR0r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_ADR0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_ADR0r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_ADR1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_ADR1r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_ADR1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_ADR1r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D0F_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0F_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D0F_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0F_0r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D0F_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0F_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D0F_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0F_1r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D0F_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0F_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D0F_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0F_2r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D0F_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0F_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D0F_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0F_3r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D0R_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0R_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D0R_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0R_0r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D0R_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0R_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D0R_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0R_1r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D0R_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0R_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D0R_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0R_2r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D0R_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0R_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D0R_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D0R_3r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D1F_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1F_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D1F_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1F_0r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D1F_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1F_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D1F_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1F_1r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D1F_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1F_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D1F_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1F_2r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D1F_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1F_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D1F_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1F_3r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D1R_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1R_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D1R_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1R_0r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D1R_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1R_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D1R_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1R_1r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D1R_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1R_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D1R_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1R_2r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_D1R_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1R_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_D1R_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_D1R_3r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_STS_DONEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_DONEr, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_STS_DONEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_DONEr, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_STS_ERR_ADRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_ADRr, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_STS_ERR_ADRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_ADRr, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_STS_ERR_DF_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DF_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_STS_ERR_DF_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DF_0r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_STS_ERR_DF_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DF_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_STS_ERR_DF_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DF_1r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_STS_ERR_DF_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DF_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_STS_ERR_DF_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DF_2r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_STS_ERR_DF_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DF_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_STS_ERR_DF_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DF_3r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_STS_ERR_DR_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DR_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_STS_ERR_DR_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DR_0r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_STS_ERR_DR_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DR_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_STS_ERR_DR_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DR_1r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_STS_ERR_DR_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DR_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_STS_ERR_DR_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DR_2r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_STS_ERR_DR_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DR_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_STS_ERR_DR_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_STS_ERR_DR_3r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_TMODE0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_TMODE0r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_TMODE0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_TMODE0r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_LTE_TMODE1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_LTE_TMODE1r, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_LTE_TMODE1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_LTE_TMODE1r, REG_PORT_ANY, 0), rv)

#define READ_HSE_DTU_MODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, HSE_DTU_MODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_HSE_DTU_MODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, HSE_DTU_MODEr, REG_PORT_ANY, 0), rv)

#define READ_HTLS_UPLINK_CONTROLr(unit, port, rvp) \
	soc_reg_read(unit, HTLS_UPLINK_CONTROLr, soc_reg_addr(unit, HTLS_UPLINK_CONTROLr, port, 0), rvp)
#define WRITE_HTLS_UPLINK_CONTROLr(unit, port, rv) \
	soc_reg_write(unit, HTLS_UPLINK_CONTROLr, soc_reg_addr(unit, HTLS_UPLINK_CONTROLr, port, 0), rv)

#define READ_HTLS_UPLINK_DAr(unit, port, rvp) \
	soc_reg_read(unit, HTLS_UPLINK_DAr, soc_reg_addr(unit, HTLS_UPLINK_DAr, port, 0), rvp)
#define WRITE_HTLS_UPLINK_DAr(unit, port, rv) \
	soc_reg_write(unit, HTLS_UPLINK_DAr, soc_reg_addr(unit, HTLS_UPLINK_DAr, port, 0), rv)

#define READ_HTLS_UPLINK_SAr(unit, port, rvp) \
	soc_reg_read(unit, HTLS_UPLINK_SAr, soc_reg_addr(unit, HTLS_UPLINK_SAr, port, 0), rvp)
#define WRITE_HTLS_UPLINK_SAr(unit, port, rv) \
	soc_reg_write(unit, HTLS_UPLINK_SAr, soc_reg_addr(unit, HTLS_UPLINK_SAr, port, 0), rv)

#define READ_HTLS_UPLINK_TUNNELr(unit, port, rvp) \
	soc_reg_read(unit, HTLS_UPLINK_TUNNELr, soc_reg_addr(unit, HTLS_UPLINK_TUNNELr, port, 0), rvp)
#define WRITE_HTLS_UPLINK_TUNNELr(unit, port, rv) \
	soc_reg_write(unit, HTLS_UPLINK_TUNNELr, soc_reg_addr(unit, HTLS_UPLINK_TUNNELr, port, 0), rv)

#define READ_HTLS_VC_LABELr(unit, port, rvp) \
	soc_reg_read(unit, HTLS_VC_LABELr, soc_reg_addr(unit, HTLS_VC_LABELr, port, 0), rvp)
#define WRITE_HTLS_VC_LABELr(unit, port, rv) \
	soc_reg_write(unit, HTLS_VC_LABELr, soc_reg_addr(unit, HTLS_VC_LABELr, port, 0), rv)

#define READ_IARB_LEARN_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IARB_LEARN_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_IARB_LEARN_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IARB_LEARN_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_IARB_TDM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IARB_TDM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_IARB_TDM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IARB_TDM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_IARB_TDM_MAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IARB_TDM_MAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_IARB_TDM_MAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IARB_TDM_MAPr, REG_PORT_ANY, 0), rv)

#define READ_IBCASTr(unit, port, rvp) \
	soc_reg_read(unit, IBCASTr, soc_reg_addr(unit, IBCASTr, port, 0), rvp)
#define WRITE_IBCASTr(unit, port, rv) \
	soc_reg_write(unit, IBCASTr, soc_reg_addr(unit, IBCASTr, port, 0), rv)

#define READ_IBCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg_read(unit, IBCAST_BLOCK_MASKr, soc_reg_addr(unit, IBCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_IBCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg_write(unit, IBCAST_BLOCK_MASKr, soc_reg_addr(unit, IBCAST_BLOCK_MASKr, port, 0), rv)

#define READ_IBCAST_BLOCK_MASK_64r(unit, port, rvp) \
	soc_reg_read(unit, IBCAST_BLOCK_MASK_64r, soc_reg_addr(unit, IBCAST_BLOCK_MASK_64r, port, 0), rvp)
#define WRITE_IBCAST_BLOCK_MASK_64r(unit, port, rv) \
	soc_reg_write(unit, IBCAST_BLOCK_MASK_64r, soc_reg_addr(unit, IBCAST_BLOCK_MASK_64r, port, 0), rv)

#define READ_IBCAST_BLOCK_MASK_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBCAST_BLOCK_MASK_HIr, port, 0), rvp)
#define WRITE_IBCAST_BLOCK_MASK_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBCAST_BLOCK_MASK_HIr, port, 0), rv)

#define READ_IBKP_DISCr(unit, port, rvp) \
	soc_reg_read(unit, IBKP_DISCr, soc_reg_addr(unit, IBKP_DISCr, port, 0), rvp)
#define WRITE_IBKP_DISCr(unit, port, rv) \
	soc_reg_write(unit, IBKP_DISCr, soc_reg_addr(unit, IBKP_DISCr, port, 0), rv)

#define READ_IBKP_WARNr(unit, port, rvp) \
	soc_reg_read(unit, IBKP_WARNr, soc_reg_addr(unit, IBKP_WARNr, port, 0), rvp)
#define WRITE_IBKP_WARNr(unit, port, rv) \
	soc_reg_write(unit, IBKP_WARNr, soc_reg_addr(unit, IBKP_WARNr, port, 0), rv)

#define READ_IBPBKPSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPBKPSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IBPBKPSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPBKPSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_IBPBKPSTATUS_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPBKPSTATUS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_IBPBKPSTATUS_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPBKPSTATUS_HIr, REG_PORT_ANY, 0), rv)

#define READ_IBPCELLCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPCELLCOUNTr, port, 0), rvp)
#define WRITE_IBPCELLCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPCELLCOUNTr, port, 0), rv)

#define READ_IBPCELLRESETLIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPCELLRESETLIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_IBPCELLRESETLIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPCELLRESETLIMITr, REG_PORT_ANY, 0), rv)

#define READ_IBPCELLSETLIMITr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPCELLSETLIMITr, port, 0), rvp)
#define WRITE_IBPCELLSETLIMITr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPCELLSETLIMITr, port, 0), rv)

#define READ_IBPCOSPKTCOUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPCOSPKTCOUNTr, port, idx), rvp)
#define WRITE_IBPCOSPKTCOUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPCOSPKTCOUNTr, port, idx), rv)

#define READ_IBPCOSPKTSETLIMITr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPCOSPKTSETLIMITr, port, idx), rvp)
#define WRITE_IBPCOSPKTSETLIMITr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPCOSPKTSETLIMITr, port, idx), rv)

#define READ_IBPCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPCOUNTr, port, 0), rvp)
#define WRITE_IBPCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPCOUNTr, port, 0), rv)

#define READ_IBPDISCARDSETLIMITr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPDISCARDSETLIMITr, port, 0), rvp)
#define WRITE_IBPDISCARDSETLIMITr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPDISCARDSETLIMITr, port, 0), rv)

#define READ_IBPDISCSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPDISCSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IBPDISCSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPDISCSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_IBPDISCSTATUS_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPDISCSTATUS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_IBPDISCSTATUS_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPDISCSTATUS_HIr, REG_PORT_ANY, 0), rv)

#define READ_IBPPKTCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPPKTCOUNTr, port, 0), rvp)
#define WRITE_IBPPKTCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPPKTCOUNTr, port, 0), rv)

#define READ_IBPPKTRESETLIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPPKTRESETLIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_IBPPKTRESETLIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPPKTRESETLIMITr, REG_PORT_ANY, 0), rv)

#define READ_IBPPKTSETLIMITr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBPPKTSETLIMITr, port, 0), rvp)
#define WRITE_IBPPKTSETLIMITr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBPPKTSETLIMITr, port, 0), rv)

#define READ_IBP_DROP_PKT_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBP_DROP_PKT_CNTr, port, 0), rvp)
#define WRITE_IBP_DROP_PKT_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBP_DROP_PKT_CNTr, port, 0), rv)

#define READ_IBP_MIN_TIMEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBP_MIN_TIMEr, REG_PORT_ANY, 0), rvp)
#define WRITE_IBP_MIN_TIMEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBP_MIN_TIMEr, REG_PORT_ANY, 0), rv)

#define READ_IBP_STATUS_UPDATE_TIMEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IBP_STATUS_UPDATE_TIMEr, REG_PORT_ANY, 0), rvp)
#define WRITE_IBP_STATUS_UPDATE_TIMEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IBP_STATUS_UPDATE_TIMEr, REG_PORT_ANY, 0), rv)

#define READ_ICBP_FULLr(unit, port, rvp) \
	soc_reg_read(unit, ICBP_FULLr, soc_reg_addr(unit, ICBP_FULLr, port, 0), rvp)
#define WRITE_ICBP_FULLr(unit, port, rv) \
	soc_reg_write(unit, ICBP_FULLr, soc_reg_addr(unit, ICBP_FULLr, port, 0), rv)

#define READ_ICONFIGr(unit, port, rvp) \
	soc_reg_read(unit, ICONFIGr, soc_reg_addr(unit, ICONFIGr, port, 0), rvp)
#define WRITE_ICONFIGr(unit, port, rv) \
	soc_reg_write(unit, ICONFIGr, soc_reg_addr(unit, ICONFIGr, port, 0), rv)

#define READ_ICONTROL_OPCODE_BITMAPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ICONTROL_OPCODE_BITMAPr, port, 0), rvp)
#define WRITE_ICONTROL_OPCODE_BITMAPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ICONTROL_OPCODE_BITMAPr, port, 0), rv)

#define READ_ICOS_MAP_SELr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ICOS_MAP_SELr, port, 0), rvp)
#define WRITE_ICOS_MAP_SELr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ICOS_MAP_SELr, port, 0), rv)

#define READ_ICOS_SELr(unit, port, rvp) \
	soc_reg_read(unit, ICOS_SELr, soc_reg_addr(unit, ICOS_SELr, port, 0), rvp)
#define WRITE_ICOS_SELr(unit, port, rv) \
	soc_reg_write(unit, ICOS_SELr, soc_reg_addr(unit, ICOS_SELr, port, 0), rv)

#define READ_ICOS_SEL_2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ICOS_SEL_2r, port, 0), rvp)
#define WRITE_ICOS_SEL_2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ICOS_SEL_2r, port, 0), rv)

#define READ_ICPU_CONTROLr(unit, port, rvp) \
	soc_reg_read(unit, ICPU_CONTROLr, soc_reg_addr(unit, ICPU_CONTROLr, port, 0), rvp)
#define WRITE_ICPU_CONTROLr(unit, port, rv) \
	soc_reg_write(unit, ICPU_CONTROLr, soc_reg_addr(unit, ICPU_CONTROLr, port, 0), rv)

#define READ_ICTRLr(unit, port, rvp) \
	soc_reg_read(unit, ICTRLr, soc_reg_addr(unit, ICTRLr, port, 0), rvp)
#define WRITE_ICTRLr(unit, port, rv) \
	soc_reg_write(unit, ICTRLr, soc_reg_addr(unit, ICTRLr, port, 0), rv)

#define READ_IDLF_TRUNK_BLOCK_MASKr(unit, port, rvp) \
	soc_reg_read(unit, IDLF_TRUNK_BLOCK_MASKr, soc_reg_addr(unit, IDLF_TRUNK_BLOCK_MASKr, port, 0), rvp)
#define WRITE_IDLF_TRUNK_BLOCK_MASKr(unit, port, rv) \
	soc_reg_write(unit, IDLF_TRUNK_BLOCK_MASKr, soc_reg_addr(unit, IDLF_TRUNK_BLOCK_MASKr, port, 0), rv)

#define READ_IE2E_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IE2E_CONTROLr, port, 0), rvp)
#define WRITE_IE2E_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IE2E_CONTROLr, port, 0), rv)

#define READ_IE2E_MAX_RATEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IE2E_MAX_RATEr, port, 0), rvp)
#define WRITE_IE2E_MAX_RATEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IE2E_MAX_RATEr, port, 0), rv)

#define READ_IEGRBLKr(unit, port, rvp) \
	soc_reg_read(unit, IEGRBLKr, soc_reg_addr(unit, IEGRBLKr, port, 0), rvp)
#define WRITE_IEGRBLKr(unit, port, rv) \
	soc_reg_write(unit, IEGRBLKr, soc_reg_addr(unit, IEGRBLKr, port, 0), rv)

#define READ_IEGR_DBGr(unit, port, rvp) \
	soc_reg_read(unit, IEGR_DBGr, soc_reg_addr(unit, IEGR_DBGr, port, 0), rvp)
#define WRITE_IEGR_DBGr(unit, port, rv) \
	soc_reg_write(unit, IEGR_DBGr, soc_reg_addr(unit, IEGR_DBGr, port, 0), rv)

#define READ_IEGR_ENABLEr(unit, port, rvp) \
	soc_reg_read(unit, IEGR_ENABLEr, soc_reg_addr(unit, IEGR_ENABLEr, port, 0), rvp)
#define WRITE_IEGR_ENABLEr(unit, port, rv) \
	soc_reg_write(unit, IEGR_ENABLEr, soc_reg_addr(unit, IEGR_ENABLEr, port, 0), rv)

#define READ_IEGR_PORTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IEGR_PORTr, port, 0), rvp)
#define WRITE_IEGR_PORTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IEGR_PORTr, port, 0), rv)

#define READ_IEGR_PORT_L3UC_MODSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IEGR_PORT_L3UC_MODSr, port, 0), rvp)
#define WRITE_IEGR_PORT_L3UC_MODSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IEGR_PORT_L3UC_MODSr, port, 0), rv)

#define READ_IEGR_SNGL_OUTr(unit, port, rvp) \
	soc_reg_read(unit, IEGR_SNGL_OUTr, soc_reg_addr(unit, IEGR_SNGL_OUTr, port, 0), rvp)
#define WRITE_IEGR_SNGL_OUTr(unit, port, rv) \
	soc_reg_write(unit, IEGR_SNGL_OUTr, soc_reg_addr(unit, IEGR_SNGL_OUTr, port, 0), rv)

#define READ_IEGR_SNGL_PKTr(unit, port, rvp) \
	soc_reg_read(unit, IEGR_SNGL_PKTr, soc_reg_addr(unit, IEGR_SNGL_PKTr, port, 0), rvp)
#define WRITE_IEGR_SNGL_PKTr(unit, port, rv) \
	soc_reg_write(unit, IEGR_SNGL_PKTr, soc_reg_addr(unit, IEGR_SNGL_PKTr, port, 0), rv)

#define READ_IEMIRROR_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IEMIRROR_CONTROLr, port, 0), rvp)
#define WRITE_IEMIRROR_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IEMIRROR_CONTROLr, port, 0), rv)

#define READ_IEMIRROR_CONTROL1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IEMIRROR_CONTROL1r, port, 0), rvp)
#define WRITE_IEMIRROR_CONTROL1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IEMIRROR_CONTROL1r, port, 0), rv)

#define READ_IEMIRROR_CONTROL1_64r(unit, port, rvp) \
	soc_reg_read(unit, IEMIRROR_CONTROL1_64r, soc_reg_addr(unit, IEMIRROR_CONTROL1_64r, port, 0), rvp)
#define WRITE_IEMIRROR_CONTROL1_64r(unit, port, rv) \
	soc_reg_write(unit, IEMIRROR_CONTROL1_64r, soc_reg_addr(unit, IEMIRROR_CONTROL1_64r, port, 0), rv)

#define READ_IEMIRROR_CONTROL_64r(unit, port, rvp) \
	soc_reg_read(unit, IEMIRROR_CONTROL_64r, soc_reg_addr(unit, IEMIRROR_CONTROL_64r, port, 0), rvp)
#define WRITE_IEMIRROR_CONTROL_64r(unit, port, rv) \
	soc_reg_write(unit, IEMIRROR_CONTROL_64r, soc_reg_addr(unit, IEMIRROR_CONTROL_64r, port, 0), rv)

#define READ_IEMIRROR_CONTROL_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IEMIRROR_CONTROL_HIr, port, 0), rvp)
#define WRITE_IEMIRROR_CONTROL_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IEMIRROR_CONTROL_HIr, port, 0), rv)

#define READ_IESMIF_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_IESMIF_CONTROL2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_CONTROL2r, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_CONTROL2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_CONTROL2r, REG_PORT_ANY, 0), rv)

#define READ_IESMIF_ECB_ECC_STATUS_DBEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_ECB_ECC_STATUS_DBEr, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_ECB_ECC_STATUS_DBEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_ECB_ECC_STATUS_DBEr, REG_PORT_ANY, 0), rv)

#define READ_IESMIF_ECB_ECC_STATUS_SBEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_ECB_ECC_STATUS_SBEr, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_ECB_ECC_STATUS_SBEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_ECB_ECC_STATUS_SBEr, REG_PORT_ANY, 0), rv)

#define READ_IESMIF_ECB_SBE_SYNDROME12r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_ECB_SBE_SYNDROME12r, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_ECB_SBE_SYNDROME12r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_ECB_SBE_SYNDROME12r, REG_PORT_ANY, 0), rv)

#define READ_IESMIF_INTR_CLEARr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_INTR_CLEARr, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_INTR_CLEARr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_INTR_CLEARr, REG_PORT_ANY, 0), rv)

#define READ_IESMIF_INTR_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_INTR_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_INTR_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_INTR_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_IESMIF_INTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_INTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IESMIF_STATUS2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_STATUS2r, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_STATUS2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_STATUS2r, REG_PORT_ANY, 0), rv)

#define READ_IESMIF_STATUS3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_STATUS3r, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_STATUS3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_STATUS3r, REG_PORT_ANY, 0), rv)

#define READ_IESMIF_STATUS4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_STATUS4r, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_STATUS4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_STATUS4r, REG_PORT_ANY, 0), rv)

#define READ_IESMIF_STATUS5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_STATUS5r, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_STATUS5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_STATUS5r, REG_PORT_ANY, 0), rv)

#define READ_IESMIF_STATUS6r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_STATUS6r, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_STATUS6r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_STATUS6r, REG_PORT_ANY, 0), rv)

#define READ_IESMIF_STATUS7r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IESMIF_STATUS7r, REG_PORT_ANY, 0), rvp)
#define WRITE_IESMIF_STATUS7r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IESMIF_STATUS7r, REG_PORT_ANY, 0), rv)

#define READ_IFP_POLICY_TABLE_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IFP_POLICY_TABLE_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_IFP_POLICY_TABLE_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IFP_POLICY_TABLE_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_IFP_POLICY_TABLE_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IFP_POLICY_TABLE_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IFP_POLICY_TABLE_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IFP_POLICY_TABLE_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IGMP_MLD_PKT_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IGMP_MLD_PKT_CONTROLr, port, 0), rvp)
#define WRITE_IGMP_MLD_PKT_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IGMP_MLD_PKT_CONTROLr, port, 0), rv)

#define READ_IGR_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IGR_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IGR_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IGR_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_IGR_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IGR_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IGR_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IGR_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_IGR_IPORTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IGR_IPORTr, port, 0), rvp)
#define WRITE_IGR_IPORTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IGR_IPORTr, port, 0), rv)

#define READ_IGR_PORTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IGR_PORTr, port, 0), rvp)
#define WRITE_IGR_PORTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IGR_PORTr, port, 0), rv)

#define READ_IGR_VLAN_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IGR_VLAN_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_IGR_VLAN_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IGR_VLAN_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_IHG_LOOKUPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHG_LOOKUPr, port, 0), rvp)
#define WRITE_IHG_LOOKUPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHG_LOOKUPr, port, 0), rv)

#define READ_IHIGIG_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHIGIG_CONTROLr, port, 0), rvp)
#define WRITE_IHIGIG_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHIGIG_CONTROLr, port, 0), rv)

#define READ_IHOLDr(unit, port, idx, rvp) \
	soc_reg_read(unit, IHOLDr, soc_reg_addr(unit, IHOLDr, port, idx), rvp)
#define WRITE_IHOLDr(unit, port, idx, rv) \
	soc_reg_write(unit, IHOLDr, soc_reg_addr(unit, IHOLDr, port, idx), rv)

#define READ_IHOLD0r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD0r, soc_reg_addr(unit, IHOLD0r, port, 0), rvp)
#define WRITE_IHOLD0r(unit, port, rv) \
	soc_reg_write(unit, IHOLD0r, soc_reg_addr(unit, IHOLD0r, port, 0), rv)

#define READ_IHOLD1r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD1r, soc_reg_addr(unit, IHOLD1r, port, 0), rvp)
#define WRITE_IHOLD1r(unit, port, rv) \
	soc_reg_write(unit, IHOLD1r, soc_reg_addr(unit, IHOLD1r, port, 0), rv)

#define READ_IHOLD2r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD2r, soc_reg_addr(unit, IHOLD2r, port, 0), rvp)
#define WRITE_IHOLD2r(unit, port, rv) \
	soc_reg_write(unit, IHOLD2r, soc_reg_addr(unit, IHOLD2r, port, 0), rv)

#define READ_IHOLD3r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD3r, soc_reg_addr(unit, IHOLD3r, port, 0), rvp)
#define WRITE_IHOLD3r(unit, port, rv) \
	soc_reg_write(unit, IHOLD3r, soc_reg_addr(unit, IHOLD3r, port, 0), rv)

#define READ_IHOLD4r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD4r, soc_reg_addr(unit, IHOLD4r, port, 0), rvp)
#define WRITE_IHOLD4r(unit, port, rv) \
	soc_reg_write(unit, IHOLD4r, soc_reg_addr(unit, IHOLD4r, port, 0), rv)

#define READ_IHOLD5r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD5r, soc_reg_addr(unit, IHOLD5r, port, 0), rvp)
#define WRITE_IHOLD5r(unit, port, rv) \
	soc_reg_write(unit, IHOLD5r, soc_reg_addr(unit, IHOLD5r, port, 0), rv)

#define READ_IHOLD6r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD6r, soc_reg_addr(unit, IHOLD6r, port, 0), rvp)
#define WRITE_IHOLD6r(unit, port, rv) \
	soc_reg_write(unit, IHOLD6r, soc_reg_addr(unit, IHOLD6r, port, 0), rv)

#define READ_IHOLD7r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD7r, soc_reg_addr(unit, IHOLD7r, port, 0), rvp)
#define WRITE_IHOLD7r(unit, port, rv) \
	soc_reg_write(unit, IHOLD7r, soc_reg_addr(unit, IHOLD7r, port, 0), rv)

#define READ_IHOLD8r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD8r, soc_reg_addr(unit, IHOLD8r, port, 0), rvp)
#define WRITE_IHOLD8r(unit, port, rv) \
	soc_reg_write(unit, IHOLD8r, soc_reg_addr(unit, IHOLD8r, port, 0), rv)

#define READ_IHOLD9r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD9r, soc_reg_addr(unit, IHOLD9r, port, 0), rvp)
#define WRITE_IHOLD9r(unit, port, rv) \
	soc_reg_write(unit, IHOLD9r, soc_reg_addr(unit, IHOLD9r, port, 0), rv)

#define READ_IHOLD10r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD10r, soc_reg_addr(unit, IHOLD10r, port, 0), rvp)
#define WRITE_IHOLD10r(unit, port, rv) \
	soc_reg_write(unit, IHOLD10r, soc_reg_addr(unit, IHOLD10r, port, 0), rv)

#define READ_IHOLD11r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD11r, soc_reg_addr(unit, IHOLD11r, port, 0), rvp)
#define WRITE_IHOLD11r(unit, port, rv) \
	soc_reg_write(unit, IHOLD11r, soc_reg_addr(unit, IHOLD11r, port, 0), rv)

#define READ_IHOLD12r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD12r, soc_reg_addr(unit, IHOLD12r, port, 0), rvp)
#define WRITE_IHOLD12r(unit, port, rv) \
	soc_reg_write(unit, IHOLD12r, soc_reg_addr(unit, IHOLD12r, port, 0), rv)

#define READ_IHOLD13r(unit, port, rvp) \
	soc_reg_read(unit, IHOLD13r, soc_reg_addr(unit, IHOLD13r, port, 0), rvp)
#define WRITE_IHOLD13r(unit, port, rv) \
	soc_reg_write(unit, IHOLD13r, soc_reg_addr(unit, IHOLD13r, port, 0), rv)

#define READ_IHOLSTATUSr(unit, port, cos, rvp) \
	soc_reg_read(unit, IHOLSTATUSr, soc_reg_addr(unit, IHOLSTATUSr, port, cos), rvp)
#define WRITE_IHOLSTATUSr(unit, port, cos, rv) \
	soc_reg_write(unit, IHOLSTATUSr, soc_reg_addr(unit, IHOLSTATUSr, port, cos), rv)

#define READ_IHOL_D0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHOL_D0r, port, 0), rvp)
#define WRITE_IHOL_D0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHOL_D0r, port, 0), rv)

#define READ_IHOL_D1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHOL_D1r, port, 0), rvp)
#define WRITE_IHOL_D1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHOL_D1r, port, 0), rv)

#define READ_IHOL_D2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHOL_D2r, port, 0), rvp)
#define WRITE_IHOL_D2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHOL_D2r, port, 0), rv)

#define READ_IHOL_D3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHOL_D3r, port, 0), rvp)
#define WRITE_IHOL_D3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHOL_D3r, port, 0), rv)

#define READ_IHOL_MH0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHOL_MH0r, port, 0), rvp)
#define WRITE_IHOL_MH0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHOL_MH0r, port, 0), rv)

#define READ_IHOL_MH1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHOL_MH1r, port, 0), rvp)
#define WRITE_IHOL_MH1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHOL_MH1r, port, 0), rv)

#define READ_IHOL_MH2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHOL_MH2r, port, 0), rvp)
#define WRITE_IHOL_MH2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHOL_MH2r, port, 0), rv)

#define READ_IHOL_RX_DA_LSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHOL_RX_DA_LSr, port, 0), rvp)
#define WRITE_IHOL_RX_DA_LSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHOL_RX_DA_LSr, port, 0), rv)

#define READ_IHOL_RX_DA_MSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHOL_RX_DA_MSr, port, 0), rvp)
#define WRITE_IHOL_RX_DA_MSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHOL_RX_DA_MSr, port, 0), rv)

#define READ_IHOL_RX_LENGTH_TYPEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHOL_RX_LENGTH_TYPEr, port, 0), rvp)
#define WRITE_IHOL_RX_LENGTH_TYPEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHOL_RX_LENGTH_TYPEr, port, 0), rv)

#define READ_IHOL_RX_OPCODEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IHOL_RX_OPCODEr, port, 0), rvp)
#define WRITE_IHOL_RX_OPCODEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IHOL_RX_OPCODEr, port, 0), rv)

#define READ_IIBP_D0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IIBP_D0r, port, 0), rvp)
#define WRITE_IIBP_D0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IIBP_D0r, port, 0), rv)

#define READ_IIBP_D1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IIBP_D1r, port, 0), rvp)
#define WRITE_IIBP_D1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IIBP_D1r, port, 0), rv)

#define READ_IIBP_D2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IIBP_D2r, port, 0), rvp)
#define WRITE_IIBP_D2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IIBP_D2r, port, 0), rv)

#define READ_IIBP_D3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IIBP_D3r, port, 0), rvp)
#define WRITE_IIBP_D3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IIBP_D3r, port, 0), rv)

#define READ_IIBP_MH0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IIBP_MH0r, port, 0), rvp)
#define WRITE_IIBP_MH0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IIBP_MH0r, port, 0), rv)

#define READ_IIBP_MH1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IIBP_MH1r, port, 0), rvp)
#define WRITE_IIBP_MH1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IIBP_MH1r, port, 0), rv)

#define READ_IIBP_MH2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IIBP_MH2r, port, 0), rvp)
#define WRITE_IIBP_MH2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IIBP_MH2r, port, 0), rv)

#define READ_IIBP_RX_DA_LSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IIBP_RX_DA_LSr, port, 0), rvp)
#define WRITE_IIBP_RX_DA_LSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IIBP_RX_DA_LSr, port, 0), rv)

#define READ_IIBP_RX_DA_MSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IIBP_RX_DA_MSr, port, 0), rvp)
#define WRITE_IIBP_RX_DA_MSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IIBP_RX_DA_MSr, port, 0), rv)

#define READ_IIBP_RX_LENGTH_TYPEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IIBP_RX_LENGTH_TYPEr, port, 0), rvp)
#define WRITE_IIBP_RX_LENGTH_TYPEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IIBP_RX_LENGTH_TYPEr, port, 0), rv)

#define READ_IIBP_RX_OPCODEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IIBP_RX_OPCODEr, port, 0), rvp)
#define WRITE_IIBP_RX_OPCODEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IIBP_RX_OPCODEr, port, 0), rv)

#define READ_IIF_ENTRY_SRCH_AVAILr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IIF_ENTRY_SRCH_AVAILr, REG_PORT_ANY, 0), rvp)
#define WRITE_IIF_ENTRY_SRCH_AVAILr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IIF_ENTRY_SRCH_AVAILr, REG_PORT_ANY, 0), rv)

#define READ_IIMBPr(unit, port, rvp) \
	soc_reg_read(unit, IIMBPr, soc_reg_addr(unit, IIMBPr, port, 0), rvp)
#define WRITE_IIMBPr(unit, port, rv) \
	soc_reg_write(unit, IIMBPr, soc_reg_addr(unit, IIMBPr, port, 0), rv)

#define READ_IIMRPr(unit, port, rvp) \
	soc_reg_read(unit, IIMRPr, soc_reg_addr(unit, IIMRPr, port, 0), rvp)
#define WRITE_IIMRPr(unit, port, rv) \
	soc_reg_write(unit, IIMRPr, soc_reg_addr(unit, IIMRPr, port, 0), rv)

#define READ_IING_DBGr(unit, port, rvp) \
	soc_reg_read(unit, IING_DBGr, soc_reg_addr(unit, IING_DBGr, port, 0), rvp)
#define WRITE_IING_DBGr(unit, port, rv) \
	soc_reg_write(unit, IING_DBGr, soc_reg_addr(unit, IING_DBGr, port, 0), rv)

#define READ_IING_EGRMSKBMAPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IING_EGRMSKBMAPr, port, 0), rvp)
#define WRITE_IING_EGRMSKBMAPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IING_EGRMSKBMAPr, port, 0), rv)

#define READ_IING_EGRMSKBMAP_64r(unit, port, rvp) \
	soc_reg_read(unit, IING_EGRMSKBMAP_64r, soc_reg_addr(unit, IING_EGRMSKBMAP_64r, port, 0), rvp)
#define WRITE_IING_EGRMSKBMAP_64r(unit, port, rv) \
	soc_reg_write(unit, IING_EGRMSKBMAP_64r, soc_reg_addr(unit, IING_EGRMSKBMAP_64r, port, 0), rv)

#define READ_IIPMCr(unit, port, rvp) \
	soc_reg_read(unit, IIPMCr, soc_reg_addr(unit, IIPMCr, port, 0), rvp)
#define WRITE_IIPMCr(unit, port, rv) \
	soc_reg_write(unit, IIPMCr, soc_reg_addr(unit, IIPMCr, port, 0), rv)

#define READ_IIPMC_TRUNK_BLOCK_MASKr(unit, port, rvp) \
	soc_reg_read(unit, IIPMC_TRUNK_BLOCK_MASKr, soc_reg_addr(unit, IIPMC_TRUNK_BLOCK_MASKr, port, 0), rvp)
#define WRITE_IIPMC_TRUNK_BLOCK_MASKr(unit, port, rv) \
	soc_reg_write(unit, IIPMC_TRUNK_BLOCK_MASKr, soc_reg_addr(unit, IIPMC_TRUNK_BLOCK_MASKr, port, 0), rv)

#define READ_IIPPKTSr(unit, port, rvp) \
	soc_reg_read(unit, IIPPKTSr, soc_reg_addr(unit, IIPPKTSr, port, 0), rvp)
#define WRITE_IIPPKTSr(unit, port, rv) \
	soc_reg_write(unit, IIPPKTSr, soc_reg_addr(unit, IIPPKTSr, port, 0), rv)

#define READ_IIRSEL_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IIRSEL_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IIRSEL_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IIRSEL_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_IKNOWN_MCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IKNOWN_MCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_IKNOWN_MCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IKNOWN_MCAST_BLOCK_MASKr, port, 0), rv)

#define READ_IKNOWN_MCAST_BLOCK_MASK_64r(unit, port, rvp) \
	soc_reg_read(unit, IKNOWN_MCAST_BLOCK_MASK_64r, soc_reg_addr(unit, IKNOWN_MCAST_BLOCK_MASK_64r, port, 0), rvp)
#define WRITE_IKNOWN_MCAST_BLOCK_MASK_64r(unit, port, rv) \
	soc_reg_write(unit, IKNOWN_MCAST_BLOCK_MASK_64r, soc_reg_addr(unit, IKNOWN_MCAST_BLOCK_MASK_64r, port, 0), rv)

#define READ_IL2LU_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL2LU_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IL2LU_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL2LU_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_IL2MC_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL2MC_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IL2MC_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL2MC_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_IL3LU_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3LU_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3LU_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3LU_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_ERBFIFO_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_ERBFIFO_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_ERBFIFO_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_ERBFIFO_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_ERB_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_ERB_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_ERB_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_ERB_CTLr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_ERB_INTR_CLEARr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_ERB_INTR_CLEARr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_ERB_INTR_CLEARr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_ERB_INTR_CLEARr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_ERB_INTR_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_ERB_INTR_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_ERB_INTR_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_ERB_INTR_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_ERB_INTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_ERB_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_ERB_INTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_ERB_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_EXTFP_POLICY_DED_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_EXTFP_POLICY_DED_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_EXTFP_POLICY_DED_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_EXTFP_POLICY_DED_INFOr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_EXTFP_POLICY_SEC_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_EXTFP_POLICY_SEC_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_EXTFP_POLICY_SEC_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_EXTFP_POLICY_SEC_INFOr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_FP0RSPFIFO_RS_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_FP0RSPFIFO_RS_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_FP0RSPFIFO_RS_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_FP0RSPFIFO_RS_CTLr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_FP0RSPFIFO_RS_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_FP0RSPFIFO_RS_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_FP0RSPFIFO_RS_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_FP0RSPFIFO_RS_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_FP1RSPFIFO_RS_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_FP1RSPFIFO_RS_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_FP1RSPFIFO_RS_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_FP1RSPFIFO_RS_CTLr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_FP1RSPFIFO_RS_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_FP1RSPFIFO_RS_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_FP1RSPFIFO_RS_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_FP1RSPFIFO_RS_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_FPCREQFIFO_WS_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_FPCREQFIFO_WS_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_FPCREQFIFO_WS_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_FPCREQFIFO_WS_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_IPCF_PTR_MISMATCH_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_IPCF_PTR_MISMATCH_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_IPCF_PTR_MISMATCH_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_IPCF_PTR_MISMATCH_INFOr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_L2L3RSPFIFO_RS_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_L2L3RSPFIFO_RS_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_L2L3RSPFIFO_RS_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_L2L3RSPFIFO_RS_CTLr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_L2L3RSPFIFO_RS_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_L2L3RSPFIFO_RS_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_L2L3RSPFIFO_RS_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_L2L3RSPFIFO_RS_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IL3MC_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IL3MC_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IL3MC_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IL3MC_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_ILINKr(unit, port, rvp) \
	soc_reg_read(unit, ILINKr, soc_reg_addr(unit, ILINKr, port, 0), rvp)
#define WRITE_ILINKr(unit, port, rv) \
	soc_reg_write(unit, ILINKr, soc_reg_addr(unit, ILINKr, port, 0), rv)

#define READ_ILLEGAL_TYPE_CNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ILLEGAL_TYPE_CNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_ILLEGAL_TYPE_CNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ILLEGAL_TYPE_CNTr, REG_PORT_ANY, 0), rv)

#define READ_ILLEGAL_TYPE_CNT_CG0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ILLEGAL_TYPE_CNT_CG0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ILLEGAL_TYPE_CNT_CG0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ILLEGAL_TYPE_CNT_CG0r, REG_PORT_ANY, 0), rv)

#define READ_ILLEGAL_TYPE_CNT_CG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ILLEGAL_TYPE_CNT_CG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ILLEGAL_TYPE_CNT_CG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ILLEGAL_TYPE_CNT_CG1r, REG_PORT_ANY, 0), rv)

#define READ_ILNKBLKr(unit, port, rvp) \
	soc_reg_read(unit, ILNKBLKr, soc_reg_addr(unit, ILNKBLKr, port, 0), rvp)
#define WRITE_ILNKBLKr(unit, port, rv) \
	soc_reg_write(unit, ILNKBLKr, soc_reg_addr(unit, ILNKBLKr, port, 0), rv)

#define READ_ILOCAL_SW_DISABLE_DEFAULT_PBMr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ILOCAL_SW_DISABLE_DEFAULT_PBMr, port, 0), rvp)
#define WRITE_ILOCAL_SW_DISABLE_DEFAULT_PBMr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ILOCAL_SW_DISABLE_DEFAULT_PBMr, port, 0), rv)

#define READ_ILOCAL_SW_DISABLE_DEFAULT_PBM_64r(unit, port, rvp) \
	soc_reg_read(unit, ILOCAL_SW_DISABLE_DEFAULT_PBM_64r, soc_reg_addr(unit, ILOCAL_SW_DISABLE_DEFAULT_PBM_64r, port, 0), rvp)
#define WRITE_ILOCAL_SW_DISABLE_DEFAULT_PBM_64r(unit, port, rv) \
	soc_reg_write(unit, ILOCAL_SW_DISABLE_DEFAULT_PBM_64r, soc_reg_addr(unit, ILOCAL_SW_DISABLE_DEFAULT_PBM_64r, port, 0), rv)

#define READ_ILOCAL_SW_DISABLE_DEFAULT_PBM_MIRRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ILOCAL_SW_DISABLE_DEFAULT_PBM_MIRRr, port, 0), rvp)
#define WRITE_ILOCAL_SW_DISABLE_DEFAULT_PBM_MIRRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ILOCAL_SW_DISABLE_DEFAULT_PBM_MIRRr, port, 0), rv)

#define READ_ILOCAL_SW_DISABLE_DEFAULT_PBM_MIRR_64r(unit, port, rvp) \
	soc_reg_read(unit, ILOCAL_SW_DISABLE_DEFAULT_PBM_MIRR_64r, soc_reg_addr(unit, ILOCAL_SW_DISABLE_DEFAULT_PBM_MIRR_64r, port, 0), rvp)
#define WRITE_ILOCAL_SW_DISABLE_DEFAULT_PBM_MIRR_64r(unit, port, rv) \
	soc_reg_write(unit, ILOCAL_SW_DISABLE_DEFAULT_PBM_MIRR_64r, soc_reg_addr(unit, ILOCAL_SW_DISABLE_DEFAULT_PBM_MIRR_64r, port, 0), rv)

#define READ_ILPM_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ILPM_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ILPM_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ILPM_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_ILPM_TM_REG_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ILPM_TM_REG_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ILPM_TM_REG_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ILPM_TM_REG_2r, REG_PORT_ANY, 0), rv)

#define READ_ILTOMCr(unit, port, rvp) \
	soc_reg_read(unit, ILTOMCr, soc_reg_addr(unit, ILTOMCr, port, 0), rvp)
#define WRITE_ILTOMCr(unit, port, rv) \
	soc_reg_write(unit, ILTOMCr, soc_reg_addr(unit, ILTOMCr, port, 0), rv)

#define READ_IMBPr(unit, port, rvp) \
	soc_reg_read(unit, IMBPr, soc_reg_addr(unit, IMBPr, port, 0), rvp)
#define WRITE_IMBPr(unit, port, rv) \
	soc_reg_write(unit, IMBPr, soc_reg_addr(unit, IMBPr, port, 0), rv)

#define READ_IMC_TRUNK_BLOCK_MASKr(unit, port, rvp) \
	soc_reg_read(unit, IMC_TRUNK_BLOCK_MASKr, soc_reg_addr(unit, IMC_TRUNK_BLOCK_MASKr, port, 0), rvp)
#define WRITE_IMC_TRUNK_BLOCK_MASKr(unit, port, rv) \
	soc_reg_write(unit, IMC_TRUNK_BLOCK_MASKr, soc_reg_addr(unit, IMC_TRUNK_BLOCK_MASKr, port, 0), rv)

#define READ_IMIRRORr(unit, port, rvp) \
	soc_reg_read(unit, IMIRRORr, soc_reg_addr(unit, IMIRRORr, port, 0), rvp)
#define WRITE_IMIRRORr(unit, port, rv) \
	soc_reg_write(unit, IMIRRORr, soc_reg_addr(unit, IMIRRORr, port, 0), rv)

#define READ_IMIRROR_BITMAPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IMIRROR_BITMAPr, port, 0), rvp)
#define WRITE_IMIRROR_BITMAPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IMIRROR_BITMAPr, port, 0), rv)

#define READ_IMIRROR_CONTROLr(unit, port, rvp) \
	soc_reg_read(unit, IMIRROR_CONTROLr, soc_reg_addr(unit, IMIRROR_CONTROLr, port, 0), rvp)
#define WRITE_IMIRROR_CONTROLr(unit, port, rv) \
	soc_reg_write(unit, IMIRROR_CONTROLr, soc_reg_addr(unit, IMIRROR_CONTROLr, port, 0), rv)

#define READ_IMIRROR_DEST_BITMAPr(unit, port, rvp) \
	soc_reg_read(unit, IMIRROR_DEST_BITMAPr, soc_reg_addr(unit, IMIRROR_DEST_BITMAPr, port, 0), rvp)
#define WRITE_IMIRROR_DEST_BITMAPr(unit, port, rv) \
	soc_reg_write(unit, IMIRROR_DEST_BITMAPr, soc_reg_addr(unit, IMIRROR_DEST_BITMAPr, port, 0), rv)

#define READ_IMMU_FUSE_DEBUG0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IMMU_FUSE_DEBUG0r, REG_PORT_ANY, 0), rvp)
#define WRITE_IMMU_FUSE_DEBUG0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IMMU_FUSE_DEBUG0r, REG_PORT_ANY, 0), rv)

#define READ_IMMU_FUSE_DEBUG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IMMU_FUSE_DEBUG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IMMU_FUSE_DEBUG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IMMU_FUSE_DEBUG1r, REG_PORT_ANY, 0), rv)

#define READ_IMMU_FUSE_DEBUG2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IMMU_FUSE_DEBUG2r, REG_PORT_ANY, 0), rvp)
#define WRITE_IMMU_FUSE_DEBUG2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IMMU_FUSE_DEBUG2r, REG_PORT_ANY, 0), rv)

#define READ_IMODPORT_15_8r(unit, port, rvp) \
	soc_reg_read(unit, IMODPORT_15_8r, soc_reg_addr(unit, IMODPORT_15_8r, port, 0), rvp)
#define WRITE_IMODPORT_15_8r(unit, port, rv) \
	soc_reg_write(unit, IMODPORT_15_8r, soc_reg_addr(unit, IMODPORT_15_8r, port, 0), rv)

#define READ_IMODPORT_23_16r(unit, port, rvp) \
	soc_reg_read(unit, IMODPORT_23_16r, soc_reg_addr(unit, IMODPORT_23_16r, port, 0), rvp)
#define WRITE_IMODPORT_23_16r(unit, port, rv) \
	soc_reg_write(unit, IMODPORT_23_16r, soc_reg_addr(unit, IMODPORT_23_16r, port, 0), rv)

#define READ_IMODPORT_31_24r(unit, port, rvp) \
	soc_reg_read(unit, IMODPORT_31_24r, soc_reg_addr(unit, IMODPORT_31_24r, port, 0), rvp)
#define WRITE_IMODPORT_31_24r(unit, port, rv) \
	soc_reg_write(unit, IMODPORT_31_24r, soc_reg_addr(unit, IMODPORT_31_24r, port, 0), rv)

#define READ_IMODPORT_39_32r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IMODPORT_39_32r, port, 0), rvp)
#define WRITE_IMODPORT_39_32r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IMODPORT_39_32r, port, 0), rv)

#define READ_IMODPORT_47_40r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IMODPORT_47_40r, port, 0), rvp)
#define WRITE_IMODPORT_47_40r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IMODPORT_47_40r, port, 0), rv)

#define READ_IMODPORT_55_48r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IMODPORT_55_48r, port, 0), rvp)
#define WRITE_IMODPORT_55_48r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IMODPORT_55_48r, port, 0), rv)

#define READ_IMODPORT_63_56r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IMODPORT_63_56r, port, 0), rvp)
#define WRITE_IMODPORT_63_56r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IMODPORT_63_56r, port, 0), rv)

#define READ_IMODPORT_7_0r(unit, port, rvp) \
	soc_reg_read(unit, IMODPORT_7_0r, soc_reg_addr(unit, IMODPORT_7_0r, port, 0), rvp)
#define WRITE_IMODPORT_7_0r(unit, port, rv) \
	soc_reg_write(unit, IMODPORT_7_0r, soc_reg_addr(unit, IMODPORT_7_0r, port, 0), rv)

#define READ_IMRPr(unit, port, rvp) \
	soc_reg_read(unit, IMRPr, soc_reg_addr(unit, IMRPr, port, 0), rvp)
#define WRITE_IMRPr(unit, port, rv) \
	soc_reg_write(unit, IMRPr, soc_reg_addr(unit, IMRPr, port, 0), rv)

#define READ_IMRP4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IMRP4r, port, 0), rvp)
#define WRITE_IMRP4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IMRP4r, port, 0), rv)

#define READ_IMRP6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IMRP6r, port, 0), rvp)
#define WRITE_IMRP6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IMRP6r, port, 0), rv)

#define READ_IM_MTP_INDEXr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IM_MTP_INDEXr, REG_PORT_ANY, idx), rvp)
#define WRITE_IM_MTP_INDEXr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IM_MTP_INDEXr, REG_PORT_ANY, idx), rv)

#define READ_INGBUFFERTHRESr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INGBUFFERTHRESr, REG_PORT_ANY, 0), rvp)
#define WRITE_INGBUFFERTHRESr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INGBUFFERTHRESr, REG_PORT_ANY, 0), rv)

#define READ_INGCELLLIMITDISCARDCG0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INGCELLLIMITDISCARDCG0r, port, 0), rvp)
#define WRITE_INGCELLLIMITDISCARDCG0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INGCELLLIMITDISCARDCG0r, port, 0), rv)

#define READ_INGCELLLIMITDISCARDCG1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INGCELLLIMITDISCARDCG1r, port, 0), rvp)
#define WRITE_INGCELLLIMITDISCARDCG1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INGCELLLIMITDISCARDCG1r, port, 0), rv)

#define READ_INGCELLLIMITIBPCG0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INGCELLLIMITIBPCG0r, port, 0), rvp)
#define WRITE_INGCELLLIMITIBPCG0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INGCELLLIMITIBPCG0r, port, 0), rv)

#define READ_INGCELLLIMITIBPCG1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INGCELLLIMITIBPCG1r, port, 0), rvp)
#define WRITE_INGCELLLIMITIBPCG1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INGCELLLIMITIBPCG1r, port, 0), rv)

#define READ_INGLIMITr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INGLIMITr, REG_PORT_ANY, idx), rvp)
#define WRITE_INGLIMITr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INGLIMITr, REG_PORT_ANY, idx), rv)

#define READ_INGLIMITDISCARDr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INGLIMITDISCARDr, REG_PORT_ANY, idx), rvp)
#define WRITE_INGLIMITDISCARDr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INGLIMITDISCARDr, REG_PORT_ANY, idx), rv)

#define READ_INGLIMITRESETr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INGLIMITRESETr, REG_PORT_ANY, idx), rvp)
#define WRITE_INGLIMITRESETr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INGLIMITRESETr, REG_PORT_ANY, idx), rv)

#define READ_INGPKTLIMITSCOSr(unit, port, idx, rvp) \
	soc_reg_read(unit, INGPKTLIMITSCOSr, soc_reg_addr(unit, INGPKTLIMITSCOSr, port, idx), rvp)
#define WRITE_INGPKTLIMITSCOSr(unit, port, idx, rv) \
	soc_reg_write(unit, INGPKTLIMITSCOSr, soc_reg_addr(unit, INGPKTLIMITSCOSr, port, idx), rv)

#define READ_INGRESSBACKPRESSUREr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INGRESSBACKPRESSUREr, port, 0), rvp)
#define WRITE_INGRESSBACKPRESSUREr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INGRESSBACKPRESSUREr, port, 0), rv)

#define READ_INGRESS_DEBUGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INGRESS_DEBUGr, port, 0), rvp)
#define WRITE_INGRESS_DEBUGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INGRESS_DEBUGr, port, 0), rv)

#define READ_INGR_METER_CTRLr(unit, port, rvp) \
	soc_reg_read(unit, INGR_METER_CTRLr, soc_reg_addr(unit, INGR_METER_CTRLr, port, 0), rvp)
#define WRITE_INGR_METER_CTRLr(unit, port, rv) \
	soc_reg_write(unit, INGR_METER_CTRLr, soc_reg_addr(unit, INGR_METER_CTRLr, port, 0), rv)

#define READ_INGR_METER_STATUSr(unit, port, rvp) \
	soc_reg_read(unit, INGR_METER_STATUSr, soc_reg_addr(unit, INGR_METER_STATUSr, port, 0), rvp)
#define WRITE_INGR_METER_STATUSr(unit, port, rv) \
	soc_reg_write(unit, INGR_METER_STATUSr, soc_reg_addr(unit, INGR_METER_STATUSr, port, 0), rv)

#define READ_ING_BYPASS_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_BYPASS_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_BYPASS_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_BYPASS_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_ING_CNTLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_CNTLr, port, 0), rvp)
#define WRITE_ING_CNTLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_CNTLr, port, 0), rv)

#define READ_ING_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_ING_CONFIG_64r(unit, rvp) \
	soc_reg_read(unit, ING_CONFIG_64r, soc_reg_addr(unit, ING_CONFIG_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_CONFIG_64r(unit, rv) \
	soc_reg_write(unit, ING_CONFIG_64r, soc_reg_addr(unit, ING_CONFIG_64r, REG_PORT_ANY, 0), rv)

#define READ_ING_COS_MAPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_COS_MAPr, port, 0), rvp)
#define WRITE_ING_COS_MAPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_COS_MAPr, port, 0), rv)

#define READ_ING_COS_MODEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_COS_MODEr, port, 0), rvp)
#define WRITE_ING_COS_MODEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_COS_MODEr, port, 0), rv)

#define READ_ING_CPUTOBMAPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_CPUTOBMAPr, port, 0), rvp)
#define WRITE_ING_CPUTOBMAPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_CPUTOBMAPr, port, 0), rv)

#define READ_ING_CTRLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_CTRLr, port, 0), rvp)
#define WRITE_ING_CTRLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_CTRLr, port, 0), rv)

#define READ_ING_CTRL2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_CTRL2r, port, 0), rvp)
#define WRITE_ING_CTRL2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_CTRL2r, port, 0), rv)

#define READ_ING_EGRMSKBMAPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_EGRMSKBMAPr, port, 0), rvp)
#define WRITE_ING_EGRMSKBMAPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_EGRMSKBMAPr, port, 0), rv)

#define READ_ING_EGRMSKBMAP_64r(unit, port, rvp) \
	soc_reg_read(unit, ING_EGRMSKBMAP_64r, soc_reg_addr(unit, ING_EGRMSKBMAP_64r, port, 0), rvp)
#define WRITE_ING_EGRMSKBMAP_64r(unit, port, rv) \
	soc_reg_write(unit, ING_EGRMSKBMAP_64r, soc_reg_addr(unit, ING_EGRMSKBMAP_64r, port, 0), rv)

#define READ_ING_EN_EFILTER_BITMAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_EN_EFILTER_BITMAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_EN_EFILTER_BITMAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_EN_EFILTER_BITMAPr, REG_PORT_ANY, 0), rv)

#define READ_ING_EN_EFILTER_BITMAP_64r(unit, rvp) \
	soc_reg_read(unit, ING_EN_EFILTER_BITMAP_64r, soc_reg_addr(unit, ING_EN_EFILTER_BITMAP_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_EN_EFILTER_BITMAP_64r(unit, rv) \
	soc_reg_write(unit, ING_EN_EFILTER_BITMAP_64r, soc_reg_addr(unit, ING_EN_EFILTER_BITMAP_64r, REG_PORT_ANY, 0), rv)

#define READ_ING_EPC_LNKBMAPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_EPC_LNKBMAPr, port, 0), rvp)
#define WRITE_ING_EPC_LNKBMAPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_EPC_LNKBMAPr, port, 0), rv)

#define READ_ING_EVENT_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_EVENT_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_EVENT_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_EVENT_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_ING_EVENT_DEBUG_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_EVENT_DEBUG_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_EVENT_DEBUG_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_EVENT_DEBUG_2r, REG_PORT_ANY, 0), rv)

#define READ_ING_EVENT_DEBUG_2_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_EVENT_DEBUG_2_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_EVENT_DEBUG_2_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_EVENT_DEBUG_2_Xr, REG_PORT_ANY, 0), rv)

#define READ_ING_EVENT_DEBUG_2_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_EVENT_DEBUG_2_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_EVENT_DEBUG_2_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_EVENT_DEBUG_2_Yr, REG_PORT_ANY, 0), rv)

#define READ_ING_EVENT_DEBUG_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_EVENT_DEBUG_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_EVENT_DEBUG_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_EVENT_DEBUG_Xr, REG_PORT_ANY, 0), rv)

#define READ_ING_EVENT_DEBUG_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_EVENT_DEBUG_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_EVENT_DEBUG_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_EVENT_DEBUG_Yr, REG_PORT_ANY, 0), rv)

#define READ_ING_HGTRUNKr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_HGTRUNKr, port, idx), rvp)
#define WRITE_ING_HGTRUNKr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_HGTRUNKr, port, idx), rv)

#define READ_ING_HW_RESET_CONTROL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_HW_RESET_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_HW_RESET_CONTROL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_HW_RESET_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_ING_HW_RESET_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_HW_RESET_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_HW_RESET_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_HW_RESET_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_ING_HW_RESET_CONTROL_2_Xr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_HW_RESET_CONTROL_2_Xr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_HW_RESET_CONTROL_2_Xr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_HW_RESET_CONTROL_2_Xr, REG_PORT_ANY, 0), rv)

#define READ_ING_HW_RESET_CONTROL_2_Yr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_HW_RESET_CONTROL_2_Yr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_HW_RESET_CONTROL_2_Yr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_HW_RESET_CONTROL_2_Yr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_CURRENT_TIMEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_CURRENT_TIMEr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_CURRENT_TIMEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_CURRENT_TIMEr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_EXPORT_FIFO_COUNTERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_EXPORT_FIFO_COUNTERr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_EXPORT_FIFO_COUNTERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_EXPORT_FIFO_COUNTERr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_EXPORT_FIFO_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_EXPORT_FIFO_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_EXPORT_FIFO_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_EXPORT_FIFO_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_EXPORT_FIFO_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_EXPORT_FIFO_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_EXPORT_FIFO_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_EXPORT_FIFO_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_EXPORT_FIFO_READ_PTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_EXPORT_FIFO_READ_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_EXPORT_FIFO_READ_PTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_EXPORT_FIFO_READ_PTRr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_EXPORT_FIFO_WRITE_PTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_EXPORT_FIFO_WRITE_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_EXPORT_FIFO_WRITE_PTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_EXPORT_FIFO_WRITE_PTRr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_HASH_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_HASH_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_HASH_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_HASH_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_MAXIMUM_IDLE_AGE_SETr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_MAXIMUM_IDLE_AGE_SETr, REG_PORT_ANY, idx), rvp)
#define WRITE_ING_IPFIX_MAXIMUM_IDLE_AGE_SETr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_MAXIMUM_IDLE_AGE_SETr, REG_PORT_ANY, idx), rv)

#define READ_ING_IPFIX_MINIMUM_LIVE_TIME_SETr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_MINIMUM_LIVE_TIME_SETr, REG_PORT_ANY, idx), rvp)
#define WRITE_ING_IPFIX_MINIMUM_LIVE_TIME_SETr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_MINIMUM_LIVE_TIME_SETr, REG_PORT_ANY, idx), rv)

#define READ_ING_IPFIX_MISSED_BUCKET_FULL_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_MISSED_BUCKET_FULL_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_MISSED_BUCKET_FULL_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_MISSED_BUCKET_FULL_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_MISSED_EXPORT_FULL_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_MISSED_EXPORT_FULL_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_MISSED_EXPORT_FULL_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_MISSED_EXPORT_FULL_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_MISSED_PORT_LIMIT_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_MISSED_PORT_LIMIT_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_MISSED_PORT_LIMIT_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_MISSED_PORT_LIMIT_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_PORT_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_PORT_CONFIGr, port, 0), rvp)
#define WRITE_ING_IPFIX_PORT_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_PORT_CONFIGr, port, 0), rv)

#define READ_ING_IPFIX_PORT_LIMIT_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_PORT_LIMIT_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_PORT_LIMIT_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_PORT_LIMIT_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_PORT_RECORD_COUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_PORT_RECORD_COUNTr, port, 0), rvp)
#define WRITE_ING_IPFIX_PORT_RECORD_COUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_PORT_RECORD_COUNTr, port, 0), rv)

#define READ_ING_IPFIX_PORT_RECORD_LIMIT_SETr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_PORT_RECORD_LIMIT_SETr, REG_PORT_ANY, idx), rvp)
#define WRITE_ING_IPFIX_PORT_RECORD_LIMIT_SETr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_PORT_RECORD_LIMIT_SETr, REG_PORT_ANY, idx), rv)

#define READ_ING_IPFIX_PORT_SAMPLING_COUNTERr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_PORT_SAMPLING_COUNTERr, port, 0), rvp)
#define WRITE_ING_IPFIX_PORT_SAMPLING_COUNTERr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_PORT_SAMPLING_COUNTERr, port, 0), rv)

#define READ_ING_IPFIX_SAMPLING_LIMIT_SETr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_SAMPLING_LIMIT_SETr, REG_PORT_ANY, idx), rvp)
#define WRITE_ING_IPFIX_SAMPLING_LIMIT_SETr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_SAMPLING_LIMIT_SETr, REG_PORT_ANY, idx), rv)

#define READ_ING_IPFIX_SESSION_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_SESSION_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_SESSION_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_SESSION_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPFIX_SESSION_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPFIX_SESSION_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPFIX_SESSION_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPFIX_SESSION_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ING_IPMC_PTR_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_IPMC_PTR_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_IPMC_PTR_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_IPMC_PTR_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_ING_L3_NEXT_HOP_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_L3_NEXT_HOP_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_L3_NEXT_HOP_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_L3_NEXT_HOP_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_ING_L3_NEXT_HOP_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_L3_NEXT_HOP_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_L3_NEXT_HOP_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_L3_NEXT_HOP_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_ING_L3_NEXT_HOP_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_L3_NEXT_HOP_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_L3_NEXT_HOP_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_L3_NEXT_HOP_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_ING_L3_NEXT_HOP_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_L3_NEXT_HOP_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_L3_NEXT_HOP_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_L3_NEXT_HOP_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_ING_MIRTOBMAPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_MIRTOBMAPr, port, 0), rvp)
#define WRITE_ING_MIRTOBMAPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_MIRTOBMAPr, port, 0), rv)

#define READ_ING_MISC_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_MISC_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_MISC_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_MISC_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_ING_MISC_CONFIG2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_MISC_CONFIG2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_MISC_CONFIG2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_MISC_CONFIG2r, REG_PORT_ANY, 0), rv)

#define READ_ING_MISC_PORT_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_MISC_PORT_CONFIGr, port, 0), rvp)
#define WRITE_ING_MISC_PORT_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_MISC_PORT_CONFIGr, port, 0), rv)

#define READ_ING_MODMAP_CTRLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_MODMAP_CTRLr, port, 0), rvp)
#define WRITE_ING_MODMAP_CTRLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_MODMAP_CTRLr, port, 0), rv)

#define READ_ING_MPLS_INNER_TPIDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_MPLS_INNER_TPIDr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_MPLS_INNER_TPIDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_MPLS_INNER_TPIDr, REG_PORT_ANY, 0), rv)

#define READ_ING_MPLS_TPIDr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_MPLS_TPIDr, REG_PORT_ANY, idx), rvp)
#define WRITE_ING_MPLS_TPIDr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_MPLS_TPIDr, REG_PORT_ANY, idx), rv)

#define READ_ING_MPLS_TPID_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_MPLS_TPID_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_MPLS_TPID_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_MPLS_TPID_0r, REG_PORT_ANY, 0), rv)

#define READ_ING_MPLS_TPID_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_MPLS_TPID_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_MPLS_TPID_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_MPLS_TPID_1r, REG_PORT_ANY, 0), rv)

#define READ_ING_MPLS_TPID_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_MPLS_TPID_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_MPLS_TPID_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_MPLS_TPID_2r, REG_PORT_ANY, 0), rv)

#define READ_ING_MPLS_TPID_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_MPLS_TPID_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_MPLS_TPID_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_MPLS_TPID_3r, REG_PORT_ANY, 0), rv)

#define READ_ING_OUTER_TPIDr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_OUTER_TPIDr, REG_PORT_ANY, idx), rvp)
#define WRITE_ING_OUTER_TPIDr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_OUTER_TPIDr, REG_PORT_ANY, idx), rv)

#define READ_ING_OUTER_TPID_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_OUTER_TPID_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_OUTER_TPID_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_OUTER_TPID_0r, REG_PORT_ANY, 0), rv)

#define READ_ING_OUTER_TPID_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_OUTER_TPID_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_OUTER_TPID_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_OUTER_TPID_1r, REG_PORT_ANY, 0), rv)

#define READ_ING_OUTER_TPID_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_OUTER_TPID_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_OUTER_TPID_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_OUTER_TPID_2r, REG_PORT_ANY, 0), rv)

#define READ_ING_OUTER_TPID_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_OUTER_TPID_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_OUTER_TPID_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_OUTER_TPID_3r, REG_PORT_ANY, 0), rv)

#define READ_ING_PRTTODEVIDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_PRTTODEVIDr, port, 0), rvp)
#define WRITE_ING_PRTTODEVIDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_PRTTODEVIDr, port, 0), rv)

#define READ_ING_Q_BEGINr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_Q_BEGINr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_Q_BEGINr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_Q_BEGINr, REG_PORT_ANY, 0), rv)

#define READ_ING_SRCMODFILTERr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_SRCMODFILTERr, port, 0), rvp)
#define WRITE_ING_SRCMODFILTERr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_SRCMODFILTERr, port, 0), rv)

#define READ_ING_SYS_RSVD_VIDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ING_SYS_RSVD_VIDr, REG_PORT_ANY, 0), rvp)
#define WRITE_ING_SYS_RSVD_VIDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ING_SYS_RSVD_VIDr, REG_PORT_ANY, 0), rv)

#define READ_INITIAL_ING_L3_NEXT_HOP_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INITIAL_ING_L3_NEXT_HOP_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_INITIAL_ING_L3_NEXT_HOP_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INITIAL_ING_L3_NEXT_HOP_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_INITIAL_ING_L3_NEXT_HOP_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INITIAL_ING_L3_NEXT_HOP_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_INITIAL_ING_L3_NEXT_HOP_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INITIAL_ING_L3_NEXT_HOP_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_INITIAL_NHOP_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INITIAL_NHOP_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_INITIAL_NHOP_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INITIAL_NHOP_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_INITIAL_NHOP_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INITIAL_NHOP_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_INITIAL_NHOP_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INITIAL_NHOP_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_INITIATEBIST1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INITIATEBIST1r, REG_PORT_ANY, 0), rvp)
#define WRITE_INITIATEBIST1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INITIATEBIST1r, REG_PORT_ANY, 0), rv)

#define READ_INITIATEBIST2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INITIATEBIST2r, REG_PORT_ANY, 0), rvp)
#define WRITE_INITIATEBIST2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INITIATEBIST2r, REG_PORT_ANY, 0), rv)

#define READ_INIT_DONE_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INIT_DONE_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_INIT_DONE_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INIT_DONE_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_INONIPr(unit, port, rvp) \
	soc_reg_read(unit, INONIPr, soc_reg_addr(unit, INONIPr, port, 0), rvp)
#define WRITE_INONIPr(unit, port, rv) \
	soc_reg_write(unit, INONIPr, soc_reg_addr(unit, INONIPr, port, 0), rv)

#define READ_INPUT_PORT_RX_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, INPUT_PORT_RX_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_INPUT_PORT_RX_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, INPUT_PORT_RX_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_INPUT_PORT_RX_ENABLE_64r(unit, rvp) \
	soc_reg_read(unit, INPUT_PORT_RX_ENABLE_64r, soc_reg_addr(unit, INPUT_PORT_RX_ENABLE_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_INPUT_PORT_RX_ENABLE_64r(unit, rv) \
	soc_reg_write(unit, INPUT_PORT_RX_ENABLE_64r, soc_reg_addr(unit, INPUT_PORT_RX_ENABLE_64r, REG_PORT_ANY, 0), rv)

#define READ_IP0_BISRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP0_BISRr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP0_BISRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP0_BISRr, REG_PORT_ANY, 0), rv)

#define READ_IP0_BISR_REGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP0_BISR_REGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP0_BISR_REGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP0_BISR_REGr, REG_PORT_ANY, 0), rv)

#define READ_IP0_EP_BISR_RD_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP0_EP_BISR_RD_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP0_EP_BISR_RD_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP0_EP_BISR_RD_DATAr, REG_PORT_ANY, 0), rv)

#define READ_IP0_INTR_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP0_INTR_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP0_INTR_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP0_INTR_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_IP0_INTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP0_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP0_INTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP0_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IP1_BISRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP1_BISRr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP1_BISRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP1_BISRr, REG_PORT_ANY, 0), rv)

#define READ_IP1_BISR_RD_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP1_BISR_RD_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP1_BISR_RD_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP1_BISR_RD_DATAr, REG_PORT_ANY, 0), rv)

#define READ_IP1_BISR_REGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP1_BISR_REGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP1_BISR_REGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP1_BISR_REGr, REG_PORT_ANY, 0), rv)

#define READ_IP1_INTR_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP1_INTR_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP1_INTR_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP1_INTR_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_IP1_INTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP1_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP1_INTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP1_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IP1_PARITY_INTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP1_PARITY_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP1_PARITY_INTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP1_PARITY_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IP2_BISRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP2_BISRr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP2_BISRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP2_BISRr, REG_PORT_ANY, 0), rv)

#define READ_IP2_BISR_RD_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP2_BISR_RD_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP2_BISR_RD_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP2_BISR_RD_DATAr, REG_PORT_ANY, 0), rv)

#define READ_IP2_BISR_REGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP2_BISR_REGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP2_BISR_REGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP2_BISR_REGr, REG_PORT_ANY, 0), rv)

#define READ_IP2_INTR_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP2_INTR_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP2_INTR_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP2_INTR_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_IP2_INTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP2_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP2_INTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP2_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IP2_PARITY_INTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP2_PARITY_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP2_PARITY_INTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP2_PARITY_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IP3_BISRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP3_BISRr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP3_BISRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP3_BISRr, REG_PORT_ANY, 0), rv)

#define READ_IP3_BISR_REGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP3_BISR_REGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP3_BISR_REGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP3_BISR_REGr, REG_PORT_ANY, 0), rv)

#define READ_IP3_INTR_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP3_INTR_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP3_INTR_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP3_INTR_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_IP3_INTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP3_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP3_INTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP3_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IP3_PARITY_INTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP3_PARITY_INTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP3_PARITY_INTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP3_PARITY_INTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IP4_BISR_REGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP4_BISR_REGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP4_BISR_REGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP4_BISR_REGr, REG_PORT_ANY, 0), rv)

#define READ_IP4_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IP4_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_IP4_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IP4_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_IPARS_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPARS_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPARS_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPARS_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_IPAUSE_D0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_D0r, port, 0), rvp)
#define WRITE_IPAUSE_D0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_D0r, port, 0), rv)

#define READ_IPAUSE_D1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_D1r, port, 0), rvp)
#define WRITE_IPAUSE_D1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_D1r, port, 0), rv)

#define READ_IPAUSE_D2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_D2r, port, 0), rvp)
#define WRITE_IPAUSE_D2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_D2r, port, 0), rv)

#define READ_IPAUSE_D3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_D3r, port, 0), rvp)
#define WRITE_IPAUSE_D3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_D3r, port, 0), rv)

#define READ_IPAUSE_MH0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_MH0r, port, 0), rvp)
#define WRITE_IPAUSE_MH0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_MH0r, port, 0), rv)

#define READ_IPAUSE_MH1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_MH1r, port, 0), rvp)
#define WRITE_IPAUSE_MH1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_MH1r, port, 0), rv)

#define READ_IPAUSE_MH2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_MH2r, port, 0), rvp)
#define WRITE_IPAUSE_MH2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_MH2r, port, 0), rv)

#define READ_IPAUSE_RX_DA_LSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_RX_DA_LSr, port, 0), rvp)
#define WRITE_IPAUSE_RX_DA_LSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_RX_DA_LSr, port, 0), rv)

#define READ_IPAUSE_RX_DA_MSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_RX_DA_MSr, port, 0), rvp)
#define WRITE_IPAUSE_RX_DA_MSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_RX_DA_MSr, port, 0), rv)

#define READ_IPAUSE_RX_LENGTH_TYPEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_RX_LENGTH_TYPEr, port, 0), rvp)
#define WRITE_IPAUSE_RX_LENGTH_TYPEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_RX_LENGTH_TYPEr, port, 0), rv)

#define READ_IPAUSE_RX_OPCODEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_RX_OPCODEr, port, 0), rvp)
#define WRITE_IPAUSE_RX_OPCODEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_RX_OPCODEr, port, 0), rv)

#define READ_IPAUSE_TX_PKT_XOFF_VALr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_TX_PKT_XOFF_VALr, port, 0), rvp)
#define WRITE_IPAUSE_TX_PKT_XOFF_VALr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_TX_PKT_XOFF_VALr, port, 0), rv)

#define READ_IPAUSE_WATCHDOG_INIT_VALr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_WATCHDOG_INIT_VALr, port, 0), rvp)
#define WRITE_IPAUSE_WATCHDOG_INIT_VALr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_WATCHDOG_INIT_VALr, port, 0), rv)

#define READ_IPAUSE_WATCHDOG_THRESHr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPAUSE_WATCHDOG_THRESHr, port, 0), rvp)
#define WRITE_IPAUSE_WATCHDOG_THRESHr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPAUSE_WATCHDOG_THRESHr, port, 0), rv)

#define READ_IPDISCr(unit, port, rvp) \
	soc_reg_read(unit, IPDISCr, soc_reg_addr(unit, IPDISCr, port, 0), rvp)
#define WRITE_IPDISCr(unit, port, rv) \
	soc_reg_write(unit, IPDISCr, soc_reg_addr(unit, IPDISCr, port, 0), rv)

#define READ_IPFIX_AGE_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPFIX_AGE_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPFIX_AGE_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPFIX_AGE_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_IPFIX_RAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPFIX_RAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPFIX_RAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPFIX_RAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_IPG_HD_BKP_CNTLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPG_HD_BKP_CNTLr, port, 0), rvp)
#define WRITE_IPG_HD_BKP_CNTLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPG_HD_BKP_CNTLr, port, 0), rv)

#define READ_IPIC_SPARE_REG0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPIC_SPARE_REG0r, port, 0), rvp)
#define WRITE_IPIC_SPARE_REG0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPIC_SPARE_REG0r, port, 0), rv)

#define READ_IPIC_SPARE_REG1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPIC_SPARE_REG1r, port, 0), rvp)
#define WRITE_IPIC_SPARE_REG1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPIC_SPARE_REG1r, port, 0), rv)

#define READ_IPIC_SPARE_REG2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPIC_SPARE_REG2r, port, 0), rvp)
#define WRITE_IPIC_SPARE_REG2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPIC_SPARE_REG2r, port, 0), rv)

#define READ_IPIC_SPARE_REG3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPIC_SPARE_REG3r, port, 0), rvp)
#define WRITE_IPIC_SPARE_REG3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPIC_SPARE_REG3r, port, 0), rv)

#define READ_IPMCGROUPMEMDEBUGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCGROUPMEMDEBUGr, REG_PORT_ANY, idx), rvp)
#define WRITE_IPMCGROUPMEMDEBUGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCGROUPMEMDEBUGr, REG_PORT_ANY, idx), rv)

#define READ_IPMCGROUPTBLMEMDEBUGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCGROUPTBLMEMDEBUGr, REG_PORT_ANY, idx), rvp)
#define WRITE_IPMCGROUPTBLMEMDEBUGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCGROUPTBLMEMDEBUGr, REG_PORT_ANY, idx), rv)

#define READ_IPMCIDXINCACONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCIDXINCACONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCIDXINCACONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCIDXINCACONFIGr, REG_PORT_ANY, 0), rv)

#define READ_IPMCIDXINCAENr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCIDXINCAENr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCIDXINCAENr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCIDXINCAENr, REG_PORT_ANY, 0), rv)

#define READ_IPMCIDXINCBCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCIDXINCBCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCIDXINCBCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCIDXINCBCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_IPMCIDXINCBENr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCIDXINCBENr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCIDXINCBENr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCIDXINCBENr, REG_PORT_ANY, 0), rv)

#define READ_IPMCIDXINCCCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCIDXINCCCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCIDXINCCCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCIDXINCCCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_IPMCIDXINCCENr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCIDXINCCENr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCIDXINCCENr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCIDXINCCENr, REG_PORT_ANY, 0), rv)

#define READ_IPMCIDXINCCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCIDXINCCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCIDXINCCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCIDXINCCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_IPMCINTFTBLMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCINTFTBLMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCINTFTBLMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCINTFTBLMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_IPMCREPLICATIONCFGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCREPLICATIONCFGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCREPLICATIONCFGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCREPLICATIONCFGr, REG_PORT_ANY, 0), rv)

#define READ_IPMCREPLICATIONCFG0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCREPLICATIONCFG0r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCREPLICATIONCFG0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCREPLICATIONCFG0r, REG_PORT_ANY, 0), rv)

#define READ_IPMCREPLICATIONCFG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCREPLICATIONCFG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCREPLICATIONCFG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCREPLICATIONCFG1r, REG_PORT_ANY, 0), rv)

#define READ_IPMCREPLICATIONCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCREPLICATIONCOUNTr, port, 0), rvp)
#define WRITE_IPMCREPLICATIONCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCREPLICATIONCOUNTr, port, 0), rv)

#define READ_IPMCREPLICATIONCOUNT0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCREPLICATIONCOUNT0r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCREPLICATIONCOUNT0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCREPLICATIONCOUNT0r, REG_PORT_ANY, 0), rv)

#define READ_IPMCREPLICATIONCOUNT1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCREPLICATIONCOUNT1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCREPLICATIONCOUNT1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCREPLICATIONCOUNT1r, REG_PORT_ANY, 0), rv)

#define READ_IPMCREPOVERLMTPBMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCREPOVERLMTPBMr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCREPOVERLMTPBMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCREPOVERLMTPBMr, REG_PORT_ANY, 0), rv)

#define READ_IPMCREP_SRCHFAIL_64r(unit, rvp) \
	soc_reg_read(unit, IPMCREP_SRCHFAIL_64r, soc_reg_addr(unit, IPMCREP_SRCHFAIL_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMCREP_SRCHFAIL_64r(unit, rv) \
	soc_reg_write(unit, IPMCREP_SRCHFAIL_64r, soc_reg_addr(unit, IPMCREP_SRCHFAIL_64r, REG_PORT_ANY, 0), rv)

#define READ_IPMCVLANMEMDEBUGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMCVLANMEMDEBUGr, REG_PORT_ANY, idx), rvp)
#define WRITE_IPMCVLANMEMDEBUGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMCVLANMEMDEBUGr, REG_PORT_ANY, idx), rv)

#define READ_IPMC_ENTRY_V6r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_ENTRY_V6r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_ENTRY_V6r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_ENTRY_V6r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_ENTRY_V4_AVAILr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_ENTRY_V4_AVAILr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_ENTRY_V4_AVAILr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_ENTRY_V4_AVAILr, REG_PORT_ANY, 0), rv)

#define READ_IPMC_ENTRY_V4_BLKCNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_ENTRY_V4_BLKCNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_ENTRY_V4_BLKCNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_ENTRY_V4_BLKCNTr, REG_PORT_ANY, 0), rv)

#define READ_IPMC_ENTRY_V6_AVAILr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_ENTRY_V6_AVAILr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_ENTRY_V6_AVAILr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_ENTRY_V6_AVAILr, REG_PORT_ANY, 0), rv)

#define READ_IPMC_ENTRY_V6_BLKCNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_ENTRY_V6_BLKCNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_ENTRY_V6_BLKCNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_ENTRY_V6_BLKCNTr, REG_PORT_ANY, 0), rv)

#define READ_IPMC_ENTRY_VLDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_ENTRY_VLDr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_ENTRY_VLDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_ENTRY_VLDr, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L2_MTUr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L2_MTUr, REG_PORT_ANY, idx), rvp)
#define WRITE_IPMC_L2_MTUr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L2_MTUr, REG_PORT_ANY, idx), rv)

#define READ_IPMC_L2_MTU_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L2_MTU_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L2_MTU_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L2_MTU_0r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L2_MTU_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L2_MTU_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L2_MTU_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L2_MTU_1r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L2_MTU_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L2_MTU_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L2_MTU_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L2_MTU_2r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L2_MTU_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L2_MTU_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L2_MTU_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L2_MTU_3r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L2_MTU_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L2_MTU_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L2_MTU_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L2_MTU_4r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L2_MTU_5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L2_MTU_5r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L2_MTU_5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L2_MTU_5r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L2_MTU_6r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L2_MTU_6r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L2_MTU_6r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L2_MTU_6r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L2_MTU_7r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L2_MTU_7r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L2_MTU_7r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L2_MTU_7r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L3_MTUr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L3_MTUr, REG_PORT_ANY, idx), rvp)
#define WRITE_IPMC_L3_MTUr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L3_MTUr, REG_PORT_ANY, idx), rv)

#define READ_IPMC_L3_MTU_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L3_MTU_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L3_MTU_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L3_MTU_0r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L3_MTU_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L3_MTU_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L3_MTU_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L3_MTU_1r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L3_MTU_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L3_MTU_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L3_MTU_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L3_MTU_2r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L3_MTU_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L3_MTU_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L3_MTU_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L3_MTU_3r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L3_MTU_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L3_MTU_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L3_MTU_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L3_MTU_4r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L3_MTU_5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L3_MTU_5r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L3_MTU_5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L3_MTU_5r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L3_MTU_6r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L3_MTU_6r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L3_MTU_6r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L3_MTU_6r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_L3_MTU_7r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_L3_MTU_7r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_L3_MTU_7r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_L3_MTU_7r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_MTU_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_MTU_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_MTU_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_MTU_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_IPMC_TRUNK_BLOCK_MASKr(unit, port, rvp) \
	soc_reg_read(unit, IPMC_TRUNK_BLOCK_MASKr, soc_reg_addr(unit, IPMC_TRUNK_BLOCK_MASKr, port, 0), rvp)
#define WRITE_IPMC_TRUNK_BLOCK_MASKr(unit, port, rv) \
	soc_reg_write(unit, IPMC_TRUNK_BLOCK_MASKr, soc_reg_addr(unit, IPMC_TRUNK_BLOCK_MASKr, port, 0), rv)

#define READ_IPMC_V4_MAPPING_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_V4_MAPPING_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_V4_MAPPING_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_V4_MAPPING_0r, REG_PORT_ANY, 0), rv)

#define READ_IPMC_V6_MAPPING_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPMC_V6_MAPPING_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_IPMC_V6_MAPPING_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPMC_V6_MAPPING_0r, REG_PORT_ANY, 0), rv)

#define READ_IPV4IPMCIDXINCCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPV4IPMCIDXINCCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPV4IPMCIDXINCCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPV4IPMCIDXINCCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_IPV6IPMCIDXINCCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPV6IPMCIDXINCCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPV6IPMCIDXINCCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPV6IPMCIDXINCCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_IPV6_MIN_FRAG_SIZEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IPV6_MIN_FRAG_SIZEr, REG_PORT_ANY, 0), rvp)
#define WRITE_IPV6_MIN_FRAG_SIZEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IPV6_MIN_FRAG_SIZEr, REG_PORT_ANY, 0), rv)

#define READ_IR64r(unit, port, rvp) \
	soc_reg_read(unit, IR64r, soc_reg_addr(unit, IR64r, port, 0), rvp)
#define WRITE_IR64r(unit, port, rv) \
	soc_reg_write(unit, IR64r, soc_reg_addr(unit, IR64r, port, 0), rv)

#define READ_IR127r(unit, port, rvp) \
	soc_reg_read(unit, IR127r, soc_reg_addr(unit, IR127r, port, 0), rvp)
#define WRITE_IR127r(unit, port, rv) \
	soc_reg_write(unit, IR127r, soc_reg_addr(unit, IR127r, port, 0), rv)

#define READ_IR255r(unit, port, rvp) \
	soc_reg_read(unit, IR255r, soc_reg_addr(unit, IR255r, port, 0), rvp)
#define WRITE_IR255r(unit, port, rv) \
	soc_reg_write(unit, IR255r, soc_reg_addr(unit, IR255r, port, 0), rv)

#define READ_IR511r(unit, port, rvp) \
	soc_reg_read(unit, IR511r, soc_reg_addr(unit, IR511r, port, 0), rvp)
#define WRITE_IR511r(unit, port, rv) \
	soc_reg_write(unit, IR511r, soc_reg_addr(unit, IR511r, port, 0), rv)

#define READ_IR1023r(unit, port, rvp) \
	soc_reg_read(unit, IR1023r, soc_reg_addr(unit, IR1023r, port, 0), rvp)
#define WRITE_IR1023r(unit, port, rv) \
	soc_reg_write(unit, IR1023r, soc_reg_addr(unit, IR1023r, port, 0), rv)

#define READ_IR1518r(unit, port, rvp) \
	soc_reg_read(unit, IR1518r, soc_reg_addr(unit, IR1518r, port, 0), rvp)
#define WRITE_IR1518r(unit, port, rv) \
	soc_reg_write(unit, IR1518r, soc_reg_addr(unit, IR1518r, port, 0), rv)

#define READ_IR2047r(unit, port, rvp) \
	soc_reg_read(unit, IR2047r, soc_reg_addr(unit, IR2047r, port, 0), rvp)
#define WRITE_IR2047r(unit, port, rv) \
	soc_reg_write(unit, IR2047r, soc_reg_addr(unit, IR2047r, port, 0), rv)

#define READ_IR4095r(unit, port, rvp) \
	soc_reg_read(unit, IR4095r, soc_reg_addr(unit, IR4095r, port, 0), rvp)
#define WRITE_IR4095r(unit, port, rv) \
	soc_reg_write(unit, IR4095r, soc_reg_addr(unit, IR4095r, port, 0), rv)

#define READ_IR8191r(unit, port, rvp) \
	soc_reg_read(unit, IR8191r, soc_reg_addr(unit, IR8191r, port, 0), rvp)
#define WRITE_IR8191r(unit, port, rv) \
	soc_reg_write(unit, IR8191r, soc_reg_addr(unit, IR8191r, port, 0), rv)

#define READ_IR9216r(unit, port, rvp) \
	soc_reg_read(unit, IR9216r, soc_reg_addr(unit, IR9216r, port, 0), rvp)
#define WRITE_IR9216r(unit, port, rv) \
	soc_reg_write(unit, IR9216r, soc_reg_addr(unit, IR9216r, port, 0), rv)

#define READ_IR16383r(unit, port, rvp) \
	soc_reg_read(unit, IR16383r, soc_reg_addr(unit, IR16383r, port, 0), rvp)
#define WRITE_IR16383r(unit, port, rv) \
	soc_reg_write(unit, IR16383r, soc_reg_addr(unit, IR16383r, port, 0), rv)

#define READ_IRAGEr(unit, port, rvp) \
	soc_reg_read(unit, IRAGEr, soc_reg_addr(unit, IRAGEr, port, 0), rvp)
#define WRITE_IRAGEr(unit, port, rv) \
	soc_reg_write(unit, IRAGEr, soc_reg_addr(unit, IRAGEr, port, 0), rv)

#define READ_IRBCAr(unit, port, rvp) \
	soc_reg_read(unit, IRBCAr, soc_reg_addr(unit, IRBCAr, port, 0), rvp)
#define WRITE_IRBCAr(unit, port, rv) \
	soc_reg_write(unit, IRBCAr, soc_reg_addr(unit, IRBCAr, port, 0), rv)

#define READ_IRBYTr(unit, port, rvp) \
	soc_reg_read(unit, IRBYTr, soc_reg_addr(unit, IRBYTr, port, 0), rvp)
#define WRITE_IRBYTr(unit, port, rv) \
	soc_reg_write(unit, IRBYTr, soc_reg_addr(unit, IRBYTr, port, 0), rv)

#define READ_IRDISCr(unit, port, rvp) \
	soc_reg_read(unit, IRDISCr, soc_reg_addr(unit, IRDISCr, port, 0), rvp)
#define WRITE_IRDISCr(unit, port, rv) \
	soc_reg_write(unit, IRDISCr, soc_reg_addr(unit, IRDISCr, port, 0), rv)

#define READ_IRDROPr(unit, port, rvp) \
	soc_reg_read(unit, IRDROPr, soc_reg_addr(unit, IRDROPr, port, 0), rvp)
#define WRITE_IRDROPr(unit, port, rv) \
	soc_reg_write(unit, IRDROPr, soc_reg_addr(unit, IRDROPr, port, 0), rv)

#define READ_IRERBYTr(unit, port, rvp) \
	soc_reg_read(unit, IRERBYTr, soc_reg_addr(unit, IRERBYTr, port, 0), rvp)
#define WRITE_IRERBYTr(unit, port, rv) \
	soc_reg_write(unit, IRERBYTr, soc_reg_addr(unit, IRERBYTr, port, 0), rv)

#define READ_IRERPKTr(unit, port, rvp) \
	soc_reg_read(unit, IRERPKTr, soc_reg_addr(unit, IRERPKTr, port, 0), rvp)
#define WRITE_IRERPKTr(unit, port, rv) \
	soc_reg_write(unit, IRERPKTr, soc_reg_addr(unit, IRERPKTr, port, 0), rv)

#define READ_IRFCSr(unit, port, rvp) \
	soc_reg_read(unit, IRFCSr, soc_reg_addr(unit, IRFCSr, port, 0), rvp)
#define WRITE_IRFCSr(unit, port, rv) \
	soc_reg_write(unit, IRFCSr, soc_reg_addr(unit, IRFCSr, port, 0), rv)

#define READ_IRFLRr(unit, port, rvp) \
	soc_reg_read(unit, IRFLRr, soc_reg_addr(unit, IRFLRr, port, 0), rvp)
#define WRITE_IRFLRr(unit, port, rv) \
	soc_reg_write(unit, IRFLRr, soc_reg_addr(unit, IRFLRr, port, 0), rv)

#define READ_IRFRGr(unit, port, rvp) \
	soc_reg_read(unit, IRFRGr, soc_reg_addr(unit, IRFRGr, port, 0), rvp)
#define WRITE_IRFRGr(unit, port, rv) \
	soc_reg_write(unit, IRFRGr, soc_reg_addr(unit, IRFRGr, port, 0), rv)

#define READ_IRHOLr(unit, port, rvp) \
	soc_reg_read(unit, IRHOLr, soc_reg_addr(unit, IRHOLr, port, 0), rvp)
#define WRITE_IRHOLr(unit, port, rv) \
	soc_reg_write(unit, IRHOLr, soc_reg_addr(unit, IRHOLr, port, 0), rv)

#define READ_IRIBPr(unit, port, rvp) \
	soc_reg_read(unit, IRIBPr, soc_reg_addr(unit, IRIBPr, port, 0), rvp)
#define WRITE_IRIBPr(unit, port, rv) \
	soc_reg_write(unit, IRIBPr, soc_reg_addr(unit, IRIBPr, port, 0), rv)

#define READ_IRJBRr(unit, port, rvp) \
	soc_reg_read(unit, IRJBRr, soc_reg_addr(unit, IRJBRr, port, 0), rvp)
#define WRITE_IRJBRr(unit, port, rv) \
	soc_reg_write(unit, IRJBRr, soc_reg_addr(unit, IRJBRr, port, 0), rv)

#define READ_IRJUNKr(unit, port, rvp) \
	soc_reg_read(unit, IRJUNKr, soc_reg_addr(unit, IRJUNKr, port, 0), rvp)
#define WRITE_IRJUNKr(unit, port, rv) \
	soc_reg_write(unit, IRJUNKr, soc_reg_addr(unit, IRJUNKr, port, 0), rv)

#define READ_IRMAXr(unit, port, rvp) \
	soc_reg_read(unit, IRMAXr, soc_reg_addr(unit, IRMAXr, port, 0), rvp)
#define WRITE_IRMAXr(unit, port, rv) \
	soc_reg_write(unit, IRMAXr, soc_reg_addr(unit, IRMAXr, port, 0), rv)

#define READ_IRMCAr(unit, port, rvp) \
	soc_reg_read(unit, IRMCAr, soc_reg_addr(unit, IRMCAr, port, 0), rvp)
#define WRITE_IRMCAr(unit, port, rv) \
	soc_reg_write(unit, IRMCAr, soc_reg_addr(unit, IRMCAr, port, 0), rv)

#define READ_IRMEBr(unit, port, rvp) \
	soc_reg_read(unit, IRMEBr, soc_reg_addr(unit, IRMEBr, port, 0), rvp)
#define WRITE_IRMEBr(unit, port, rv) \
	soc_reg_write(unit, IRMEBr, soc_reg_addr(unit, IRMEBr, port, 0), rv)

#define READ_IRMEGr(unit, port, rvp) \
	soc_reg_read(unit, IRMEGr, soc_reg_addr(unit, IRMEGr, port, 0), rvp)
#define WRITE_IRMEGr(unit, port, rv) \
	soc_reg_write(unit, IRMEGr, soc_reg_addr(unit, IRMEGr, port, 0), rv)

#define READ_IROVRr(unit, port, rvp) \
	soc_reg_read(unit, IROVRr, soc_reg_addr(unit, IROVRr, port, 0), rvp)
#define WRITE_IROVRr(unit, port, rv) \
	soc_reg_write(unit, IROVRr, soc_reg_addr(unit, IROVRr, port, 0), rv)

#define READ_IRPKTr(unit, port, rvp) \
	soc_reg_read(unit, IRPKTr, soc_reg_addr(unit, IRPKTr, port, 0), rvp)
#define WRITE_IRPKTr(unit, port, rv) \
	soc_reg_write(unit, IRPKTr, soc_reg_addr(unit, IRPKTr, port, 0), rv)

#define READ_IRPOKr(unit, port, rvp) \
	soc_reg_read(unit, IRPOKr, soc_reg_addr(unit, IRPOKr, port, 0), rvp)
#define WRITE_IRPOKr(unit, port, rv) \
	soc_reg_write(unit, IRPOKr, soc_reg_addr(unit, IRPOKr, port, 0), rv)

#define READ_IRPSEr(unit, port, rvp) \
	soc_reg_read(unit, IRPSEr, soc_reg_addr(unit, IRPSEr, port, 0), rvp)
#define WRITE_IRPSEr(unit, port, rv) \
	soc_reg_write(unit, IRPSEr, soc_reg_addr(unit, IRPSEr, port, 0), rv)

#define READ_IRSEL_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IRSEL_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IRSEL_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IRSEL_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_IRUCr(unit, port, rvp) \
	soc_reg_read(unit, IRUCr, soc_reg_addr(unit, IRUCr, port, 0), rvp)
#define WRITE_IRUCr(unit, port, rv) \
	soc_reg_write(unit, IRUCr, soc_reg_addr(unit, IRUCr, port, 0), rv)

#define READ_IRUNDr(unit, port, rvp) \
	soc_reg_read(unit, IRUNDr, soc_reg_addr(unit, IRUNDr, port, 0), rvp)
#define WRITE_IRUNDr(unit, port, rv) \
	soc_reg_write(unit, IRUNDr, soc_reg_addr(unit, IRUNDr, port, 0), rv)

#define READ_IRXCFr(unit, port, rvp) \
	soc_reg_read(unit, IRXCFr, soc_reg_addr(unit, IRXCFr, port, 0), rvp)
#define WRITE_IRXCFr(unit, port, rv) \
	soc_reg_write(unit, IRXCFr, soc_reg_addr(unit, IRXCFr, port, 0), rv)

#define READ_IRXPFr(unit, port, rvp) \
	soc_reg_read(unit, IRXPFr, soc_reg_addr(unit, IRXPFr, port, 0), rvp)
#define WRITE_IRXPFr(unit, port, rv) \
	soc_reg_write(unit, IRXPFr, soc_reg_addr(unit, IRXPFr, port, 0), rv)

#define READ_IRXPPr(unit, port, rvp) \
	soc_reg_read(unit, IRXPPr, soc_reg_addr(unit, IRXPPr, port, 0), rvp)
#define WRITE_IRXPPr(unit, port, rv) \
	soc_reg_write(unit, IRXPPr, soc_reg_addr(unit, IRXPPr, port, 0), rv)

#define READ_IRXUOr(unit, port, rvp) \
	soc_reg_read(unit, IRXUOr, soc_reg_addr(unit, IRXUOr, port, 0), rvp)
#define WRITE_IRXUOr(unit, port, rv) \
	soc_reg_write(unit, IRXUOr, soc_reg_addr(unit, IRXUOr, port, 0), rv)

#define READ_ISDISCr(unit, port, rvp) \
	soc_reg_read(unit, ISDISCr, soc_reg_addr(unit, ISDISCr, port, 0), rvp)
#define WRITE_ISDISCr(unit, port, rv) \
	soc_reg_write(unit, ISDISCr, soc_reg_addr(unit, ISDISCr, port, 0), rv)

#define READ_ISMODBLKr(unit, port, rvp) \
	soc_reg_read(unit, ISMODBLKr, soc_reg_addr(unit, ISMODBLKr, port, 0), rvp)
#define WRITE_ISMODBLKr(unit, port, rv) \
	soc_reg_write(unit, ISMODBLKr, soc_reg_addr(unit, ISMODBLKr, port, 0), rv)

#define READ_ISTAT_CAUSEr(unit, port, rvp) \
	soc_reg_read(unit, ISTAT_CAUSEr, soc_reg_addr(unit, ISTAT_CAUSEr, port, 0), rvp)
#define WRITE_ISTAT_CAUSEr(unit, port, rv) \
	soc_reg_write(unit, ISTAT_CAUSEr, soc_reg_addr(unit, ISTAT_CAUSEr, port, 0), rv)

#define READ_ISW1_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ISW1_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ISW1_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ISW1_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_ISW2_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, ISW2_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_ISW2_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, ISW2_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_IT64r(unit, port, rvp) \
	soc_reg_read(unit, IT64r, soc_reg_addr(unit, IT64r, port, 0), rvp)
#define WRITE_IT64r(unit, port, rv) \
	soc_reg_write(unit, IT64r, soc_reg_addr(unit, IT64r, port, 0), rv)

#define READ_IT127r(unit, port, rvp) \
	soc_reg_read(unit, IT127r, soc_reg_addr(unit, IT127r, port, 0), rvp)
#define WRITE_IT127r(unit, port, rv) \
	soc_reg_write(unit, IT127r, soc_reg_addr(unit, IT127r, port, 0), rv)

#define READ_IT255r(unit, port, rvp) \
	soc_reg_read(unit, IT255r, soc_reg_addr(unit, IT255r, port, 0), rvp)
#define WRITE_IT255r(unit, port, rv) \
	soc_reg_write(unit, IT255r, soc_reg_addr(unit, IT255r, port, 0), rv)

#define READ_IT511r(unit, port, rvp) \
	soc_reg_read(unit, IT511r, soc_reg_addr(unit, IT511r, port, 0), rvp)
#define WRITE_IT511r(unit, port, rv) \
	soc_reg_write(unit, IT511r, soc_reg_addr(unit, IT511r, port, 0), rv)

#define READ_IT1023r(unit, port, rvp) \
	soc_reg_read(unit, IT1023r, soc_reg_addr(unit, IT1023r, port, 0), rvp)
#define WRITE_IT1023r(unit, port, rv) \
	soc_reg_write(unit, IT1023r, soc_reg_addr(unit, IT1023r, port, 0), rv)

#define READ_IT1518r(unit, port, rvp) \
	soc_reg_read(unit, IT1518r, soc_reg_addr(unit, IT1518r, port, 0), rvp)
#define WRITE_IT1518r(unit, port, rv) \
	soc_reg_write(unit, IT1518r, soc_reg_addr(unit, IT1518r, port, 0), rv)

#define READ_IT2047r(unit, port, rvp) \
	soc_reg_read(unit, IT2047r, soc_reg_addr(unit, IT2047r, port, 0), rvp)
#define WRITE_IT2047r(unit, port, rv) \
	soc_reg_write(unit, IT2047r, soc_reg_addr(unit, IT2047r, port, 0), rv)

#define READ_IT4095r(unit, port, rvp) \
	soc_reg_read(unit, IT4095r, soc_reg_addr(unit, IT4095r, port, 0), rvp)
#define WRITE_IT4095r(unit, port, rv) \
	soc_reg_write(unit, IT4095r, soc_reg_addr(unit, IT4095r, port, 0), rv)

#define READ_IT8191r(unit, port, rvp) \
	soc_reg_read(unit, IT8191r, soc_reg_addr(unit, IT8191r, port, 0), rvp)
#define WRITE_IT8191r(unit, port, rv) \
	soc_reg_write(unit, IT8191r, soc_reg_addr(unit, IT8191r, port, 0), rv)

#define READ_IT9216r(unit, port, rvp) \
	soc_reg_read(unit, IT9216r, soc_reg_addr(unit, IT9216r, port, 0), rvp)
#define WRITE_IT9216r(unit, port, rv) \
	soc_reg_write(unit, IT9216r, soc_reg_addr(unit, IT9216r, port, 0), rv)

#define READ_IT16383r(unit, port, rvp) \
	soc_reg_read(unit, IT16383r, soc_reg_addr(unit, IT16383r, port, 0), rvp)
#define WRITE_IT16383r(unit, port, rv) \
	soc_reg_write(unit, IT16383r, soc_reg_addr(unit, IT16383r, port, 0), rv)

#define READ_ITABRTr(unit, port, rvp) \
	soc_reg_read(unit, ITABRTr, soc_reg_addr(unit, ITABRTr, port, 0), rvp)
#define WRITE_ITABRTr(unit, port, rv) \
	soc_reg_write(unit, ITABRTr, soc_reg_addr(unit, ITABRTr, port, 0), rv)

#define READ_ITAGEr(unit, port, rvp) \
	soc_reg_read(unit, ITAGEr, soc_reg_addr(unit, ITAGEr, port, 0), rvp)
#define WRITE_ITAGEr(unit, port, rv) \
	soc_reg_write(unit, ITAGEr, soc_reg_addr(unit, ITAGEr, port, 0), rv)

#define READ_ITBCAr(unit, port, rvp) \
	soc_reg_read(unit, ITBCAr, soc_reg_addr(unit, ITBCAr, port, 0), rvp)
#define WRITE_ITBCAr(unit, port, rv) \
	soc_reg_write(unit, ITBCAr, soc_reg_addr(unit, ITBCAr, port, 0), rv)

#define READ_ITBYTr(unit, port, rvp) \
	soc_reg_read(unit, ITBYTr, soc_reg_addr(unit, ITBYTr, port, 0), rvp)
#define WRITE_ITBYTr(unit, port, rv) \
	soc_reg_write(unit, ITBYTr, soc_reg_addr(unit, ITBYTr, port, 0), rv)

#define READ_ITERRr(unit, port, rvp) \
	soc_reg_read(unit, ITERRr, soc_reg_addr(unit, ITERRr, port, 0), rvp)
#define WRITE_ITERRr(unit, port, rv) \
	soc_reg_write(unit, ITERRr, soc_reg_addr(unit, ITERRr, port, 0), rv)

#define READ_ITFCSr(unit, port, rvp) \
	soc_reg_read(unit, ITFCSr, soc_reg_addr(unit, ITFCSr, port, 0), rvp)
#define WRITE_ITFCSr(unit, port, rv) \
	soc_reg_write(unit, ITFCSr, soc_reg_addr(unit, ITFCSr, port, 0), rv)

#define READ_ITFRGr(unit, port, rvp) \
	soc_reg_read(unit, ITFRGr, soc_reg_addr(unit, ITFRGr, port, 0), rvp)
#define WRITE_ITFRGr(unit, port, rv) \
	soc_reg_write(unit, ITFRGr, soc_reg_addr(unit, ITFRGr, port, 0), rv)

#define READ_ITHOLr(unit, port, rvp) \
	soc_reg_read(unit, ITHOLr, soc_reg_addr(unit, ITHOLr, port, 0), rvp)
#define WRITE_ITHOLr(unit, port, rv) \
	soc_reg_write(unit, ITHOLr, soc_reg_addr(unit, ITHOLr, port, 0), rv)

#define READ_ITIBPr(unit, port, rvp) \
	soc_reg_read(unit, ITIBPr, soc_reg_addr(unit, ITIBPr, port, 0), rvp)
#define WRITE_ITIBPr(unit, port, rv) \
	soc_reg_write(unit, ITIBPr, soc_reg_addr(unit, ITIBPr, port, 0), rv)

#define READ_ITIPr(unit, port, rvp) \
	soc_reg_read(unit, ITIPr, soc_reg_addr(unit, ITIPr, port, 0), rvp)
#define WRITE_ITIPr(unit, port, rv) \
	soc_reg_write(unit, ITIPr, soc_reg_addr(unit, ITIPr, port, 0), rv)

#define READ_ITIPDr(unit, port, rvp) \
	soc_reg_read(unit, ITIPDr, soc_reg_addr(unit, ITIPDr, port, 0), rvp)
#define WRITE_ITIPDr(unit, port, rv) \
	soc_reg_write(unit, ITIPDr, soc_reg_addr(unit, ITIPDr, port, 0), rv)

#define READ_ITMAXr(unit, port, rvp) \
	soc_reg_read(unit, ITMAXr, soc_reg_addr(unit, ITMAXr, port, 0), rvp)
#define WRITE_ITMAXr(unit, port, rv) \
	soc_reg_write(unit, ITMAXr, soc_reg_addr(unit, ITMAXr, port, 0), rv)

#define READ_ITMCAr(unit, port, rvp) \
	soc_reg_read(unit, ITMCAr, soc_reg_addr(unit, ITMCAr, port, 0), rvp)
#define WRITE_ITMCAr(unit, port, rv) \
	soc_reg_write(unit, ITMCAr, soc_reg_addr(unit, ITMCAr, port, 0), rv)

#define READ_ITOVRr(unit, port, rvp) \
	soc_reg_read(unit, ITOVRr, soc_reg_addr(unit, ITOVRr, port, 0), rvp)
#define WRITE_ITOVRr(unit, port, rv) \
	soc_reg_write(unit, ITOVRr, soc_reg_addr(unit, ITOVRr, port, 0), rv)

#define READ_ITPKTr(unit, port, rvp) \
	soc_reg_read(unit, ITPKTr, soc_reg_addr(unit, ITPKTr, port, 0), rvp)
#define WRITE_ITPKTr(unit, port, rv) \
	soc_reg_write(unit, ITPKTr, soc_reg_addr(unit, ITPKTr, port, 0), rv)

#define READ_ITPOKr(unit, port, rvp) \
	soc_reg_read(unit, ITPOKr, soc_reg_addr(unit, ITPOKr, port, 0), rvp)
#define WRITE_ITPOKr(unit, port, rv) \
	soc_reg_write(unit, ITPOKr, soc_reg_addr(unit, ITPOKr, port, 0), rv)

#define READ_ITPRGr(unit, port, rvp) \
	soc_reg_read(unit, ITPRGr, soc_reg_addr(unit, ITPRGr, port, 0), rvp)
#define WRITE_ITPRGr(unit, port, rv) \
	soc_reg_write(unit, ITPRGr, soc_reg_addr(unit, ITPRGr, port, 0), rv)

#define READ_ITPSEr(unit, port, rvp) \
	soc_reg_read(unit, ITPSEr, soc_reg_addr(unit, ITPSEr, port, 0), rvp)
#define WRITE_ITPSEr(unit, port, rv) \
	soc_reg_write(unit, ITPSEr, soc_reg_addr(unit, ITPSEr, port, 0), rv)

#define READ_ITR64r(unit, port, rvp) \
	soc_reg_read(unit, ITR64r, soc_reg_addr(unit, ITR64r, port, 0), rvp)
#define WRITE_ITR64r(unit, port, rv) \
	soc_reg_write(unit, ITR64r, soc_reg_addr(unit, ITR64r, port, 0), rv)

#define READ_ITR127r(unit, port, rvp) \
	soc_reg_read(unit, ITR127r, soc_reg_addr(unit, ITR127r, port, 0), rvp)
#define WRITE_ITR127r(unit, port, rv) \
	soc_reg_write(unit, ITR127r, soc_reg_addr(unit, ITR127r, port, 0), rv)

#define READ_ITR255r(unit, port, rvp) \
	soc_reg_read(unit, ITR255r, soc_reg_addr(unit, ITR255r, port, 0), rvp)
#define WRITE_ITR255r(unit, port, rv) \
	soc_reg_write(unit, ITR255r, soc_reg_addr(unit, ITR255r, port, 0), rv)

#define READ_ITR511r(unit, port, rvp) \
	soc_reg_read(unit, ITR511r, soc_reg_addr(unit, ITR511r, port, 0), rvp)
#define WRITE_ITR511r(unit, port, rv) \
	soc_reg_write(unit, ITR511r, soc_reg_addr(unit, ITR511r, port, 0), rv)

#define READ_ITR1023r(unit, port, rvp) \
	soc_reg_read(unit, ITR1023r, soc_reg_addr(unit, ITR1023r, port, 0), rvp)
#define WRITE_ITR1023r(unit, port, rv) \
	soc_reg_write(unit, ITR1023r, soc_reg_addr(unit, ITR1023r, port, 0), rv)

#define READ_ITR1522r(unit, port, rvp) \
	soc_reg_read(unit, ITR1522r, soc_reg_addr(unit, ITR1522r, port, 0), rvp)
#define WRITE_ITR1522r(unit, port, rv) \
	soc_reg_write(unit, ITR1522r, soc_reg_addr(unit, ITR1522r, port, 0), rv)

#define READ_ITRMAXr(unit, port, rvp) \
	soc_reg_read(unit, ITRMAXr, soc_reg_addr(unit, ITRMAXr, port, 0), rvp)
#define WRITE_ITRMAXr(unit, port, rv) \
	soc_reg_write(unit, ITRMAXr, soc_reg_addr(unit, ITRMAXr, port, 0), rv)

#define READ_ITUCr(unit, port, rvp) \
	soc_reg_read(unit, ITUCr, soc_reg_addr(unit, ITUCr, port, 0), rvp)
#define WRITE_ITUCr(unit, port, rv) \
	soc_reg_write(unit, ITUCr, soc_reg_addr(unit, ITUCr, port, 0), rv)

#define READ_ITUFLr(unit, port, rvp) \
	soc_reg_read(unit, ITUFLr, soc_reg_addr(unit, ITUFLr, port, 0), rvp)
#define WRITE_ITUFLr(unit, port, rv) \
	soc_reg_write(unit, ITUFLr, soc_reg_addr(unit, ITUFLr, port, 0), rv)

#define READ_ITXPFr(unit, port, rvp) \
	soc_reg_read(unit, ITXPFr, soc_reg_addr(unit, ITXPFr, port, 0), rvp)
#define WRITE_ITXPFr(unit, port, rv) \
	soc_reg_write(unit, ITXPFr, soc_reg_addr(unit, ITXPFr, port, 0), rv)

#define READ_ITXPPr(unit, port, rvp) \
	soc_reg_read(unit, ITXPPr, soc_reg_addr(unit, ITXPPr, port, 0), rvp)
#define WRITE_ITXPPr(unit, port, rv) \
	soc_reg_write(unit, ITXPPr, soc_reg_addr(unit, ITXPPr, port, 0), rv)

#define READ_IUCASTr(unit, port, rvp) \
	soc_reg_read(unit, IUCASTr, soc_reg_addr(unit, IUCASTr, port, 0), rvp)
#define WRITE_IUCASTr(unit, port, rv) \
	soc_reg_write(unit, IUCASTr, soc_reg_addr(unit, IUCASTr, port, 0), rv)

#define READ_IUMC_TRUNK_BLOCK_MASKr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IUMC_TRUNK_BLOCK_MASKr, port, idx), rvp)
#define WRITE_IUMC_TRUNK_BLOCK_MASKr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IUMC_TRUNK_BLOCK_MASKr, port, idx), rv)

#define READ_IUNHGIr(unit, port, rvp) \
	soc_reg_read(unit, IUNHGIr, soc_reg_addr(unit, IUNHGIr, port, 0), rvp)
#define WRITE_IUNHGIr(unit, port, rv) \
	soc_reg_write(unit, IUNHGIr, soc_reg_addr(unit, IUNHGIr, port, 0), rv)

#define READ_IUNKHDRr(unit, port, rvp) \
	soc_reg_read(unit, IUNKHDRr, soc_reg_addr(unit, IUNKHDRr, port, 0), rvp)
#define WRITE_IUNKHDRr(unit, port, rv) \
	soc_reg_write(unit, IUNKHDRr, soc_reg_addr(unit, IUNKHDRr, port, 0), rv)

#define READ_IUNKNOWN_MCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg_read(unit, IUNKNOWN_MCAST_BLOCK_MASKr, soc_reg_addr(unit, IUNKNOWN_MCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_IUNKNOWN_MCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg_write(unit, IUNKNOWN_MCAST_BLOCK_MASKr, soc_reg_addr(unit, IUNKNOWN_MCAST_BLOCK_MASKr, port, 0), rv)

#define READ_IUNKNOWN_MCAST_BLOCK_MASK_64r(unit, port, rvp) \
	soc_reg_read(unit, IUNKNOWN_MCAST_BLOCK_MASK_64r, soc_reg_addr(unit, IUNKNOWN_MCAST_BLOCK_MASK_64r, port, 0), rvp)
#define WRITE_IUNKNOWN_MCAST_BLOCK_MASK_64r(unit, port, rv) \
	soc_reg_write(unit, IUNKNOWN_MCAST_BLOCK_MASK_64r, soc_reg_addr(unit, IUNKNOWN_MCAST_BLOCK_MASK_64r, port, 0), rv)

#define READ_IUNKNOWN_MCAST_BLOCK_MASK_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IUNKNOWN_MCAST_BLOCK_MASK_HIr, port, 0), rvp)
#define WRITE_IUNKNOWN_MCAST_BLOCK_MASK_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IUNKNOWN_MCAST_BLOCK_MASK_HIr, port, 0), rv)

#define READ_IUNKNOWN_OPCODEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IUNKNOWN_OPCODEr, port, 0), rvp)
#define WRITE_IUNKNOWN_OPCODEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IUNKNOWN_OPCODEr, port, 0), rv)

#define READ_IUNKNOWN_OPCODE_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IUNKNOWN_OPCODE_HIr, port, 0), rvp)
#define WRITE_IUNKNOWN_OPCODE_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IUNKNOWN_OPCODE_HIr, port, 0), rv)

#define READ_IUNKNOWN_UCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg_read(unit, IUNKNOWN_UCAST_BLOCK_MASKr, soc_reg_addr(unit, IUNKNOWN_UCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_IUNKNOWN_UCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg_write(unit, IUNKNOWN_UCAST_BLOCK_MASKr, soc_reg_addr(unit, IUNKNOWN_UCAST_BLOCK_MASKr, port, 0), rv)

#define READ_IUNKNOWN_UCAST_BLOCK_MASK_64r(unit, port, rvp) \
	soc_reg_read(unit, IUNKNOWN_UCAST_BLOCK_MASK_64r, soc_reg_addr(unit, IUNKNOWN_UCAST_BLOCK_MASK_64r, port, 0), rvp)
#define WRITE_IUNKNOWN_UCAST_BLOCK_MASK_64r(unit, port, rv) \
	soc_reg_write(unit, IUNKNOWN_UCAST_BLOCK_MASK_64r, soc_reg_addr(unit, IUNKNOWN_UCAST_BLOCK_MASK_64r, port, 0), rv)

#define READ_IUNKNOWN_UCAST_BLOCK_MASK_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IUNKNOWN_UCAST_BLOCK_MASK_HIr, port, 0), rvp)
#define WRITE_IUNKNOWN_UCAST_BLOCK_MASK_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IUNKNOWN_UCAST_BLOCK_MASK_HIr, port, 0), rv)

#define READ_IUNKOPCr(unit, port, rvp) \
	soc_reg_read(unit, IUNKOPCr, soc_reg_addr(unit, IUNKOPCr, port, 0), rvp)
#define WRITE_IUNKOPCr(unit, port, rv) \
	soc_reg_write(unit, IUNKOPCr, soc_reg_addr(unit, IUNKOPCr, port, 0), rv)

#define READ_IUSER_TRUNK_HASH_SELECTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IUSER_TRUNK_HASH_SELECTr, port, 0), rvp)
#define WRITE_IUSER_TRUNK_HASH_SELECTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IUSER_TRUNK_HASH_SELECTr, port, 0), rv)

#define READ_IVLAN_CONTROLr(unit, port, rvp) \
	soc_reg_read(unit, IVLAN_CONTROLr, soc_reg_addr(unit, IVLAN_CONTROLr, port, 0), rvp)
#define WRITE_IVLAN_CONTROLr(unit, port, rv) \
	soc_reg_write(unit, IVLAN_CONTROLr, soc_reg_addr(unit, IVLAN_CONTROLr, port, 0), rv)

#define READ_IVLAN_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IVLAN_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IVLAN_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IVLAN_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_IVTX_ENTRY_SRCH_AVAILr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IVTX_ENTRY_SRCH_AVAILr, REG_PORT_ANY, 0), rvp)
#define WRITE_IVTX_ENTRY_SRCH_AVAILr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IVTX_ENTRY_SRCH_AVAILr, REG_PORT_ANY, 0), rv)

#define READ_IVXLT_TM_REG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IVXLT_TM_REG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_IVXLT_TM_REG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IVXLT_TM_REG_1r, REG_PORT_ANY, 0), rv)

#define READ_IVXLT_TM_REG_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, IVXLT_TM_REG_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_IVXLT_TM_REG_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, IVXLT_TM_REG_2r, REG_PORT_ANY, 0), rv)

#define READ_KNOWN_MCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, KNOWN_MCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_KNOWN_MCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, KNOWN_MCAST_BLOCK_MASKr, port, 0), rv)

#define READ_KNOWN_MCAST_BLOCK_MASK_64r(unit, port, rvp) \
	soc_reg_read(unit, KNOWN_MCAST_BLOCK_MASK_64r, soc_reg_addr(unit, KNOWN_MCAST_BLOCK_MASK_64r, port, 0), rvp)
#define WRITE_KNOWN_MCAST_BLOCK_MASK_64r(unit, port, rv) \
	soc_reg_write(unit, KNOWN_MCAST_BLOCK_MASK_64r, soc_reg_addr(unit, KNOWN_MCAST_BLOCK_MASK_64r, port, 0), rv)

#define READ_L2MC_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2MC_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2MC_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2MC_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L2MC_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2MC_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2MC_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2MC_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L2MC_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2MC_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2MC_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2MC_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_AGE_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_AGE_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_AGE_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_AGE_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_L2_AGE_DEBUG_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_AGE_DEBUG_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_AGE_DEBUG_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_AGE_DEBUG_2r, REG_PORT_ANY, 0), rv)

#define READ_L2_AGE_TIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_AGE_TIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_AGE_TIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_AGE_TIMERr, REG_PORT_ANY, 0), rv)

#define READ_L2_AUX_HASH_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_AUX_HASH_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_AUX_HASH_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_AUX_HASH_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L2_ENTRY_ADDR_MASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ENTRY_ADDR_MASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ENTRY_ADDR_MASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ENTRY_ADDR_MASKr, REG_PORT_ANY, 0), rv)

#define READ_L2_ENTRY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ENTRY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ENTRY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ENTRY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L2_ENTRY_DBGCTRL0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ENTRY_DBGCTRL0r, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ENTRY_DBGCTRL0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ENTRY_DBGCTRL0r, REG_PORT_ANY, 0), rv)

#define READ_L2_ENTRY_DBGCTRL1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ENTRY_DBGCTRL1r, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ENTRY_DBGCTRL1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ENTRY_DBGCTRL1r, REG_PORT_ANY, 0), rv)

#define READ_L2_ENTRY_DBGCTRL_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ENTRY_DBGCTRL_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ENTRY_DBGCTRL_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ENTRY_DBGCTRL_0r, REG_PORT_ANY, 0), rv)

#define READ_L2_ENTRY_DBGCTRL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ENTRY_DBGCTRL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ENTRY_DBGCTRL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ENTRY_DBGCTRL_1r, REG_PORT_ANY, 0), rv)

#define READ_L2_ENTRY_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ENTRY_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ENTRY_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ENTRY_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L2_ENTRY_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ENTRY_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ENTRY_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ENTRY_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_ENTRY_PARITY_STATUS_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ENTRY_PARITY_STATUS_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ENTRY_PARITY_STATUS_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ENTRY_PARITY_STATUS_0r, REG_PORT_ANY, 0), rv)

#define READ_L2_ENTRY_PARITY_STATUS_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ENTRY_PARITY_STATUS_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ENTRY_PARITY_STATUS_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ENTRY_PARITY_STATUS_1r, REG_PORT_ANY, 0), rv)

#define READ_L2_HITDA_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_HITDA_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_HITDA_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_HITDA_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L2_HITSA_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_HITSA_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_HITSA_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_HITSA_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L2_HIT_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_HIT_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_HIT_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_HIT_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L2_HIT_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_HIT_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_HIT_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_HIT_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L2_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_ISr, REG_PORT_ANY, 0), rv)

#define READ_L2_LEARN_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_LEARN_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_LEARN_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_LEARN_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L2_MOD_FIFO_CNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_MOD_FIFO_CNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_MOD_FIFO_CNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_MOD_FIFO_CNTr, REG_PORT_ANY, 0), rv)

#define READ_L2_MOD_FIFO_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_MOD_FIFO_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_MOD_FIFO_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_MOD_FIFO_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L2_MOD_FIFO_RD_PTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_MOD_FIFO_RD_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_MOD_FIFO_RD_PTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_MOD_FIFO_RD_PTRr, REG_PORT_ANY, 0), rv)

#define READ_L2_MOD_FIFO_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_MOD_FIFO_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_MOD_FIFO_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_MOD_FIFO_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_MOD_FIFO_WR_PTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_MOD_FIFO_WR_PTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_MOD_FIFO_WR_PTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_MOD_FIFO_WR_PTRr, REG_PORT_ANY, 0), rv)

#define READ_L2_PP_CTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_PP_CTr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_PP_CTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_PP_CTr, REG_PORT_ANY, 0), rv)

#define READ_L2_PP_SAMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_PP_SAMr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_PP_SAMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_PP_SAMr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_DBG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_DBG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_S10_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_S10_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_CAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_CAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_CAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_DATA_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_DATA_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_DATA_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_DATA_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_ENTRY_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_ENTRY_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_ENTRY_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_ENTRY_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L2_USER_SAMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L2_USER_SAMr, REG_PORT_ANY, 0), rvp)
#define WRITE_L2_USER_SAMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L2_USER_SAMr, REG_PORT_ANY, 0), rv)

#define READ_L3MC_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3MC_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3MC_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3MC_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L3MC_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3MC_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3MC_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3MC_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L3MC_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3MC_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3MC_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3MC_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_AUX_HASH_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_AUX_HASH_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_AUX_HASH_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_AUX_HASH_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_128_CAM_BIST_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_128_CAM_BIST_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_128_CAM_BIST_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_128_CAM_BIST_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_128_CAM_BIST_DBG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_128_CAM_BIST_DBG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_128_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_128_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_128_CAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_128_CAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_128_CAM_DBGCTRL0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_DBGCTRL0r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_128_CAM_DBGCTRL0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_DBGCTRL0r, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_128_CAM_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_128_CAM_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_128_CAM_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_128_DATA_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_128_DATA_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_128_DATA_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_128_DATA_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_BIST_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_BIST_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_BIST_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_BIST_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_BIST_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_BIST_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_BIST_DBG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_BIST_DBG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_BIST_S10_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_BIST_S10_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_BIST_S12_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S12_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_BIST_S12_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S12_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_CONTROL0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_CONTROL0r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_CONTROL0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_CONTROL0r, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_CONTROL1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_CONTROL1r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_CONTROL1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_CONTROL1r, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_DBGCTRL0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DBGCTRL0r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_DBGCTRL0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DBGCTRL0r, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_DBGCTRL1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DBGCTRL1r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_DBGCTRL1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DBGCTRL1r, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_DBGCTRL2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DBGCTRL2r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_DBGCTRL2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DBGCTRL2r, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_DBGCTRL3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DBGCTRL3r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_DBGCTRL3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DBGCTRL3r, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_DEBUG_DATA_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DEBUG_DATA_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_DEBUG_DATA_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DEBUG_DATA_0r, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_DEBUG_DATA_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DEBUG_DATA_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_DEBUG_DATA_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DEBUG_DATA_1r, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_DEBUG_DATA_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DEBUG_DATA_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_DEBUG_DATA_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DEBUG_DATA_2r, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_DEBUG_SENDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DEBUG_SENDr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_DEBUG_SENDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_DEBUG_SENDr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_CAM_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_CAM_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_CAM_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_CAM_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_DATA_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_DATA_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_DATA_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_DATA_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_DEFIP_RPF_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_DEFIP_RPF_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_DEFIP_RPF_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_DEFIP_RPF_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L3_ECMP_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_ECMP_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_ECMP_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_ECMP_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_L3_ENTRY_ADDR_MASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_ENTRY_ADDR_MASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_ENTRY_ADDR_MASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_ENTRY_ADDR_MASKr, REG_PORT_ANY, 0), rv)

#define READ_L3_ENTRY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_ENTRY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_ENTRY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_ENTRY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L3_ENTRY_DBGCTRL0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_ENTRY_DBGCTRL0r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_ENTRY_DBGCTRL0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_ENTRY_DBGCTRL0r, REG_PORT_ANY, 0), rv)

#define READ_L3_ENTRY_DBGCTRL1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_ENTRY_DBGCTRL1r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_ENTRY_DBGCTRL1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_ENTRY_DBGCTRL1r, REG_PORT_ANY, 0), rv)

#define READ_L3_ENTRY_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_ENTRY_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_ENTRY_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_ENTRY_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L3_ENTRY_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_ENTRY_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_ENTRY_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_ENTRY_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_ENTRY_PARITY_STATUS_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_ENTRY_PARITY_STATUS_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_ENTRY_PARITY_STATUS_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_ENTRY_PARITY_STATUS_0r, REG_PORT_ANY, 0), rv)

#define READ_L3_ENTRY_PARITY_STATUS_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_ENTRY_PARITY_STATUS_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_ENTRY_PARITY_STATUS_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_ENTRY_PARITY_STATUS_1r, REG_PORT_ANY, 0), rv)

#define READ_L3_HIT_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_HIT_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_HIT_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_HIT_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_L3_IIF_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_IIF_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_IIF_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_IIF_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L3_IIF_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_IIF_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_IIF_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_IIF_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_IPMC_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_IPMC_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_IPMC_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_IPMC_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L3_IPMC_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_IPMC_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_IPMC_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_IPMC_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_MTU_VALUES_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_MTU_VALUES_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_MTU_VALUES_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_MTU_VALUES_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L3_MTU_VALUES_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_MTU_VALUES_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_MTU_VALUES_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_MTU_VALUES_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_TUNNEL_CAM_BIST_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_TUNNEL_CAM_BIST_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_L3_TUNNEL_CAM_BIST_DBG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_TUNNEL_CAM_BIST_DBG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_L3_TUNNEL_CAM_BIST_S10_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_TUNNEL_CAM_BIST_S10_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_TUNNEL_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_TUNNEL_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_TUNNEL_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_TUNNEL_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_TUNNEL_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_TUNNEL_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_TUNNEL_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_TUNNEL_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_TUNNEL_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_TUNNEL_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_TUNNEL_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_TUNNEL_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_L3_TUNNEL_CAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_TUNNEL_CAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_L3_TUNNEL_CAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_L3_TUNNEL_CAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, L3_TUNNEL_CAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_LCCCOUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LCCCOUNTr, port, 0), rvp)
#define WRITE_LCCCOUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LCCCOUNTr, port, 0), rv)

#define READ_LINK_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LINK_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_LINK_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LINK_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_LINK_STATUS_64r(unit, rvp) \
	soc_reg_read(unit, LINK_STATUS_64r, soc_reg_addr(unit, LINK_STATUS_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_LINK_STATUS_64r(unit, rv) \
	soc_reg_write(unit, LINK_STATUS_64r, soc_reg_addr(unit, LINK_STATUS_64r, REG_PORT_ANY, 0), rv)

#define READ_LLC_MATCHr(unit, port, rvp) \
	soc_reg_read(unit, LLC_MATCHr, soc_reg_addr(unit, LLC_MATCHr, port, 0), rvp)
#define WRITE_LLC_MATCHr(unit, port, rv) \
	soc_reg_write(unit, LLC_MATCHr, soc_reg_addr(unit, LLC_MATCHr, port, 0), rv)

#define READ_LOCAL_SW_DISABLE_CTRLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LOCAL_SW_DISABLE_CTRLr, port, 0), rvp)
#define WRITE_LOCAL_SW_DISABLE_CTRLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LOCAL_SW_DISABLE_CTRLr, port, 0), rv)

#define READ_LOCAL_SW_DISABLE_DEFAULT_PBMr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LOCAL_SW_DISABLE_DEFAULT_PBMr, port, 0), rvp)
#define WRITE_LOCAL_SW_DISABLE_DEFAULT_PBMr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LOCAL_SW_DISABLE_DEFAULT_PBMr, port, 0), rv)

#define READ_LOCAL_SW_DISABLE_DEFAULT_PBM_64r(unit, port, rvp) \
	soc_reg_read(unit, LOCAL_SW_DISABLE_DEFAULT_PBM_64r, soc_reg_addr(unit, LOCAL_SW_DISABLE_DEFAULT_PBM_64r, port, 0), rvp)
#define WRITE_LOCAL_SW_DISABLE_DEFAULT_PBM_64r(unit, port, rv) \
	soc_reg_write(unit, LOCAL_SW_DISABLE_DEFAULT_PBM_64r, soc_reg_addr(unit, LOCAL_SW_DISABLE_DEFAULT_PBM_64r, port, 0), rv)

#define READ_LOCAL_SW_DISABLE_DEFAULT_PBM_MIRRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LOCAL_SW_DISABLE_DEFAULT_PBM_MIRRr, port, 0), rvp)
#define WRITE_LOCAL_SW_DISABLE_DEFAULT_PBM_MIRRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LOCAL_SW_DISABLE_DEFAULT_PBM_MIRRr, port, 0), rv)

#define READ_LOCAL_SW_DISABLE_DEFAULT_PBM_MIRR_64r(unit, port, rvp) \
	soc_reg_read(unit, LOCAL_SW_DISABLE_DEFAULT_PBM_MIRR_64r, soc_reg_addr(unit, LOCAL_SW_DISABLE_DEFAULT_PBM_MIRR_64r, port, 0), rvp)
#define WRITE_LOCAL_SW_DISABLE_DEFAULT_PBM_MIRR_64r(unit, port, rv) \
	soc_reg_write(unit, LOCAL_SW_DISABLE_DEFAULT_PBM_MIRR_64r, soc_reg_addr(unit, LOCAL_SW_DISABLE_DEFAULT_PBM_MIRR_64r, port, 0), rv)

#define READ_LOWWATERMARKERr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LOWWATERMARKERr, port, 0), rvp)
#define WRITE_LOWWATERMARKERr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LOWWATERMARKERr, port, 0), rv)

#define READ_LPM_DUP_MAPPING_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LPM_DUP_MAPPING_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_LPM_DUP_MAPPING_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LPM_DUP_MAPPING_0r, REG_PORT_ANY, 0), rv)

#define READ_LPM_DUP_MAPPING_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LPM_DUP_MAPPING_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_LPM_DUP_MAPPING_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LPM_DUP_MAPPING_1r, REG_PORT_ANY, 0), rv)

#define READ_LPM_END_OVRDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LPM_END_OVRDr, REG_PORT_ANY, 0), rvp)
#define WRITE_LPM_END_OVRDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LPM_END_OVRDr, REG_PORT_ANY, 0), rv)

#define READ_LPM_ENTRY_DUPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LPM_ENTRY_DUPr, REG_PORT_ANY, 0), rvp)
#define WRITE_LPM_ENTRY_DUPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LPM_ENTRY_DUPr, REG_PORT_ANY, 0), rv)

#define READ_LPM_ENTRY_DUP_AVAILr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LPM_ENTRY_DUP_AVAILr, REG_PORT_ANY, 0), rvp)
#define WRITE_LPM_ENTRY_DUP_AVAILr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LPM_ENTRY_DUP_AVAILr, REG_PORT_ANY, 0), rv)

#define READ_LPM_ENTRY_DUP_BLKCNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LPM_ENTRY_DUP_BLKCNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_LPM_ENTRY_DUP_BLKCNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LPM_ENTRY_DUP_BLKCNTr, REG_PORT_ANY, 0), rv)

#define READ_LPM_ENTRY_SRCH_AVAILr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LPM_ENTRY_SRCH_AVAILr, REG_PORT_ANY, 0), rvp)
#define WRITE_LPM_ENTRY_SRCH_AVAILr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LPM_ENTRY_SRCH_AVAILr, REG_PORT_ANY, 0), rv)

#define READ_LPM_ENTRY_SRCH_BLKCNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LPM_ENTRY_SRCH_BLKCNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_LPM_ENTRY_SRCH_BLKCNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LPM_ENTRY_SRCH_BLKCNTr, REG_PORT_ANY, 0), rv)

#define READ_LPM_ENTRY_VLDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LPM_ENTRY_VLDr, REG_PORT_ANY, 0), rvp)
#define WRITE_LPM_ENTRY_VLDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LPM_ENTRY_VLDr, REG_PORT_ANY, 0), rv)

#define READ_LPM_SRCH_MAPPING_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LPM_SRCH_MAPPING_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_LPM_SRCH_MAPPING_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LPM_SRCH_MAPPING_0r, REG_PORT_ANY, 0), rv)

#define READ_LPM_SRCH_MAPPING_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LPM_SRCH_MAPPING_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_LPM_SRCH_MAPPING_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LPM_SRCH_MAPPING_1r, REG_PORT_ANY, 0), rv)

#define READ_LPM_START_OVRDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LPM_START_OVRDr, REG_PORT_ANY, 0), rvp)
#define WRITE_LPM_START_OVRDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LPM_START_OVRDr, REG_PORT_ANY, 0), rv)

#define READ_LPM_TOTAL_OVRDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LPM_TOTAL_OVRDr, REG_PORT_ANY, 0), rvp)
#define WRITE_LPM_TOTAL_OVRDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LPM_TOTAL_OVRDr, REG_PORT_ANY, 0), rv)

#define READ_LWMCOSCELLSETLIMITr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, LWMCOSCELLSETLIMITr, port, idx), rvp)
#define WRITE_LWMCOSCELLSETLIMITr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, LWMCOSCELLSETLIMITr, port, idx), rv)

#define READ_MAC_0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAC_0r, port, 0), rvp)
#define WRITE_MAC_0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAC_0r, port, 0), rv)

#define READ_MAC_1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAC_1r, port, 0), rvp)
#define WRITE_MAC_1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAC_1r, port, 0), rv)

#define READ_MAC_BLOCK_TABLEr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAC_BLOCK_TABLEr, REG_PORT_ANY, idx), rvp)
#define WRITE_MAC_BLOCK_TABLEr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAC_BLOCK_TABLEr, REG_PORT_ANY, idx), rv)

#define READ_MAC_CNTMAXSZr(unit, port, rvp) \
	soc_reg_read(unit, MAC_CNTMAXSZr, soc_reg_addr(unit, MAC_CNTMAXSZr, port, 0), rvp)
#define WRITE_MAC_CNTMAXSZr(unit, port, rv) \
	soc_reg_write(unit, MAC_CNTMAXSZr, soc_reg_addr(unit, MAC_CNTMAXSZr, port, 0), rv)

#define READ_MAC_CORESPARE0r(unit, port, rvp) \
	soc_reg_read(unit, MAC_CORESPARE0r, soc_reg_addr(unit, MAC_CORESPARE0r, port, 0), rvp)
#define WRITE_MAC_CORESPARE0r(unit, port, rv) \
	soc_reg_write(unit, MAC_CORESPARE0r, soc_reg_addr(unit, MAC_CORESPARE0r, port, 0), rv)

#define READ_MAC_CTRLr(unit, port, rvp) \
	soc_reg_read(unit, MAC_CTRLr, soc_reg_addr(unit, MAC_CTRLr, port, 0), rvp)
#define WRITE_MAC_CTRLr(unit, port, rv) \
	soc_reg_write(unit, MAC_CTRLr, soc_reg_addr(unit, MAC_CTRLr, port, 0), rv)

#define READ_MAC_LIMIT_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAC_LIMIT_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MAC_LIMIT_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAC_LIMIT_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_MAC_LIMIT_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAC_LIMIT_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MAC_LIMIT_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAC_LIMIT_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_MAC_LIMIT_RAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAC_LIMIT_RAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MAC_LIMIT_RAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAC_LIMIT_RAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_MAC_MODEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAC_MODEr, port, 0), rvp)
#define WRITE_MAC_MODEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAC_MODEr, port, 0), rv)

#define READ_MAC_RXCTRLr(unit, port, rvp) \
	soc_reg_read(unit, MAC_RXCTRLr, soc_reg_addr(unit, MAC_RXCTRLr, port, 0), rvp)
#define WRITE_MAC_RXCTRLr(unit, port, rv) \
	soc_reg_write(unit, MAC_RXCTRLr, soc_reg_addr(unit, MAC_RXCTRLr, port, 0), rv)

#define READ_MAC_RXLLFCMSGCNTr(unit, port, rvp) \
	soc_reg_read(unit, MAC_RXLLFCMSGCNTr, soc_reg_addr(unit, MAC_RXLLFCMSGCNTr, port, 0), rvp)
#define WRITE_MAC_RXLLFCMSGCNTr(unit, port, rv) \
	soc_reg_write(unit, MAC_RXLLFCMSGCNTr, soc_reg_addr(unit, MAC_RXLLFCMSGCNTr, port, 0), rv)

#define READ_MAC_RXLLFCMSGFLDSr(unit, port, rvp) \
	soc_reg_read(unit, MAC_RXLLFCMSGFLDSr, soc_reg_addr(unit, MAC_RXLLFCMSGFLDSr, port, 0), rvp)
#define WRITE_MAC_RXLLFCMSGFLDSr(unit, port, rv) \
	soc_reg_write(unit, MAC_RXLLFCMSGFLDSr, soc_reg_addr(unit, MAC_RXLLFCMSGFLDSr, port, 0), rv)

#define READ_MAC_RXLSSCTRLr(unit, port, rvp) \
	soc_reg_read(unit, MAC_RXLSSCTRLr, soc_reg_addr(unit, MAC_RXLSSCTRLr, port, 0), rvp)
#define WRITE_MAC_RXLSSCTRLr(unit, port, rv) \
	soc_reg_write(unit, MAC_RXLSSCTRLr, soc_reg_addr(unit, MAC_RXLSSCTRLr, port, 0), rv)

#define READ_MAC_RXLSSSTATr(unit, port, rvp) \
	soc_reg_read(unit, MAC_RXLSSSTATr, soc_reg_addr(unit, MAC_RXLSSSTATr, port, 0), rvp)
#define WRITE_MAC_RXLSSSTATr(unit, port, rv) \
	soc_reg_write(unit, MAC_RXLSSSTATr, soc_reg_addr(unit, MAC_RXLSSSTATr, port, 0), rv)

#define READ_MAC_RXMACSAr(unit, port, rvp) \
	soc_reg_read(unit, MAC_RXMACSAr, soc_reg_addr(unit, MAC_RXMACSAr, port, 0), rvp)
#define WRITE_MAC_RXMACSAr(unit, port, rv) \
	soc_reg_write(unit, MAC_RXMACSAr, soc_reg_addr(unit, MAC_RXMACSAr, port, 0), rv)

#define READ_MAC_RXMAXSZr(unit, port, rvp) \
	soc_reg_read(unit, MAC_RXMAXSZr, soc_reg_addr(unit, MAC_RXMAXSZr, port, 0), rvp)
#define WRITE_MAC_RXMAXSZr(unit, port, rv) \
	soc_reg_write(unit, MAC_RXMAXSZr, soc_reg_addr(unit, MAC_RXMAXSZr, port, 0), rv)

#define READ_MAC_RXMUXCTRLr(unit, port, rvp) \
	soc_reg_read(unit, MAC_RXMUXCTRLr, soc_reg_addr(unit, MAC_RXMUXCTRLr, port, 0), rvp)
#define WRITE_MAC_RXMUXCTRLr(unit, port, rv) \
	soc_reg_write(unit, MAC_RXMUXCTRLr, soc_reg_addr(unit, MAC_RXMUXCTRLr, port, 0), rv)

#define READ_MAC_RXSPARE0r(unit, port, rvp) \
	soc_reg_read(unit, MAC_RXSPARE0r, soc_reg_addr(unit, MAC_RXSPARE0r, port, 0), rvp)
#define WRITE_MAC_RXSPARE0r(unit, port, rv) \
	soc_reg_write(unit, MAC_RXSPARE0r, soc_reg_addr(unit, MAC_RXSPARE0r, port, 0), rv)

#define READ_MAC_TXCTRLr(unit, port, rvp) \
	soc_reg_read(unit, MAC_TXCTRLr, soc_reg_addr(unit, MAC_TXCTRLr, port, 0), rvp)
#define WRITE_MAC_TXCTRLr(unit, port, rv) \
	soc_reg_write(unit, MAC_TXCTRLr, soc_reg_addr(unit, MAC_TXCTRLr, port, 0), rv)

#define READ_MAC_TXLLFCCTRLr(unit, port, rvp) \
	soc_reg_read(unit, MAC_TXLLFCCTRLr, soc_reg_addr(unit, MAC_TXLLFCCTRLr, port, 0), rvp)
#define WRITE_MAC_TXLLFCCTRLr(unit, port, rv) \
	soc_reg_write(unit, MAC_TXLLFCCTRLr, soc_reg_addr(unit, MAC_TXLLFCCTRLr, port, 0), rv)

#define READ_MAC_TXLLFCMSGFLDSr(unit, port, rvp) \
	soc_reg_read(unit, MAC_TXLLFCMSGFLDSr, soc_reg_addr(unit, MAC_TXLLFCMSGFLDSr, port, 0), rvp)
#define WRITE_MAC_TXLLFCMSGFLDSr(unit, port, rv) \
	soc_reg_write(unit, MAC_TXLLFCMSGFLDSr, soc_reg_addr(unit, MAC_TXLLFCMSGFLDSr, port, 0), rv)

#define READ_MAC_TXMACSAr(unit, port, rvp) \
	soc_reg_read(unit, MAC_TXMACSAr, soc_reg_addr(unit, MAC_TXMACSAr, port, 0), rvp)
#define WRITE_MAC_TXMACSAr(unit, port, rv) \
	soc_reg_write(unit, MAC_TXMACSAr, soc_reg_addr(unit, MAC_TXMACSAr, port, 0), rv)

#define READ_MAC_TXMAXSZr(unit, port, rvp) \
	soc_reg_read(unit, MAC_TXMAXSZr, soc_reg_addr(unit, MAC_TXMAXSZr, port, 0), rvp)
#define WRITE_MAC_TXMAXSZr(unit, port, rv) \
	soc_reg_write(unit, MAC_TXMAXSZr, soc_reg_addr(unit, MAC_TXMAXSZr, port, 0), rv)

#define READ_MAC_TXMUXCTRLr(unit, port, rvp) \
	soc_reg_read(unit, MAC_TXMUXCTRLr, soc_reg_addr(unit, MAC_TXMUXCTRLr, port, 0), rvp)
#define WRITE_MAC_TXMUXCTRLr(unit, port, rv) \
	soc_reg_write(unit, MAC_TXMUXCTRLr, soc_reg_addr(unit, MAC_TXMUXCTRLr, port, 0), rv)

#define READ_MAC_TXPPPCTRLr(unit, port, rvp) \
	soc_reg_read(unit, MAC_TXPPPCTRLr, soc_reg_addr(unit, MAC_TXPPPCTRLr, port, 0), rvp)
#define WRITE_MAC_TXPPPCTRLr(unit, port, rv) \
	soc_reg_write(unit, MAC_TXPPPCTRLr, soc_reg_addr(unit, MAC_TXPPPCTRLr, port, 0), rv)

#define READ_MAC_TXPSETHRr(unit, port, rvp) \
	soc_reg_read(unit, MAC_TXPSETHRr, soc_reg_addr(unit, MAC_TXPSETHRr, port, 0), rvp)
#define WRITE_MAC_TXPSETHRr(unit, port, rv) \
	soc_reg_write(unit, MAC_TXPSETHRr, soc_reg_addr(unit, MAC_TXPSETHRr, port, 0), rv)

#define READ_MAC_TXSPARE0r(unit, port, rvp) \
	soc_reg_read(unit, MAC_TXSPARE0r, soc_reg_addr(unit, MAC_TXSPARE0r, port, 0), rvp)
#define WRITE_MAC_TXSPARE0r(unit, port, rv) \
	soc_reg_write(unit, MAC_TXSPARE0r, soc_reg_addr(unit, MAC_TXSPARE0r, port, 0), rv)

#define READ_MAC_TX_STATUSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAC_TX_STATUSr, port, 0), rvp)
#define WRITE_MAC_TX_STATUSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAC_TX_STATUSr, port, 0), rv)

#define READ_MAC_XGXS_CTRLr(unit, port, rvp) \
	soc_reg_read(unit, MAC_XGXS_CTRLr, soc_reg_addr(unit, MAC_XGXS_CTRLr, port, 0), rvp)
#define WRITE_MAC_XGXS_CTRLr(unit, port, rv) \
	soc_reg_write(unit, MAC_XGXS_CTRLr, soc_reg_addr(unit, MAC_XGXS_CTRLr, port, 0), rv)

#define READ_MAC_XGXS_STATr(unit, port, rvp) \
	soc_reg_read(unit, MAC_XGXS_STATr, soc_reg_addr(unit, MAC_XGXS_STATr, port, 0), rvp)
#define WRITE_MAC_XGXS_STATr(unit, port, rv) \
	soc_reg_write(unit, MAC_XGXS_STATr, soc_reg_addr(unit, MAC_XGXS_STATr, port, 0), rv)

#define READ_MAXBUCKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAXBUCKETr, port, idx), rvp)
#define WRITE_MAXBUCKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAXBUCKETr, port, idx), rv)

#define READ_MAXBUCKETCONFIGr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAXBUCKETCONFIGr, port, idx), rvp)
#define WRITE_MAXBUCKETCONFIGr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAXBUCKETCONFIGr, port, idx), rv)

#define READ_MAXBUCKETCONFIG1r(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAXBUCKETCONFIG1r, port, idx), rvp)
#define WRITE_MAXBUCKETCONFIG1r(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAXBUCKETCONFIG1r, port, idx), rv)

#define READ_MAXBUCKETCONFIG_64r(unit, port, idx, rvp) \
	soc_reg_read(unit, MAXBUCKETCONFIG_64r, soc_reg_addr(unit, MAXBUCKETCONFIG_64r, port, idx), rvp)
#define WRITE_MAXBUCKETCONFIG_64r(unit, port, idx, rv) \
	soc_reg_write(unit, MAXBUCKETCONFIG_64r, soc_reg_addr(unit, MAXBUCKETCONFIG_64r, port, idx), rv)

#define READ_MAXBUCKETMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAXBUCKETMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MAXBUCKETMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAXBUCKETMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_MAXBWCOMMITMENTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MAXBWCOMMITMENTr, REG_PORT_ANY, 0), rvp)
#define WRITE_MAXBWCOMMITMENTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MAXBWCOMMITMENTr, REG_PORT_ANY, 0), rv)

#define READ_MAXFRr(unit, port, rvp) \
	soc_reg_read(unit, MAXFRr, soc_reg_addr(unit, MAXFRr, port, 0), rvp)
#define WRITE_MAXFRr(unit, port, rv) \
	soc_reg_write(unit, MAXFRr, soc_reg_addr(unit, MAXFRr, port, 0), rv)

#define READ_MCAST_RATE_CONTROLr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCAST_RATE_CONTROLr, REG_PORT_ANY, idx), rvp)
#define WRITE_MCAST_RATE_CONTROLr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCAST_RATE_CONTROLr, REG_PORT_ANY, idx), rv)

#define READ_MCAST_RATE_CONTROL_M0r(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCAST_RATE_CONTROL_M0r, REG_PORT_ANY, idx), rvp)
#define WRITE_MCAST_RATE_CONTROL_M0r(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCAST_RATE_CONTROL_M0r, REG_PORT_ANY, idx), rv)

#define READ_MCAST_RATE_CONTROL_M1r(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCAST_RATE_CONTROL_M1r, REG_PORT_ANY, idx), rvp)
#define WRITE_MCAST_RATE_CONTROL_M1r(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCAST_RATE_CONTROL_M1r, REG_PORT_ANY, idx), rv)

#define READ_MCAST_STORM_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCAST_STORM_CONTROLr, port, 0), rvp)
#define WRITE_MCAST_STORM_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCAST_STORM_CONTROLr, port, 0), rv)

#define READ_MCU_CHN0_ARB_STATE_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_ARB_STATE_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_ARB_STATE_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_ARB_STATE_1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_ARB_STATE_2r(unit, rvp) \
	soc_reg_read(unit, MCU_CHN0_ARB_STATE_2r, soc_reg_addr(unit, MCU_CHN0_ARB_STATE_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_ARB_STATE_2r(unit, rv) \
	soc_reg_write(unit, MCU_CHN0_ARB_STATE_2r, soc_reg_addr(unit, MCU_CHN0_ARB_STATE_2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_AREFr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_AREFr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_AREFr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_AREFr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_AREF_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_AREF_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_AREF_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_AREF_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_ATE_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_ATE_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_ATE_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_ATE_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_ATE_STS1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_ATE_STS1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_ATE_STS1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_ATE_STS1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_ATE_STS2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_ATE_STS2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_ATE_STS2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_ATE_STS2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_BIST_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_BIST_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_BIST_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_BIST_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_CMDQ_STATEr(unit, rvp) \
	soc_reg_read(unit, MCU_CHN0_CMDQ_STATEr, soc_reg_addr(unit, MCU_CHN0_CMDQ_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_CMDQ_STATEr(unit, rv) \
	soc_reg_write(unit, MCU_CHN0_CMDQ_STATEr, soc_reg_addr(unit, MCU_CHN0_CMDQ_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_CONFIGr(unit, rvp) \
	soc_reg_read(unit, MCU_CHN0_CONFIGr, soc_reg_addr(unit, MCU_CHN0_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_CONFIGr(unit, rv) \
	soc_reg_write(unit, MCU_CHN0_CONFIGr, soc_reg_addr(unit, MCU_CHN0_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_CONFIG_32r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_CONFIG_32r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_CONFIG_32r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_CONFIG_32r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_CPUREQ_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_CPUREQ_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_CPUREQ_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_CPUREQ_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_CTLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_CTL_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_CTL_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_CTL_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_CTL_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_CTS_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_CTS_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_CTS_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_CTS_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_DDR_REG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_DDR_REG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_DDR_REG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_DDR_REG1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_DDR_REG2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_DDR_REG2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_DDR_REG2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_DDR_REG2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_DDR_REG3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_DDR_REG3r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_DDR_REG3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_DDR_REG3r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_DDR_STS1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_DDR_STS1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_DDR_STS1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_DDR_STS1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_DDR_STS2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_DDR_STS2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_DDR_STS2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_DDR_STS2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_DEBUG_CMDQr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_DEBUG_CMDQr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_DEBUG_CMDQr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_DEBUG_CMDQr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_DEBUG_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_DEBUG_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_DEBUG_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_DEBUG_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_DEBUG_RTQr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_DEBUG_RTQr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_DEBUG_RTQr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_DEBUG_RTQr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_DEBUG_WDQr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_DEBUG_WDQr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_DEBUG_WDQr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_DEBUG_WDQr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_DELAY_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_DELAY_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_DELAY_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_DELAY_CTLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_EXT_MODEREG_FCr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_EXT_MODEREG_FCr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_EXT_MODEREG_FCr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_EXT_MODEREG_FCr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_INIT_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_INIT_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_INIT_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_INIT_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_MEM_CMDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_MEM_CMDr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_MEM_CMDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_MEM_CMDr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_MODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_MODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_MODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_MODEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_MODEREG_FCr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_MODEREG_FCr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_MODEREG_FCr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_MODEREG_FCr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_MODEREG_RLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_MODEREG_RLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_MODEREG_RLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_MODEREG_RLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_MRS_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_MRS_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_MRS_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_MRS_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_PAD_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_PAD_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_PAD_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_PAD_CTLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_RDRTNQ_STATE_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_RDRTNQ_STATE_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_RDRTNQ_STATE_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_RDRTNQ_STATE_1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_RDRTNQ_STATE_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_RDRTNQ_STATE_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_RDRTNQ_STATE_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_RDRTNQ_STATE_2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_RDRTNQ_STATE_3r(unit, rvp) \
	soc_reg_read(unit, MCU_CHN0_RDRTNQ_STATE_3r, soc_reg_addr(unit, MCU_CHN0_RDRTNQ_STATE_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_RDRTNQ_STATE_3r(unit, rv) \
	soc_reg_write(unit, MCU_CHN0_RDRTNQ_STATE_3r, soc_reg_addr(unit, MCU_CHN0_RDRTNQ_STATE_3r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_RDRTNQ_STATE_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_RDRTNQ_STATE_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_RDRTNQ_STATE_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_RDRTNQ_STATE_4r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_REQ_CMDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_REQ_CMDr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_REQ_CMDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_REQ_CMDr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_REQ_DESCPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_REQ_DESCPr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_REQ_DESCPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_REQ_DESCPr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_TIMINGr(unit, rvp) \
	soc_reg_read(unit, MCU_CHN0_TIMINGr, soc_reg_addr(unit, MCU_CHN0_TIMINGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_TIMINGr(unit, rv) \
	soc_reg_write(unit, MCU_CHN0_TIMINGr, soc_reg_addr(unit, MCU_CHN0_TIMINGr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_TIMING_32r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_TIMING_32r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_TIMING_32r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_TIMING_32r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_WRDATAQ_STATE_1r(unit, rvp) \
	soc_reg_read(unit, MCU_CHN0_WRDATAQ_STATE_1r, soc_reg_addr(unit, MCU_CHN0_WRDATAQ_STATE_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_WRDATAQ_STATE_1r(unit, rv) \
	soc_reg_write(unit, MCU_CHN0_WRDATAQ_STATE_1r, soc_reg_addr(unit, MCU_CHN0_WRDATAQ_STATE_1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN0_WRDATAQ_STATE_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN0_WRDATAQ_STATE_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN0_WRDATAQ_STATE_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN0_WRDATAQ_STATE_2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_ARB_STATE_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_ARB_STATE_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_ARB_STATE_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_ARB_STATE_1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_ARB_STATE_2r(unit, rvp) \
	soc_reg_read(unit, MCU_CHN1_ARB_STATE_2r, soc_reg_addr(unit, MCU_CHN1_ARB_STATE_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_ARB_STATE_2r(unit, rv) \
	soc_reg_write(unit, MCU_CHN1_ARB_STATE_2r, soc_reg_addr(unit, MCU_CHN1_ARB_STATE_2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_AREFr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_AREFr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_AREFr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_AREFr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_AREF_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_AREF_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_AREF_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_AREF_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_ATE_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_ATE_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_ATE_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_ATE_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_ATE_STS1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_ATE_STS1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_ATE_STS1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_ATE_STS1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_ATE_STS2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_ATE_STS2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_ATE_STS2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_ATE_STS2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_BIST_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_BIST_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_BIST_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_BIST_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_CMDQ_STATEr(unit, rvp) \
	soc_reg_read(unit, MCU_CHN1_CMDQ_STATEr, soc_reg_addr(unit, MCU_CHN1_CMDQ_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_CMDQ_STATEr(unit, rv) \
	soc_reg_write(unit, MCU_CHN1_CMDQ_STATEr, soc_reg_addr(unit, MCU_CHN1_CMDQ_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_CONFIGr(unit, rvp) \
	soc_reg_read(unit, MCU_CHN1_CONFIGr, soc_reg_addr(unit, MCU_CHN1_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_CONFIGr(unit, rv) \
	soc_reg_write(unit, MCU_CHN1_CONFIGr, soc_reg_addr(unit, MCU_CHN1_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_CONFIG_32r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_CONFIG_32r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_CONFIG_32r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_CONFIG_32r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_CPUREQ_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_CPUREQ_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_CPUREQ_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_CPUREQ_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_CTLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_CTL_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_CTL_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_CTL_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_CTL_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_CTS_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_CTS_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_CTS_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_CTS_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_DDR_REG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_DDR_REG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_DDR_REG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_DDR_REG1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_DDR_REG2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_DDR_REG2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_DDR_REG2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_DDR_REG2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_DDR_REG3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_DDR_REG3r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_DDR_REG3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_DDR_REG3r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_DDR_STS1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_DDR_STS1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_DDR_STS1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_DDR_STS1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_DDR_STS2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_DDR_STS2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_DDR_STS2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_DDR_STS2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_DEBUG_CMDQr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_DEBUG_CMDQr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_DEBUG_CMDQr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_DEBUG_CMDQr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_DEBUG_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_DEBUG_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_DEBUG_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_DEBUG_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_DEBUG_RTQr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_DEBUG_RTQr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_DEBUG_RTQr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_DEBUG_RTQr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_DEBUG_WDQr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_DEBUG_WDQr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_DEBUG_WDQr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_DEBUG_WDQr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_DELAY_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_DELAY_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_DELAY_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_DELAY_CTLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_EXT_MODEREG_FCr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_EXT_MODEREG_FCr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_EXT_MODEREG_FCr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_EXT_MODEREG_FCr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_INIT_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_INIT_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_INIT_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_INIT_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_MEM_CMDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_MEM_CMDr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_MEM_CMDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_MEM_CMDr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_MODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_MODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_MODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_MODEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_MODEREG_FCr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_MODEREG_FCr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_MODEREG_FCr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_MODEREG_FCr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_MODEREG_RLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_MODEREG_RLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_MODEREG_RLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_MODEREG_RLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_MRS_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_MRS_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_MRS_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_MRS_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_PAD_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_PAD_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_PAD_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_PAD_CTLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_RDRTNQ_STATE_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_RDRTNQ_STATE_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_RDRTNQ_STATE_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_RDRTNQ_STATE_1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_RDRTNQ_STATE_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_RDRTNQ_STATE_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_RDRTNQ_STATE_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_RDRTNQ_STATE_2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_RDRTNQ_STATE_3r(unit, rvp) \
	soc_reg_read(unit, MCU_CHN1_RDRTNQ_STATE_3r, soc_reg_addr(unit, MCU_CHN1_RDRTNQ_STATE_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_RDRTNQ_STATE_3r(unit, rv) \
	soc_reg_write(unit, MCU_CHN1_RDRTNQ_STATE_3r, soc_reg_addr(unit, MCU_CHN1_RDRTNQ_STATE_3r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_RDRTNQ_STATE_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_RDRTNQ_STATE_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_RDRTNQ_STATE_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_RDRTNQ_STATE_4r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_REQ_CMDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_REQ_CMDr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_REQ_CMDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_REQ_CMDr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_REQ_DESCPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_REQ_DESCPr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_REQ_DESCPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_REQ_DESCPr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_TIMINGr(unit, rvp) \
	soc_reg_read(unit, MCU_CHN1_TIMINGr, soc_reg_addr(unit, MCU_CHN1_TIMINGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_TIMINGr(unit, rv) \
	soc_reg_write(unit, MCU_CHN1_TIMINGr, soc_reg_addr(unit, MCU_CHN1_TIMINGr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_TIMING_32r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_TIMING_32r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_TIMING_32r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_TIMING_32r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_WRDATAQ_STATE_1r(unit, rvp) \
	soc_reg_read(unit, MCU_CHN1_WRDATAQ_STATE_1r, soc_reg_addr(unit, MCU_CHN1_WRDATAQ_STATE_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_WRDATAQ_STATE_1r(unit, rv) \
	soc_reg_write(unit, MCU_CHN1_WRDATAQ_STATE_1r, soc_reg_addr(unit, MCU_CHN1_WRDATAQ_STATE_1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN1_WRDATAQ_STATE_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN1_WRDATAQ_STATE_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN1_WRDATAQ_STATE_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN1_WRDATAQ_STATE_2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_ARB_STATE_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_ARB_STATE_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_ARB_STATE_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_ARB_STATE_1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_ARB_STATE_2r(unit, rvp) \
	soc_reg_read(unit, MCU_CHN2_ARB_STATE_2r, soc_reg_addr(unit, MCU_CHN2_ARB_STATE_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_ARB_STATE_2r(unit, rv) \
	soc_reg_write(unit, MCU_CHN2_ARB_STATE_2r, soc_reg_addr(unit, MCU_CHN2_ARB_STATE_2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_AREF_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_AREF_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_AREF_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_AREF_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_CMDQ_STATEr(unit, rvp) \
	soc_reg_read(unit, MCU_CHN2_CMDQ_STATEr, soc_reg_addr(unit, MCU_CHN2_CMDQ_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_CMDQ_STATEr(unit, rv) \
	soc_reg_write(unit, MCU_CHN2_CMDQ_STATEr, soc_reg_addr(unit, MCU_CHN2_CMDQ_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_CONFIGr(unit, rvp) \
	soc_reg_read(unit, MCU_CHN2_CONFIGr, soc_reg_addr(unit, MCU_CHN2_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_CONFIGr(unit, rv) \
	soc_reg_write(unit, MCU_CHN2_CONFIGr, soc_reg_addr(unit, MCU_CHN2_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_CPUREQ_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_CPUREQ_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_CPUREQ_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_CPUREQ_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_CTLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_CTL_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_CTL_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_CTL_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_CTL_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_CTS_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_CTS_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_CTS_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_CTS_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_DELAY_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_DELAY_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_DELAY_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_DELAY_CTLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_INIT_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_INIT_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_INIT_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_INIT_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_MEM_CMDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_MEM_CMDr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_MEM_CMDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_MEM_CMDr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_MODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_MODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_MODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_MODEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_PAD_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_PAD_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_PAD_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_PAD_CTLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_RDRTNQ_STATE_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_RDRTNQ_STATE_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_RDRTNQ_STATE_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_RDRTNQ_STATE_1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_RDRTNQ_STATE_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_RDRTNQ_STATE_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_RDRTNQ_STATE_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_RDRTNQ_STATE_2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_RDRTNQ_STATE_3r(unit, rvp) \
	soc_reg_read(unit, MCU_CHN2_RDRTNQ_STATE_3r, soc_reg_addr(unit, MCU_CHN2_RDRTNQ_STATE_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_RDRTNQ_STATE_3r(unit, rv) \
	soc_reg_write(unit, MCU_CHN2_RDRTNQ_STATE_3r, soc_reg_addr(unit, MCU_CHN2_RDRTNQ_STATE_3r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_RDRTNQ_STATE_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_RDRTNQ_STATE_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_RDRTNQ_STATE_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_RDRTNQ_STATE_4r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_TIMINGr(unit, rvp) \
	soc_reg_read(unit, MCU_CHN2_TIMINGr, soc_reg_addr(unit, MCU_CHN2_TIMINGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_TIMINGr(unit, rv) \
	soc_reg_write(unit, MCU_CHN2_TIMINGr, soc_reg_addr(unit, MCU_CHN2_TIMINGr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_WRDATAQ_STATE_1r(unit, rvp) \
	soc_reg_read(unit, MCU_CHN2_WRDATAQ_STATE_1r, soc_reg_addr(unit, MCU_CHN2_WRDATAQ_STATE_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_WRDATAQ_STATE_1r(unit, rv) \
	soc_reg_write(unit, MCU_CHN2_WRDATAQ_STATE_1r, soc_reg_addr(unit, MCU_CHN2_WRDATAQ_STATE_1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN2_WRDATAQ_STATE_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN2_WRDATAQ_STATE_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN2_WRDATAQ_STATE_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN2_WRDATAQ_STATE_2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_ARB_STATE_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_ARB_STATE_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_ARB_STATE_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_ARB_STATE_1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_ARB_STATE_2r(unit, rvp) \
	soc_reg_read(unit, MCU_CHN3_ARB_STATE_2r, soc_reg_addr(unit, MCU_CHN3_ARB_STATE_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_ARB_STATE_2r(unit, rv) \
	soc_reg_write(unit, MCU_CHN3_ARB_STATE_2r, soc_reg_addr(unit, MCU_CHN3_ARB_STATE_2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_AREF_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_AREF_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_AREF_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_AREF_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_CMDQ_STATEr(unit, rvp) \
	soc_reg_read(unit, MCU_CHN3_CMDQ_STATEr, soc_reg_addr(unit, MCU_CHN3_CMDQ_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_CMDQ_STATEr(unit, rv) \
	soc_reg_write(unit, MCU_CHN3_CMDQ_STATEr, soc_reg_addr(unit, MCU_CHN3_CMDQ_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_CONFIGr(unit, rvp) \
	soc_reg_read(unit, MCU_CHN3_CONFIGr, soc_reg_addr(unit, MCU_CHN3_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_CONFIGr(unit, rv) \
	soc_reg_write(unit, MCU_CHN3_CONFIGr, soc_reg_addr(unit, MCU_CHN3_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_CPUREQ_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_CPUREQ_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_CPUREQ_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_CPUREQ_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_CTLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_CTL_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_CTL_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_CTL_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_CTL_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_CTS_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_CTS_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_CTS_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_CTS_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_DELAY_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_DELAY_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_DELAY_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_DELAY_CTLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_INIT_STATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_INIT_STATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_INIT_STATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_INIT_STATEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_MEM_CMDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_MEM_CMDr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_MEM_CMDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_MEM_CMDr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_MODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_MODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_MODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_MODEr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_PAD_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_PAD_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_PAD_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_PAD_CTLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_RDRTNQ_STATE_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_RDRTNQ_STATE_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_RDRTNQ_STATE_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_RDRTNQ_STATE_1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_RDRTNQ_STATE_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_RDRTNQ_STATE_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_RDRTNQ_STATE_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_RDRTNQ_STATE_2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_RDRTNQ_STATE_3r(unit, rvp) \
	soc_reg_read(unit, MCU_CHN3_RDRTNQ_STATE_3r, soc_reg_addr(unit, MCU_CHN3_RDRTNQ_STATE_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_RDRTNQ_STATE_3r(unit, rv) \
	soc_reg_write(unit, MCU_CHN3_RDRTNQ_STATE_3r, soc_reg_addr(unit, MCU_CHN3_RDRTNQ_STATE_3r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_RDRTNQ_STATE_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_RDRTNQ_STATE_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_RDRTNQ_STATE_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_RDRTNQ_STATE_4r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_TIMINGr(unit, rvp) \
	soc_reg_read(unit, MCU_CHN3_TIMINGr, soc_reg_addr(unit, MCU_CHN3_TIMINGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_TIMINGr(unit, rv) \
	soc_reg_write(unit, MCU_CHN3_TIMINGr, soc_reg_addr(unit, MCU_CHN3_TIMINGr, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_WRDATAQ_STATE_1r(unit, rvp) \
	soc_reg_read(unit, MCU_CHN3_WRDATAQ_STATE_1r, soc_reg_addr(unit, MCU_CHN3_WRDATAQ_STATE_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_WRDATAQ_STATE_1r(unit, rv) \
	soc_reg_write(unit, MCU_CHN3_WRDATAQ_STATE_1r, soc_reg_addr(unit, MCU_CHN3_WRDATAQ_STATE_1r, REG_PORT_ANY, 0), rv)

#define READ_MCU_CHN3_WRDATAQ_STATE_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_CHN3_WRDATAQ_STATE_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_CHN3_WRDATAQ_STATE_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_CHN3_WRDATAQ_STATE_2r, REG_PORT_ANY, 0), rv)

#define READ_MCU_DLL_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_DLL_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_DLL_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_DLL_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_DLL_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_DLL_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_DLL_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_DLL_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_MCU_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_ISr, REG_PORT_ANY, 0), rv)

#define READ_MCU_MAIN_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_MAIN_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_MAIN_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_MAIN_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_MCU_MAIN_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_MAIN_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_MAIN_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_MAIN_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_MAIN_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_MAIN_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_MAIN_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_MAIN_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_MCU_PLL_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_PLL_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_PLL_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_PLL_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_MCU_PLL_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MCU_PLL_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MCU_PLL_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MCU_PLL_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_MC_CONTROL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MC_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MC_CONTROL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MC_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_MC_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MC_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MC_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MC_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_MC_CONTROL_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MC_CONTROL_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_MC_CONTROL_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MC_CONTROL_3r, REG_PORT_ANY, 0), rv)

#define READ_MC_CONTROL_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MC_CONTROL_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_MC_CONTROL_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MC_CONTROL_4r, REG_PORT_ANY, 0), rv)

#define READ_MC_CONTROL_5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MC_CONTROL_5r, REG_PORT_ANY, 0), rvp)
#define WRITE_MC_CONTROL_5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MC_CONTROL_5r, REG_PORT_ANY, 0), rv)

#define READ_MC_TRUNK_BLOCK_MASKr(unit, port, rvp) \
	soc_reg_read(unit, MC_TRUNK_BLOCK_MASKr, soc_reg_addr(unit, MC_TRUNK_BLOCK_MASKr, port, 0), rvp)
#define WRITE_MC_TRUNK_BLOCK_MASKr(unit, port, rv) \
	soc_reg_write(unit, MC_TRUNK_BLOCK_MASKr, soc_reg_addr(unit, MC_TRUNK_BLOCK_MASKr, port, 0), rv)

#define READ_MEM0DLYr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEM0DLYr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEM0DLYr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEM0DLYr, REG_PORT_ANY, 0), rv)

#define READ_MEM1DLYr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEM1DLYr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEM1DLYr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEM1DLYr, REG_PORT_ANY, 0), rv)

#define READ_MEM1_IPMCGRP_TBL_PARITYERRORPTRr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEM1_IPMCGRP_TBL_PARITYERRORPTRr, REG_PORT_ANY, idx), rvp)
#define WRITE_MEM1_IPMCGRP_TBL_PARITYERRORPTRr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEM1_IPMCGRP_TBL_PARITYERRORPTRr, REG_PORT_ANY, idx), rv)

#define READ_MEM1_IPMCGRP_TBL_PARITYERROR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEM1_IPMCGRP_TBL_PARITYERROR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEM1_IPMCGRP_TBL_PARITYERROR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEM1_IPMCGRP_TBL_PARITYERROR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_MEM1_IPMCVLAN_TBL_PARITYERRORPTRr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEM1_IPMCVLAN_TBL_PARITYERRORPTRr, REG_PORT_ANY, idx), rvp)
#define WRITE_MEM1_IPMCVLAN_TBL_PARITYERRORPTRr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEM1_IPMCVLAN_TBL_PARITYERRORPTRr, REG_PORT_ANY, idx), rv)

#define READ_MEM1_IPMCVLAN_TBL_PARITYERROR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEM1_IPMCVLAN_TBL_PARITYERROR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEM1_IPMCVLAN_TBL_PARITYERROR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEM1_IPMCVLAN_TBL_PARITYERROR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_MEMCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEMCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEMCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEMCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_MEMFAILINTMASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEMFAILINTMASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEMFAILINTMASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEMFAILINTMASKr, REG_PORT_ANY, 0), rv)

#define READ_MEMFAILINTSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEMFAILINTSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEMFAILINTSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEMFAILINTSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_MEMFAILMSGBITMAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEMFAILMSGBITMAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEMFAILMSGBITMAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEMFAILMSGBITMAPr, REG_PORT_ANY, 0), rv)

#define READ_MEMFAILMSGCOUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEMFAILMSGCOUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEMFAILMSGCOUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEMFAILMSGCOUNTr, REG_PORT_ANY, 0), rv)

#define READ_MEMORYERRORCNTr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEMORYERRORCNTr, REG_PORT_ANY, idx), rvp)
#define WRITE_MEMORYERRORCNTr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEMORYERRORCNTr, REG_PORT_ANY, idx), rv)

#define READ_MEMORYERRORCNTCHr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEMORYERRORCNTCHr, REG_PORT_ANY, idx), rvp)
#define WRITE_MEMORYERRORCNTCHr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEMORYERRORCNTCHr, REG_PORT_ANY, idx), rv)

#define READ_MEMORYPTRERRORCNTCHr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEMORYPTRERRORCNTCHr, REG_PORT_ANY, idx), rvp)
#define WRITE_MEMORYPTRERRORCNTCHr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEMORYPTRERRORCNTCHr, REG_PORT_ANY, idx), rv)

#define READ_MEM_FAIL_INT_CTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEM_FAIL_INT_CTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEM_FAIL_INT_CTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEM_FAIL_INT_CTRr, REG_PORT_ANY, 0), rv)

#define READ_MEM_FAIL_INT_ENr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEM_FAIL_INT_ENr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEM_FAIL_INT_ENr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEM_FAIL_INT_ENr, REG_PORT_ANY, 0), rv)

#define READ_MEM_FAIL_INT_STATr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MEM_FAIL_INT_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_MEM_FAIL_INT_STATr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MEM_FAIL_INT_STATr, REG_PORT_ANY, 0), rv)

#define READ_METER_ATTRIBUTESr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_ATTRIBUTESr, port, 0), rvp)
#define WRITE_METER_ATTRIBUTESr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_ATTRIBUTESr, port, 0), rv)

#define READ_METER_CTLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_CTLr, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_CTLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_CTLr, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF0_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF0_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF0_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF0_0r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF0_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF0_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF0_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF0_1r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF1_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF1_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF1_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF1_0r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF1_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF1_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF1_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF1_1r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF2_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF2_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF2_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF2_0r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF2_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF2_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF2_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF2_1r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF3_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF3_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF3_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF3_0r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF3_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF3_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF3_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF3_1r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF4_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF4_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF4_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF4_0r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF4_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF4_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF4_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF4_1r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF5_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF5_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF5_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF5_0r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF5_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF5_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF5_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF5_1r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF6_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF6_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF6_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF6_0r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF6_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF6_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF6_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF6_1r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF7_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF7_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF7_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF7_0r, REG_PORT_ANY, 0), rv)

#define READ_METER_DEF7_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, METER_DEF7_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_METER_DEF7_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, METER_DEF7_1r, REG_PORT_ANY, 0), rv)

#define READ_MIBPSTATr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MIBPSTATr, port, 0), rvp)
#define WRITE_MIBPSTATr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MIBPSTATr, port, 0), rv)

#define READ_MINBUCKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MINBUCKETr, port, idx), rvp)
#define WRITE_MINBUCKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MINBUCKETr, port, idx), rv)

#define READ_MINBUCKETCONFIGr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MINBUCKETCONFIGr, port, idx), rvp)
#define WRITE_MINBUCKETCONFIGr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MINBUCKETCONFIGr, port, idx), rv)

#define READ_MINBUCKETCONFIG1r(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MINBUCKETCONFIG1r, port, idx), rvp)
#define WRITE_MINBUCKETCONFIG1r(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MINBUCKETCONFIG1r, port, idx), rv)

#define READ_MINBUCKETCONFIG_64r(unit, port, idx, rvp) \
	soc_reg_read(unit, MINBUCKETCONFIG_64r, soc_reg_addr(unit, MINBUCKETCONFIG_64r, port, idx), rvp)
#define WRITE_MINBUCKETCONFIG_64r(unit, port, idx, rv) \
	soc_reg_write(unit, MINBUCKETCONFIG_64r, soc_reg_addr(unit, MINBUCKETCONFIG_64r, port, idx), rv)

#define READ_MINBUCKETMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MINBUCKETMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MINBUCKETMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MINBUCKETMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_MINBWGUARANTEEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MINBWGUARANTEEr, port, 0), rvp)
#define WRITE_MINBWGUARANTEEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MINBWGUARANTEEr, port, 0), rv)

#define READ_MINSPCONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MINSPCONFIGr, port, 0), rvp)
#define WRITE_MINSPCONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MINSPCONFIGr, port, 0), rv)

#define READ_MIRRORr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MIRRORr, port, 0), rvp)
#define WRITE_MIRRORr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MIRRORr, port, 0), rv)

#define READ_MIRROR_CONTROLr(unit, port, rvp) \
	soc_reg_read(unit, MIRROR_CONTROLr, soc_reg_addr(unit, MIRROR_CONTROLr, port, 0), rvp)
#define WRITE_MIRROR_CONTROLr(unit, port, rv) \
	soc_reg_write(unit, MIRROR_CONTROLr, soc_reg_addr(unit, MIRROR_CONTROLr, port, 0), rv)

#define READ_MIRROR_DEST_BITMAPr(unit, port, rvp) \
	soc_reg_read(unit, MIRROR_DEST_BITMAPr, soc_reg_addr(unit, MIRROR_DEST_BITMAPr, port, 0), rvp)
#define WRITE_MIRROR_DEST_BITMAPr(unit, port, rv) \
	soc_reg_write(unit, MIRROR_DEST_BITMAPr, soc_reg_addr(unit, MIRROR_DEST_BITMAPr, port, 0), rv)

#define READ_MISCCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MISCCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MISCCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MISCCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_MISCCONFIG2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MISCCONFIG2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MISCCONFIG2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MISCCONFIG2r, REG_PORT_ANY, 0), rv)

#define READ_MISCCONFIG_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MISCCONFIG_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MISCCONFIG_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MISCCONFIG_2r, REG_PORT_ANY, 0), rv)

#define READ_MMU0_FUSE_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU0_FUSE_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU0_FUSE_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU0_FUSE_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_MMU1_FUSE_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU1_FUSE_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU1_FUSE_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU1_FUSE_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_MMUECCOVERRIDEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUECCOVERRIDEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUECCOVERRIDEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUECCOVERRIDEr, REG_PORT_ANY, 0), rv)

#define READ_MMUFLUSHCONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUFLUSHCONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUFLUSHCONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUFLUSHCONTROLr, REG_PORT_ANY, 0), rv)

#define READ_MMUMBISTENr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUMBISTENr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUMBISTENr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUMBISTENr, REG_PORT_ANY, 0), rv)

#define READ_MMUMBISTSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUMBISTSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUMBISTSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUMBISTSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_MMUPORTENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUPORTENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUPORTENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUPORTENABLEr, REG_PORT_ANY, 0), rv)

#define READ_MMUPORTENABLEMOD0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUPORTENABLEMOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUPORTENABLEMOD0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUPORTENABLEMOD0r, REG_PORT_ANY, 0), rv)

#define READ_MMUPORTENABLEMOD1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUPORTENABLEMOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUPORTENABLEMOD1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUPORTENABLEMOD1r, REG_PORT_ANY, 0), rv)

#define READ_MMUPORTENABLE_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUPORTENABLE_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUPORTENABLE_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUPORTENABLE_HIr, REG_PORT_ANY, 0), rv)

#define READ_MMUPORTSTOREENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUPORTSTOREENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUPORTSTOREENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUPORTSTOREENABLEr, REG_PORT_ANY, 0), rv)

#define READ_MMUPORTSTOREENABLEMOD0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUPORTSTOREENABLEMOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUPORTSTOREENABLEMOD0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUPORTSTOREENABLEMOD0r, REG_PORT_ANY, 0), rv)

#define READ_MMUPORTSTOREENABLEMOD1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUPORTSTOREENABLEMOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUPORTSTOREENABLEMOD1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUPORTSTOREENABLEMOD1r, REG_PORT_ANY, 0), rv)

#define READ_MMUPORTTXENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUPORTTXENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUPORTTXENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUPORTTXENABLEr, REG_PORT_ANY, 0), rv)

#define READ_MMUPORTTXENABLE_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMUPORTTXENABLE_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMUPORTTXENABLE_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMUPORTTXENABLE_HIr, REG_PORT_ANY, 0), rv)

#define READ_MMU_CELLCNTCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_CELLCNTCOSr, port, idx), rvp)
#define WRITE_MMU_CELLCNTCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_CELLCNTCOSr, port, idx), rv)

#define READ_MMU_CELLCNTINGr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_CELLCNTINGr, port, idx), rvp)
#define WRITE_MMU_CELLCNTINGr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_CELLCNTINGr, port, idx), rv)

#define READ_MMU_CELLCNTTOTALr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_CELLCNTTOTALr, port, 0), rvp)
#define WRITE_MMU_CELLCNTTOTALr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_CELLCNTTOTALr, port, 0), rv)

#define READ_MMU_CELLLMTCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_CELLLMTCOSr, port, idx), rvp)
#define WRITE_MMU_CELLLMTCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_CELLLMTCOSr, port, idx), rv)

#define READ_MMU_CELLLMTCOS_LOWERr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_CELLLMTCOS_LOWERr, port, idx), rvp)
#define WRITE_MMU_CELLLMTCOS_LOWERr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_CELLLMTCOS_LOWERr, port, idx), rv)

#define READ_MMU_CELLLMTCOS_UPPERr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_CELLLMTCOS_UPPERr, port, idx), rvp)
#define WRITE_MMU_CELLLMTCOS_UPPERr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_CELLLMTCOS_UPPERr, port, idx), rv)

#define READ_MMU_CELLLMTINGr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_CELLLMTINGr, port, idx), rvp)
#define WRITE_MMU_CELLLMTINGr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_CELLLMTINGr, port, idx), rv)

#define READ_MMU_CELLLMTTOTALr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_CELLLMTTOTALr, port, 0), rvp)
#define WRITE_MMU_CELLLMTTOTALr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_CELLLMTTOTALr, port, 0), rv)

#define READ_MMU_CELLLMTTOTAL_LOWERr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_CELLLMTTOTAL_LOWERr, port, 0), rvp)
#define WRITE_MMU_CELLLMTTOTAL_LOWERr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_CELLLMTTOTAL_LOWERr, port, 0), rv)

#define READ_MMU_CELLLMTTOTAL_UPPERr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_CELLLMTTOTAL_UPPERr, port, 0), rvp)
#define WRITE_MMU_CELLLMTTOTAL_UPPERr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_CELLLMTTOTAL_UPPERr, port, 0), rv)

#define READ_MMU_CFGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_CFGr, port, 0), rvp)
#define WRITE_MMU_CFGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_CFGr, port, 0), rv)

#define READ_MMU_EGR_CTRLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_EGR_CTRLr, port, 0), rvp)
#define WRITE_MMU_EGR_CTRLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_EGR_CTRLr, port, 0), rv)

#define READ_MMU_EGR_PARADr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_EGR_PARADr, port, 0), rvp)
#define WRITE_MMU_EGR_PARADr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_EGR_PARADr, port, 0), rv)

#define READ_MMU_EGS_PRIMODr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_EGS_PRIMODr, port, 0), rvp)
#define WRITE_MMU_EGS_PRIMODr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_EGS_PRIMODr, port, 0), rv)

#define READ_MMU_EGS_WGTCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_EGS_WGTCOSr, port, idx), rvp)
#define WRITE_MMU_EGS_WGTCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_EGS_WGTCOSr, port, idx), rv)

#define READ_MMU_ERRSTATr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_ERRSTATr, port, 0), rvp)
#define WRITE_MMU_ERRSTATr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_ERRSTATr, port, 0), rv)

#define READ_MMU_ERR_VECTORr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_ERR_VECTORr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_ERR_VECTORr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_ERR_VECTORr, REG_PORT_ANY, 0), rv)

#define READ_MMU_ING_PARADr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_ING_PARADr, port, 0), rvp)
#define WRITE_MMU_ING_PARADr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_ING_PARADr, port, 0), rv)

#define READ_MMU_INTCLRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_INTCLRr, port, 0), rvp)
#define WRITE_MMU_INTCLRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_INTCLRr, port, 0), rv)

#define READ_MMU_INTCNTLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_INTCNTLr, port, 0), rvp)
#define WRITE_MMU_INTCNTLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_INTCNTLr, port, 0), rv)

#define READ_MMU_INTCTRLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_INTCTRLr, port, 0), rvp)
#define WRITE_MMU_INTCTRLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_INTCTRLr, port, 0), rv)

#define READ_MMU_INTSTATr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_INTSTATr, port, 0), rvp)
#define WRITE_MMU_INTSTATr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_INTSTATr, port, 0), rv)

#define READ_MMU_LLA_PARADr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_LLA_PARADr, port, 0), rvp)
#define WRITE_MMU_LLA_PARADr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_LLA_PARADr, port, 0), rv)

#define READ_MMU_LLFC_RX_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_LLFC_RX_CONFIGr, port, 0), rvp)
#define WRITE_MMU_LLFC_RX_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_LLFC_RX_CONFIGr, port, 0), rv)

#define READ_MMU_LLFC_TX_CONFIG_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_LLFC_TX_CONFIG_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_LLFC_TX_CONFIG_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_LLFC_TX_CONFIG_1r, REG_PORT_ANY, 0), rv)

#define READ_MMU_LLFC_TX_CONFIG_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_LLFC_TX_CONFIG_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_LLFC_TX_CONFIG_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_LLFC_TX_CONFIG_2r, REG_PORT_ANY, 0), rv)

#define READ_MMU_MEMFAILSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_MEMFAILSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_MEMFAILSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_MEMFAILSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_MMU_PARITYERRORr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PARITYERRORr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_PARITYERRORr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PARITYERRORr, REG_PORT_ANY, 0), rv)

#define READ_MMU_PARITYERROR_CCPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PARITYERROR_CCPr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_PARITYERROR_CCPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PARITYERROR_CCPr, REG_PORT_ANY, 0), rv)

#define READ_MMU_PARITYERROR_CFAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PARITYERROR_CFAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_PARITYERROR_CFAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PARITYERROR_CFAPr, REG_PORT_ANY, 0), rv)

#define READ_MMU_PARITYERROR_XQ0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PARITYERROR_XQ0r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_PARITYERROR_XQ0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PARITYERROR_XQ0r, REG_PORT_ANY, 0), rv)

#define READ_MMU_PARITYERROR_XQ1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PARITYERROR_XQ1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_PARITYERROR_XQ1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PARITYERROR_XQ1r, REG_PORT_ANY, 0), rv)

#define READ_MMU_PARITYERROR_XQ2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PARITYERROR_XQ2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_PARITYERROR_XQ2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PARITYERROR_XQ2r, REG_PORT_ANY, 0), rv)

#define READ_MMU_PKTCNTCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PKTCNTCOSr, port, idx), rvp)
#define WRITE_MMU_PKTCNTCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PKTCNTCOSr, port, idx), rv)

#define READ_MMU_PKTCNTINGr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PKTCNTINGr, port, idx), rvp)
#define WRITE_MMU_PKTCNTINGr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PKTCNTINGr, port, idx), rv)

#define READ_MMU_PKTLMTCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PKTLMTCOSr, port, idx), rvp)
#define WRITE_MMU_PKTLMTCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PKTLMTCOSr, port, idx), rv)

#define READ_MMU_PKTLMTCOS_LOWERr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PKTLMTCOS_LOWERr, port, idx), rvp)
#define WRITE_MMU_PKTLMTCOS_LOWERr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PKTLMTCOS_LOWERr, port, idx), rv)

#define READ_MMU_PKTLMTCOS_UPPERr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PKTLMTCOS_UPPERr, port, idx), rvp)
#define WRITE_MMU_PKTLMTCOS_UPPERr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PKTLMTCOS_UPPERr, port, idx), rv)

#define READ_MMU_PKTLMTINGr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PKTLMTINGr, port, idx), rvp)
#define WRITE_MMU_PKTLMTINGr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PKTLMTINGr, port, idx), rv)

#define READ_MMU_PP_DBE_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PP_DBE_CNTr, port, 0), rvp)
#define WRITE_MMU_PP_DBE_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PP_DBE_CNTr, port, 0), rv)

#define READ_MMU_PP_DBE_LOGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PP_DBE_LOGr, port, 0), rvp)
#define WRITE_MMU_PP_DBE_LOGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PP_DBE_LOGr, port, 0), rv)

#define READ_MMU_PP_ECC_CNTLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PP_ECC_CNTLr, port, 0), rvp)
#define WRITE_MMU_PP_ECC_CNTLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PP_ECC_CNTLr, port, 0), rv)

#define READ_MMU_PP_ECC_CTRLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PP_ECC_CTRLr, port, 0), rvp)
#define WRITE_MMU_PP_ECC_CTRLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PP_ECC_CTRLr, port, 0), rv)

#define READ_MMU_PP_SBE_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PP_SBE_CNTr, port, 0), rvp)
#define WRITE_MMU_PP_SBE_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PP_SBE_CNTr, port, 0), rv)

#define READ_MMU_PP_SBE_LOGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_PP_SBE_LOGr, port, 0), rvp)
#define WRITE_MMU_PP_SBE_LOGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_PP_SBE_LOGr, port, 0), rv)

#define READ_MMU_SPARE_REG0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_SPARE_REG0r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_SPARE_REG0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_SPARE_REG0r, REG_PORT_ANY, 0), rv)

#define READ_MMU_SPARE_REG1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_SPARE_REG1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_SPARE_REG1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_SPARE_REG1r, REG_PORT_ANY, 0), rv)

#define READ_MMU_SPARE_REG2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_SPARE_REG2r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_SPARE_REG2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_SPARE_REG2r, REG_PORT_ANY, 0), rv)

#define READ_MMU_SPARE_REG3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_SPARE_REG3r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_SPARE_REG3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_SPARE_REG3r, REG_PORT_ANY, 0), rv)

#define READ_MMU_SPARE_REG4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_SPARE_REG4r, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_SPARE_REG4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_SPARE_REG4r, REG_PORT_ANY, 0), rv)

#define READ_MMU_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MMU_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_MMU_TO_XPORT_BKPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_TO_XPORT_BKPr, port, 0), rvp)
#define WRITE_MMU_TO_XPORT_BKPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_TO_XPORT_BKPr, port, 0), rv)

#define READ_MMU_UPK_ERRLOGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_UPK_ERRLOGr, port, 0), rvp)
#define WRITE_MMU_UPK_ERRLOGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_UPK_ERRLOGr, port, 0), rv)

#define READ_MMU_XQ_EGRMAXTIMEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_XQ_EGRMAXTIMEr, port, 0), rvp)
#define WRITE_MMU_XQ_EGRMAXTIMEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_XQ_EGRMAXTIMEr, port, 0), rv)

#define READ_MMU_XQ_PARADr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MMU_XQ_PARADr, port, 0), rvp)
#define WRITE_MMU_XQ_PARADr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MMU_XQ_PARADr, port, 0), rv)

#define READ_MODMAP_CTRLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MODMAP_CTRLr, port, 0), rvp)
#define WRITE_MODMAP_CTRLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MODMAP_CTRLr, port, 0), rv)

#define READ_MODPORT_15_8r(unit, port, rvp) \
	soc_reg_read(unit, MODPORT_15_8r, soc_reg_addr(unit, MODPORT_15_8r, port, 0), rvp)
#define WRITE_MODPORT_15_8r(unit, port, rv) \
	soc_reg_write(unit, MODPORT_15_8r, soc_reg_addr(unit, MODPORT_15_8r, port, 0), rv)

#define READ_MODPORT_23_16r(unit, port, rvp) \
	soc_reg_read(unit, MODPORT_23_16r, soc_reg_addr(unit, MODPORT_23_16r, port, 0), rvp)
#define WRITE_MODPORT_23_16r(unit, port, rv) \
	soc_reg_write(unit, MODPORT_23_16r, soc_reg_addr(unit, MODPORT_23_16r, port, 0), rv)

#define READ_MODPORT_31_24r(unit, port, rvp) \
	soc_reg_read(unit, MODPORT_31_24r, soc_reg_addr(unit, MODPORT_31_24r, port, 0), rvp)
#define WRITE_MODPORT_31_24r(unit, port, rv) \
	soc_reg_write(unit, MODPORT_31_24r, soc_reg_addr(unit, MODPORT_31_24r, port, 0), rv)

#define READ_MODPORT_7_0r(unit, port, rvp) \
	soc_reg_read(unit, MODPORT_7_0r, soc_reg_addr(unit, MODPORT_7_0r, port, 0), rvp)
#define WRITE_MODPORT_7_0r(unit, port, rv) \
	soc_reg_write(unit, MODPORT_7_0r, soc_reg_addr(unit, MODPORT_7_0r, port, 0), rv)

#define READ_MODPORT_MAPr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MODPORT_MAPr, REG_PORT_ANY, idx), rvp)
#define WRITE_MODPORT_MAPr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MODPORT_MAPr, REG_PORT_ANY, idx), rv)

#define READ_MODPORT_MAP_EM_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MODPORT_MAP_EM_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MODPORT_MAP_EM_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MODPORT_MAP_EM_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_MODPORT_MAP_EM_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MODPORT_MAP_EM_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MODPORT_MAP_EM_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MODPORT_MAP_EM_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_MODPORT_MAP_IM_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MODPORT_MAP_IM_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MODPORT_MAP_IM_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MODPORT_MAP_IM_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_MODPORT_MAP_IM_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MODPORT_MAP_IM_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MODPORT_MAP_IM_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MODPORT_MAP_IM_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_MODPORT_MAP_SELr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MODPORT_MAP_SELr, port, 0), rvp)
#define WRITE_MODPORT_MAP_SELr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MODPORT_MAP_SELr, port, 0), rv)

#define READ_MODPORT_MAP_SW_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MODPORT_MAP_SW_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MODPORT_MAP_SW_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MODPORT_MAP_SW_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_MODPORT_MAP_SW_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MODPORT_MAP_SW_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MODPORT_MAP_SW_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MODPORT_MAP_SW_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_MOD_FIFO_CNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MOD_FIFO_CNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_MOD_FIFO_CNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MOD_FIFO_CNTr, REG_PORT_ANY, 0), rv)

#define READ_MOTP_CHECKSUM_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MOTP_CHECKSUM_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MOTP_CHECKSUM_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MOTP_CHECKSUM_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_MPLS_ENTRY_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MPLS_ENTRY_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MPLS_ENTRY_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MPLS_ENTRY_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_MPLS_ENTRY_HASH_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MPLS_ENTRY_HASH_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MPLS_ENTRY_HASH_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MPLS_ENTRY_HASH_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_MPLS_ENTRY_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MPLS_ENTRY_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MPLS_ENTRY_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MPLS_ENTRY_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_MPLS_ENTRY_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MPLS_ENTRY_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MPLS_ENTRY_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MPLS_ENTRY_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_MPLS_MEMORY_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MPLS_MEMORY_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MPLS_MEMORY_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MPLS_MEMORY_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_MPLS_STATION_CAM_BIST_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MPLS_STATION_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MPLS_STATION_CAM_BIST_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MPLS_STATION_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_MPLS_STATION_CAM_BIST_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MPLS_STATION_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MPLS_STATION_CAM_BIST_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MPLS_STATION_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_MPLS_STATION_CAM_BIST_DBG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MPLS_STATION_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_MPLS_STATION_CAM_BIST_DBG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MPLS_STATION_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_MPLS_STATION_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MPLS_STATION_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MPLS_STATION_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MPLS_STATION_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_MPLS_STATION_CAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MPLS_STATION_CAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_MPLS_STATION_CAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MPLS_STATION_CAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_MRCUSE0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MRCUSE0r, port, 0), rvp)
#define WRITE_MRCUSE0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MRCUSE0r, port, 0), rv)

#define READ_MRCUSE1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MRCUSE1r, REG_PORT_ANY, 0), rvp)
#define WRITE_MRCUSE1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MRCUSE1r, REG_PORT_ANY, 0), rv)

#define READ_MRPCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MRPCOSr, port, idx), rvp)
#define WRITE_MRPCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MRPCOSr, port, idx), rv)

#define READ_MSYS_FUSE_BITSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MSYS_FUSE_BITSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MSYS_FUSE_BITSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MSYS_FUSE_BITSr, REG_PORT_ANY, 0), rv)

#define READ_MTC0COSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MTC0COSr, port, idx), rvp)
#define WRITE_MTC0COSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MTC0COSr, port, idx), rv)

#define READ_MTC1COSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MTC1COSr, port, idx), rvp)
#define WRITE_MTC1COSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MTC1COSr, port, idx), rv)

#define READ_MTCCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MTCCOSr, port, idx), rvp)
#define WRITE_MTCCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MTCCOSr, port, idx), rv)

#define READ_MTCREQr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MTCREQr, port, 0), rvp)
#define WRITE_MTCREQr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MTCREQr, port, 0), rv)

#define READ_MTPCNGDr(unit, port, rvp) \
	soc_reg_read(unit, MTPCNGDr, soc_reg_addr(unit, MTPCNGDr, port, 0), rvp)
#define WRITE_MTPCNGDr(unit, port, rv) \
	soc_reg_write(unit, MTPCNGDr, soc_reg_addr(unit, MTPCNGDr, port, 0), rv)

#define READ_MTPCNGDRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MTPCNGDRr, port, 0), rvp)
#define WRITE_MTPCNGDRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MTPCNGDRr, port, 0), rv)

#define READ_MTPCNGDYr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MTPCNGDYr, port, 0), rvp)
#define WRITE_MTPCNGDYr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MTPCNGDYr, port, 0), rv)

#define READ_MTPCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MTPCOSr, port, idx), rvp)
#define WRITE_MTPCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MTPCOSr, port, idx), rv)

#define READ_MTPCOSDr(unit, port, idx, rvp) \
	soc_reg_read(unit, MTPCOSDr, soc_reg_addr(unit, MTPCOSDr, port, idx), rvp)
#define WRITE_MTPCOSDr(unit, port, idx, rv) \
	soc_reg_write(unit, MTPCOSDr, soc_reg_addr(unit, MTPCOSDr, port, idx), rv)

#define READ_MTPHOLDr(unit, port, rvp) \
	soc_reg_read(unit, MTPHOLDr, soc_reg_addr(unit, MTPHOLDr, port, 0), rvp)
#define WRITE_MTPHOLDr(unit, port, rv) \
	soc_reg_write(unit, MTPHOLDr, soc_reg_addr(unit, MTPHOLDr, port, 0), rv)

#define READ_MTRI_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MTRI_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MTRI_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MTRI_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_MTRI_IFGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MTRI_IFGr, port, 0), rvp)
#define WRITE_MTRI_IFGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MTRI_IFGr, port, 0), rv)

#define READ_MTRO_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MTRO_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_MTRO_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MTRO_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_MULTICAST_FREEPTR_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MULTICAST_FREEPTR_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_MULTICAST_FREEPTR_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MULTICAST_FREEPTR_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_MVL_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MVL_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_MVL_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MVL_ISr, REG_PORT_ANY, 0), rv)

#define READ_MWRQSIZEr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, MWRQSIZEr, port, idx), rvp)
#define WRITE_MWRQSIZEr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, MWRQSIZEr, port, idx), rv)

#define READ_NONUCAST_TRUNK_BLOCK_MASKr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, NONUCAST_TRUNK_BLOCK_MASKr, REG_PORT_ANY, idx), rvp)
#define WRITE_NONUCAST_TRUNK_BLOCK_MASKr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, NONUCAST_TRUNK_BLOCK_MASKr, REG_PORT_ANY, idx), rv)

#define READ_OP_BUFFER_LIMIT_REDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_REDr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_LIMIT_REDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_REDr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_LIMIT_RED_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RED_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_LIMIT_RED_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RED_CELLr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_LIMIT_RED_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RED_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_LIMIT_RED_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RED_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_LIMIT_RESUME_REDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RESUME_REDr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_LIMIT_RESUME_REDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RESUME_REDr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_LIMIT_RESUME_RED_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RESUME_RED_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_LIMIT_RESUME_RED_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RESUME_RED_CELLr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_LIMIT_RESUME_RED_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RESUME_RED_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_LIMIT_RESUME_RED_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RESUME_RED_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_LIMIT_RESUME_YELLOWr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RESUME_YELLOWr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_LIMIT_RESUME_YELLOWr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RESUME_YELLOWr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_LIMIT_RESUME_YELLOW_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RESUME_YELLOW_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_LIMIT_RESUME_YELLOW_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RESUME_YELLOW_CELLr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_LIMIT_RESUME_YELLOW_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RESUME_YELLOW_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_LIMIT_RESUME_YELLOW_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_RESUME_YELLOW_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_LIMIT_YELLOWr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_YELLOWr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_LIMIT_YELLOWr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_YELLOWr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_LIMIT_YELLOW_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_YELLOW_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_LIMIT_YELLOW_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_YELLOW_CELLr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_LIMIT_YELLOW_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_YELLOW_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_LIMIT_YELLOW_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_LIMIT_YELLOW_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_SHARED_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_SHARED_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_SHARED_COUNT_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_COUNT_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_SHARED_COUNT_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_COUNT_CELLr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_SHARED_COUNT_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_COUNT_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_SHARED_COUNT_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_COUNT_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_SHARED_LIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_LIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_SHARED_LIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_LIMITr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_SHARED_LIMIT_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_LIMIT_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_SHARED_LIMIT_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_LIMIT_CELLr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_SHARED_LIMIT_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_LIMIT_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_SHARED_LIMIT_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_LIMIT_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_SHARED_LIMIT_RESUMEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_LIMIT_RESUMEr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_SHARED_LIMIT_RESUMEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_LIMIT_RESUMEr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_SHARED_LIMIT_RESUME_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_LIMIT_RESUME_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_SHARED_LIMIT_RESUME_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_LIMIT_RESUME_CELLr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_SHARED_LIMIT_RESUME_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_LIMIT_RESUME_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_SHARED_LIMIT_RESUME_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_SHARED_LIMIT_RESUME_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_TOTAL_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_TOTAL_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_TOTAL_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_TOTAL_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_TOTAL_COUNT_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_TOTAL_COUNT_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_TOTAL_COUNT_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_TOTAL_COUNT_CELLr, REG_PORT_ANY, 0), rv)

#define READ_OP_BUFFER_TOTAL_COUNT_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_BUFFER_TOTAL_COUNT_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_BUFFER_TOTAL_COUNT_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_BUFFER_TOTAL_COUNT_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_OP_PORT_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_CONFIGr, port, 0), rvp)
#define WRITE_OP_PORT_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_CONFIGr, port, 0), rv)

#define READ_OP_PORT_CONFIG_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_CONFIG_CELLr, port, 0), rvp)
#define WRITE_OP_PORT_CONFIG_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_CONFIG_CELLr, port, 0), rv)

#define READ_OP_PORT_CONFIG_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_CONFIG_PACKETr, port, 0), rvp)
#define WRITE_OP_PORT_CONFIG_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_CONFIG_PACKETr, port, 0), rv)

#define READ_OP_PORT_DROP_STATE_BMPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_DROP_STATE_BMPr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_PORT_DROP_STATE_BMPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_DROP_STATE_BMPr, REG_PORT_ANY, 0), rv)

#define READ_OP_PORT_DROP_STATE_CELL_BMP0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_DROP_STATE_CELL_BMP0r, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_PORT_DROP_STATE_CELL_BMP0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_DROP_STATE_CELL_BMP0r, REG_PORT_ANY, 0), rv)

#define READ_OP_PORT_DROP_STATE_CELL_BMP1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_DROP_STATE_CELL_BMP1r, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_PORT_DROP_STATE_CELL_BMP1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_DROP_STATE_CELL_BMP1r, REG_PORT_ANY, 0), rv)

#define READ_OP_PORT_DROP_STATE_PACKET_BMP0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_DROP_STATE_PACKET_BMP0r, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_PORT_DROP_STATE_PACKET_BMP0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_DROP_STATE_PACKET_BMP0r, REG_PORT_ANY, 0), rv)

#define READ_OP_PORT_DROP_STATE_PACKET_BMP1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_DROP_STATE_PACKET_BMP1r, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_PORT_DROP_STATE_PACKET_BMP1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_DROP_STATE_PACKET_BMP1r, REG_PORT_ANY, 0), rv)

#define READ_OP_PORT_LIMIT_REDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_LIMIT_REDr, port, 0), rvp)
#define WRITE_OP_PORT_LIMIT_REDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_LIMIT_REDr, port, 0), rv)

#define READ_OP_PORT_LIMIT_RED_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_LIMIT_RED_CELLr, port, 0), rvp)
#define WRITE_OP_PORT_LIMIT_RED_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_LIMIT_RED_CELLr, port, 0), rv)

#define READ_OP_PORT_LIMIT_RED_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_LIMIT_RED_PACKETr, port, 0), rvp)
#define WRITE_OP_PORT_LIMIT_RED_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_LIMIT_RED_PACKETr, port, 0), rv)

#define READ_OP_PORT_LIMIT_YELLOWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_LIMIT_YELLOWr, port, 0), rvp)
#define WRITE_OP_PORT_LIMIT_YELLOWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_LIMIT_YELLOWr, port, 0), rv)

#define READ_OP_PORT_LIMIT_YELLOW_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_LIMIT_YELLOW_CELLr, port, 0), rvp)
#define WRITE_OP_PORT_LIMIT_YELLOW_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_LIMIT_YELLOW_CELLr, port, 0), rv)

#define READ_OP_PORT_LIMIT_YELLOW_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_LIMIT_YELLOW_PACKETr, port, 0), rvp)
#define WRITE_OP_PORT_LIMIT_YELLOW_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_LIMIT_YELLOW_PACKETr, port, 0), rv)

#define READ_OP_PORT_SHARED_COUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_SHARED_COUNTr, port, 0), rvp)
#define WRITE_OP_PORT_SHARED_COUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_SHARED_COUNTr, port, 0), rv)

#define READ_OP_PORT_SHARED_COUNT_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_SHARED_COUNT_CELLr, port, 0), rvp)
#define WRITE_OP_PORT_SHARED_COUNT_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_SHARED_COUNT_CELLr, port, 0), rv)

#define READ_OP_PORT_SHARED_COUNT_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_SHARED_COUNT_PACKETr, port, 0), rvp)
#define WRITE_OP_PORT_SHARED_COUNT_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_SHARED_COUNT_PACKETr, port, 0), rv)

#define READ_OP_PORT_TOTAL_COUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_TOTAL_COUNTr, port, 0), rvp)
#define WRITE_OP_PORT_TOTAL_COUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_TOTAL_COUNTr, port, 0), rv)

#define READ_OP_PORT_TOTAL_COUNT_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_TOTAL_COUNT_CELLr, port, 0), rvp)
#define WRITE_OP_PORT_TOTAL_COUNT_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_TOTAL_COUNT_CELLr, port, 0), rv)

#define READ_OP_PORT_TOTAL_COUNT_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_PORT_TOTAL_COUNT_PACKETr, port, 0), rvp)
#define WRITE_OP_PORT_TOTAL_COUNT_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_PORT_TOTAL_COUNT_PACKETr, port, 0), rv)

#define READ_OP_QUEUE_CONFIGr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_CONFIGr, port, idx), rvp)
#define WRITE_OP_QUEUE_CONFIGr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_CONFIGr, port, idx), rv)

#define READ_OP_QUEUE_CONFIG1_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_CONFIG1_CELLr, port, idx), rvp)
#define WRITE_OP_QUEUE_CONFIG1_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_CONFIG1_CELLr, port, idx), rv)

#define READ_OP_QUEUE_CONFIG1_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_CONFIG1_PACKETr, port, idx), rvp)
#define WRITE_OP_QUEUE_CONFIG1_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_CONFIG1_PACKETr, port, idx), rv)

#define READ_OP_QUEUE_CONFIG_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_CONFIG_CELLr, port, idx), rvp)
#define WRITE_OP_QUEUE_CONFIG_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_CONFIG_CELLr, port, idx), rv)

#define READ_OP_QUEUE_CONFIG_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_CONFIG_PACKETr, port, idx), rvp)
#define WRITE_OP_QUEUE_CONFIG_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_CONFIG_PACKETr, port, idx), rv)

#define READ_OP_QUEUE_LIMIT_REDr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_LIMIT_REDr, port, idx), rvp)
#define WRITE_OP_QUEUE_LIMIT_REDr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_LIMIT_REDr, port, idx), rv)

#define READ_OP_QUEUE_LIMIT_RED_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_LIMIT_RED_CELLr, port, idx), rvp)
#define WRITE_OP_QUEUE_LIMIT_RED_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_LIMIT_RED_CELLr, port, idx), rv)

#define READ_OP_QUEUE_LIMIT_RED_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_LIMIT_RED_PACKETr, port, idx), rvp)
#define WRITE_OP_QUEUE_LIMIT_RED_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_LIMIT_RED_PACKETr, port, idx), rv)

#define READ_OP_QUEUE_LIMIT_YELLOWr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_LIMIT_YELLOWr, port, idx), rvp)
#define WRITE_OP_QUEUE_LIMIT_YELLOWr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_LIMIT_YELLOWr, port, idx), rv)

#define READ_OP_QUEUE_LIMIT_YELLOW_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_LIMIT_YELLOW_CELLr, port, idx), rvp)
#define WRITE_OP_QUEUE_LIMIT_YELLOW_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_LIMIT_YELLOW_CELLr, port, idx), rv)

#define READ_OP_QUEUE_LIMIT_YELLOW_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_LIMIT_YELLOW_PACKETr, port, idx), rvp)
#define WRITE_OP_QUEUE_LIMIT_YELLOW_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_LIMIT_YELLOW_PACKETr, port, idx), rv)

#define READ_OP_QUEUE_MIN_COUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_MIN_COUNTr, port, idx), rvp)
#define WRITE_OP_QUEUE_MIN_COUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_MIN_COUNTr, port, idx), rv)

#define READ_OP_QUEUE_MIN_COUNT_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_MIN_COUNT_CELLr, port, idx), rvp)
#define WRITE_OP_QUEUE_MIN_COUNT_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_MIN_COUNT_CELLr, port, idx), rv)

#define READ_OP_QUEUE_MIN_COUNT_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_MIN_COUNT_PACKETr, port, idx), rvp)
#define WRITE_OP_QUEUE_MIN_COUNT_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_MIN_COUNT_PACKETr, port, idx), rv)

#define READ_OP_QUEUE_RESET_OFFSETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_RESET_OFFSETr, port, idx), rvp)
#define WRITE_OP_QUEUE_RESET_OFFSETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_RESET_OFFSETr, port, idx), rv)

#define READ_OP_QUEUE_RESET_OFFSET_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_RESET_OFFSET_CELLr, port, idx), rvp)
#define WRITE_OP_QUEUE_RESET_OFFSET_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_RESET_OFFSET_CELLr, port, idx), rv)

#define READ_OP_QUEUE_RESET_OFFSET_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_RESET_OFFSET_PACKETr, port, idx), rvp)
#define WRITE_OP_QUEUE_RESET_OFFSET_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_RESET_OFFSET_PACKETr, port, idx), rv)

#define READ_OP_QUEUE_RESET_VALUEr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_RESET_VALUEr, port, idx), rvp)
#define WRITE_OP_QUEUE_RESET_VALUEr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_RESET_VALUEr, port, idx), rv)

#define READ_OP_QUEUE_RESET_VALUE_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_RESET_VALUE_CELLr, port, idx), rvp)
#define WRITE_OP_QUEUE_RESET_VALUE_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_RESET_VALUE_CELLr, port, idx), rv)

#define READ_OP_QUEUE_RESET_VALUE_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_RESET_VALUE_PACKETr, port, idx), rvp)
#define WRITE_OP_QUEUE_RESET_VALUE_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_RESET_VALUE_PACKETr, port, idx), rv)

#define READ_OP_QUEUE_SHARED_COUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_SHARED_COUNTr, port, idx), rvp)
#define WRITE_OP_QUEUE_SHARED_COUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_SHARED_COUNTr, port, idx), rv)

#define READ_OP_QUEUE_SHARED_COUNT_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_SHARED_COUNT_CELLr, port, idx), rvp)
#define WRITE_OP_QUEUE_SHARED_COUNT_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_SHARED_COUNT_CELLr, port, idx), rv)

#define READ_OP_QUEUE_SHARED_COUNT_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_SHARED_COUNT_PACKETr, port, idx), rvp)
#define WRITE_OP_QUEUE_SHARED_COUNT_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_SHARED_COUNT_PACKETr, port, idx), rv)

#define READ_OP_QUEUE_TOTAL_COUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_TOTAL_COUNTr, port, idx), rvp)
#define WRITE_OP_QUEUE_TOTAL_COUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_TOTAL_COUNTr, port, idx), rv)

#define READ_OP_QUEUE_TOTAL_COUNT_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_TOTAL_COUNT_CELLr, port, idx), rvp)
#define WRITE_OP_QUEUE_TOTAL_COUNT_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_TOTAL_COUNT_CELLr, port, idx), rv)

#define READ_OP_QUEUE_TOTAL_COUNT_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_QUEUE_TOTAL_COUNT_PACKETr, port, idx), rvp)
#define WRITE_OP_QUEUE_TOTAL_COUNT_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_QUEUE_TOTAL_COUNT_PACKETr, port, idx), rv)

#define READ_OP_THR_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OP_THR_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_OP_THR_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OP_THR_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_OTPC_CNTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OTPC_CNTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_OTPC_CNTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OTPC_CNTRLr, REG_PORT_ANY, 0), rv)

#define READ_OTPC_CPUADDR_REGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OTPC_CPUADDR_REGr, REG_PORT_ANY, 0), rvp)
#define WRITE_OTPC_CPUADDR_REGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OTPC_CPUADDR_REGr, REG_PORT_ANY, 0), rv)

#define READ_OTPC_CPU_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OTPC_CPU_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_OTPC_CPU_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OTPC_CPU_DATAr, REG_PORT_ANY, 0), rv)

#define READ_OTPC_CPU_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OTPC_CPU_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_OTPC_CPU_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OTPC_CPU_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_OTPC_CPU_WRITE_REGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OTPC_CPU_WRITE_REGr, REG_PORT_ANY, 0), rvp)
#define WRITE_OTPC_CPU_WRITE_REGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OTPC_CPU_WRITE_REGr, REG_PORT_ANY, 0), rv)

#define READ_OTPC_MODE_REGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OTPC_MODE_REGr, REG_PORT_ANY, 0), rvp)
#define WRITE_OTPC_MODE_REGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OTPC_MODE_REGr, REG_PORT_ANY, 0), rv)

#define READ_OTPC_SOFT_RESET_CNTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OTPC_SOFT_RESET_CNTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_OTPC_SOFT_RESET_CNTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OTPC_SOFT_RESET_CNTRLr, REG_PORT_ANY, 0), rv)

#define READ_OUTPUT_PORT_RX_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, OUTPUT_PORT_RX_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_OUTPUT_PORT_RX_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, OUTPUT_PORT_RX_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_OUTPUT_PORT_RX_ENABLE_64r(unit, rvp) \
	soc_reg_read(unit, OUTPUT_PORT_RX_ENABLE_64r, soc_reg_addr(unit, OUTPUT_PORT_RX_ENABLE_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_OUTPUT_PORT_RX_ENABLE_64r(unit, rv) \
	soc_reg_write(unit, OUTPUT_PORT_RX_ENABLE_64r, soc_reg_addr(unit, OUTPUT_PORT_RX_ENABLE_64r, REG_PORT_ANY, 0), rv)

#define READ_PARITY_ERR_ADDRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PARITY_ERR_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_PARITY_ERR_ADDRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PARITY_ERR_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_PARS_RAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PARS_RAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_PARS_RAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PARS_RAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_EGR_VLAN_XLATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_EGR_VLAN_XLATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_EGR_VLAN_XLATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_EGR_VLAN_XLATEr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_IGR_VLAN_XLATEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_IGR_VLAN_XLATEr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_IGR_VLAN_XLATEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_IGR_VLAN_XLATEr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_IPMC_GROUP_V4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_IPMC_GROUP_V4r, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_IPMC_GROUP_V4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_IPMC_GROUP_V4r, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_IPMC_GROUP_V6r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_IPMC_GROUP_V6r, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_IPMC_GROUP_V6r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_IPMC_GROUP_V6r, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_L2_ENTRYr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_L2_ENTRYr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_L2_ENTRYr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_L2_ENTRYr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_L2_ENTRY_EXTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_L2_ENTRY_EXTr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_L2_ENTRY_EXTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_L2_ENTRY_EXTr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_L3_DEFIP_ALGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_L3_DEFIP_ALGr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_L3_DEFIP_ALGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_L3_DEFIP_ALGr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_L3_DEFIP_ALG_EXTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_L3_DEFIP_ALG_EXTr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_L3_DEFIP_ALG_EXTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_L3_DEFIP_ALG_EXTr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_L3_ENTRY_V4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_L3_ENTRY_V4r, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_L3_ENTRY_V4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_L3_ENTRY_V4r, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_L3_ENTRY_V6r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_L3_ENTRY_V6r, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_L3_ENTRY_V6r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_L3_ENTRY_V6r, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_L3_INTF_TABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_L3_INTF_TABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_L3_INTF_TABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_L3_INTF_TABLEr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_L3_LPM_HITBITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_L3_LPM_HITBITr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_L3_LPM_HITBITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_L3_LPM_HITBITr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_NEXT_HOP_EXTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_NEXT_HOP_EXTr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_NEXT_HOP_EXTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_NEXT_HOP_EXTr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_NEXT_HOP_INTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_NEXT_HOP_INTr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_NEXT_HOP_INTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_NEXT_HOP_INTr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ADR_VRF_VFI_INTFr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ADR_VRF_VFI_INTFr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ADR_VRF_VFI_INTFr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ADR_VRF_VFI_INTFr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ERR_MASK_BSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ERR_MASK_BSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ERR_MASK_BSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ERR_MASK_BSEr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ERR_MASK_CSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ERR_MASK_CSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ERR_MASK_CSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ERR_MASK_CSEr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ERR_MASK_HSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ERR_MASK_HSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ERR_MASK_HSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ERR_MASK_HSEr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ERR_STATUS_BSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ERR_STATUS_BSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ERR_STATUS_BSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ERR_STATUS_BSEr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ERR_STATUS_CSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ERR_STATUS_CSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ERR_STATUS_CSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ERR_STATUS_CSEr, REG_PORT_ANY, 0), rv)

#define READ_PAR_ERR_STATUS_HSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAR_ERR_STATUS_HSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_PAR_ERR_STATUS_HSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAR_ERR_STATUS_HSEr, REG_PORT_ANY, 0), rv)

#define READ_PAUSE_CONTROLr(unit, port, rvp) \
	soc_reg_read(unit, PAUSE_CONTROLr, soc_reg_addr(unit, PAUSE_CONTROLr, port, 0), rvp)
#define WRITE_PAUSE_CONTROLr(unit, port, rv) \
	soc_reg_write(unit, PAUSE_CONTROLr, soc_reg_addr(unit, PAUSE_CONTROLr, port, 0), rv)

#define READ_PAUSE_QUANTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PAUSE_QUANTr, port, 0), rvp)
#define WRITE_PAUSE_QUANTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PAUSE_QUANTr, port, 0), rv)

#define READ_PBM_ZEROr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PBM_ZEROr, REG_PORT_ANY, 0), rvp)
#define WRITE_PBM_ZEROr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PBM_ZEROr, REG_PORT_ANY, 0), rv)

#define READ_PERR_PTR_CTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PERR_PTR_CTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_PERR_PTR_CTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PERR_PTR_CTRr, REG_PORT_ANY, 0), rv)

#define READ_PERR_PTR_EXPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PERR_PTR_EXPr, REG_PORT_ANY, 0), rvp)
#define WRITE_PERR_PTR_EXPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PERR_PTR_EXPr, REG_PORT_ANY, 0), rv)

#define READ_PERR_STATr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PERR_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_PERR_STATr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PERR_STATr, REG_PORT_ANY, 0), rv)

#define READ_PER_PORT_AGE_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PER_PORT_AGE_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_PER_PORT_AGE_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PER_PORT_AGE_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_PER_PORT_REPL_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PER_PORT_REPL_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_PER_PORT_REPL_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PER_PORT_REPL_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_PFAPCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PFAPCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_PFAPCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PFAPCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_PFAPDEBUGSCR0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PFAPDEBUGSCR0r, REG_PORT_ANY, 0), rvp)
#define WRITE_PFAPDEBUGSCR0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PFAPDEBUGSCR0r, REG_PORT_ANY, 0), rv)

#define READ_PFAPDEBUGSCR1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PFAPDEBUGSCR1r, REG_PORT_ANY, 0), rvp)
#define WRITE_PFAPDEBUGSCR1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PFAPDEBUGSCR1r, REG_PORT_ANY, 0), rv)

#define READ_PFAPDEBUGSCR2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PFAPDEBUGSCR2r, REG_PORT_ANY, 0), rvp)
#define WRITE_PFAPDEBUGSCR2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PFAPDEBUGSCR2r, REG_PORT_ANY, 0), rv)

#define READ_PFAPFULLTHRESHOLDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PFAPFULLTHRESHOLDr, REG_PORT_ANY, 0), rvp)
#define WRITE_PFAPFULLTHRESHOLDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PFAPFULLTHRESHOLDr, REG_PORT_ANY, 0), rv)

#define READ_PFAPMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PFAPMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_PFAPMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PFAPMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_PFAPPARITYERRORPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PFAPPARITYERRORPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_PFAPPARITYERRORPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PFAPPARITYERRORPTRr, REG_PORT_ANY, 0), rv)

#define READ_PFAPREADPOINTERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PFAPREADPOINTERr, REG_PORT_ANY, 0), rvp)
#define WRITE_PFAPREADPOINTERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PFAPREADPOINTERr, REG_PORT_ANY, 0), rv)

#define READ_PG_COUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_COUNTr, port, idx), rvp)
#define WRITE_PG_COUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_COUNTr, port, idx), rv)

#define READ_PG_COUNT_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_COUNT_CELLr, port, idx), rvp)
#define WRITE_PG_COUNT_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_COUNT_CELLr, port, idx), rv)

#define READ_PG_COUNT_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_COUNT_PACKETr, port, idx), rvp)
#define WRITE_PG_COUNT_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_COUNT_PACKETr, port, idx), rv)

#define READ_PG_GBL_HDRM_COUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_GBL_HDRM_COUNTr, port, idx), rvp)
#define WRITE_PG_GBL_HDRM_COUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_GBL_HDRM_COUNTr, port, idx), rv)

#define READ_PG_HDRM_COUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_HDRM_COUNTr, port, idx), rvp)
#define WRITE_PG_HDRM_COUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_HDRM_COUNTr, port, idx), rv)

#define READ_PG_HDRM_COUNT_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_HDRM_COUNT_CELLr, port, idx), rvp)
#define WRITE_PG_HDRM_COUNT_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_HDRM_COUNT_CELLr, port, idx), rv)

#define READ_PG_HDRM_COUNT_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_HDRM_COUNT_PACKETr, port, idx), rvp)
#define WRITE_PG_HDRM_COUNT_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_HDRM_COUNT_PACKETr, port, idx), rv)

#define READ_PG_HDRM_LIMITr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_HDRM_LIMITr, port, idx), rvp)
#define WRITE_PG_HDRM_LIMITr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_HDRM_LIMITr, port, idx), rv)

#define READ_PG_HDRM_LIMIT_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_HDRM_LIMIT_CELLr, port, idx), rvp)
#define WRITE_PG_HDRM_LIMIT_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_HDRM_LIMIT_CELLr, port, idx), rv)

#define READ_PG_HDRM_LIMIT_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_HDRM_LIMIT_PACKETr, port, idx), rvp)
#define WRITE_PG_HDRM_LIMIT_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_HDRM_LIMIT_PACKETr, port, idx), rv)

#define READ_PG_MINr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_MINr, port, idx), rvp)
#define WRITE_PG_MINr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_MINr, port, idx), rv)

#define READ_PG_MIN_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_MIN_CELLr, port, idx), rvp)
#define WRITE_PG_MIN_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_MIN_CELLr, port, idx), rv)

#define READ_PG_MIN_COUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_MIN_COUNTr, port, idx), rvp)
#define WRITE_PG_MIN_COUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_MIN_COUNTr, port, idx), rv)

#define READ_PG_MIN_COUNT_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_MIN_COUNT_CELLr, port, idx), rvp)
#define WRITE_PG_MIN_COUNT_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_MIN_COUNT_CELLr, port, idx), rv)

#define READ_PG_MIN_COUNT_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_MIN_COUNT_PACKETr, port, idx), rvp)
#define WRITE_PG_MIN_COUNT_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_MIN_COUNT_PACKETr, port, idx), rv)

#define READ_PG_MIN_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_MIN_PACKETr, port, idx), rvp)
#define WRITE_PG_MIN_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_MIN_PACKETr, port, idx), rv)

#define READ_PG_PORT_MIN_COUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_PORT_MIN_COUNTr, port, idx), rvp)
#define WRITE_PG_PORT_MIN_COUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_PORT_MIN_COUNTr, port, idx), rv)

#define READ_PG_PORT_MIN_COUNT_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_PORT_MIN_COUNT_CELLr, port, idx), rvp)
#define WRITE_PG_PORT_MIN_COUNT_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_PORT_MIN_COUNT_CELLr, port, idx), rv)

#define READ_PG_PORT_MIN_COUNT_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_PORT_MIN_COUNT_PACKETr, port, idx), rvp)
#define WRITE_PG_PORT_MIN_COUNT_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_PORT_MIN_COUNT_PACKETr, port, idx), rv)

#define READ_PG_RESET_FLOORr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_RESET_FLOORr, port, idx), rvp)
#define WRITE_PG_RESET_FLOORr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_RESET_FLOORr, port, idx), rv)

#define READ_PG_RESET_FLOOR_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_RESET_FLOOR_CELLr, port, idx), rvp)
#define WRITE_PG_RESET_FLOOR_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_RESET_FLOOR_CELLr, port, idx), rv)

#define READ_PG_RESET_OFFSETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_RESET_OFFSETr, port, idx), rvp)
#define WRITE_PG_RESET_OFFSETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_RESET_OFFSETr, port, idx), rv)

#define READ_PG_RESET_OFFSET_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_RESET_OFFSET_CELLr, port, idx), rvp)
#define WRITE_PG_RESET_OFFSET_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_RESET_OFFSET_CELLr, port, idx), rv)

#define READ_PG_RESET_OFFSET_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_RESET_OFFSET_PACKETr, port, idx), rvp)
#define WRITE_PG_RESET_OFFSET_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_RESET_OFFSET_PACKETr, port, idx), rv)

#define READ_PG_RESET_SELr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_RESET_SELr, port, 0), rvp)
#define WRITE_PG_RESET_SELr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_RESET_SELr, port, 0), rv)

#define READ_PG_RESET_VALUEr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_RESET_VALUEr, port, idx), rvp)
#define WRITE_PG_RESET_VALUEr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_RESET_VALUEr, port, idx), rv)

#define READ_PG_RESET_VALUE_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_RESET_VALUE_CELLr, port, idx), rvp)
#define WRITE_PG_RESET_VALUE_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_RESET_VALUE_CELLr, port, idx), rv)

#define READ_PG_RESET_VALUE_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_RESET_VALUE_PACKETr, port, idx), rvp)
#define WRITE_PG_RESET_VALUE_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_RESET_VALUE_PACKETr, port, idx), rv)

#define READ_PG_SHARED_COUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_SHARED_COUNTr, port, idx), rvp)
#define WRITE_PG_SHARED_COUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_SHARED_COUNTr, port, idx), rv)

#define READ_PG_SHARED_COUNT_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_SHARED_COUNT_CELLr, port, idx), rvp)
#define WRITE_PG_SHARED_COUNT_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_SHARED_COUNT_CELLr, port, idx), rv)

#define READ_PG_SHARED_COUNT_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_SHARED_COUNT_PACKETr, port, idx), rvp)
#define WRITE_PG_SHARED_COUNT_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_SHARED_COUNT_PACKETr, port, idx), rv)

#define READ_PG_THRESH_SELr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PG_THRESH_SELr, port, 0), rvp)
#define WRITE_PG_THRESH_SELr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PG_THRESH_SELr, port, 0), rv)

#define READ_PKTAGETIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTAGETIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTAGETIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTAGETIMERr, REG_PORT_ANY, 0), rv)

#define READ_PKTAGINGLIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTAGINGLIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTAGINGLIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTAGINGLIMITr, REG_PORT_ANY, 0), rv)

#define READ_PKTAGINGLIMIT0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTAGINGLIMIT0r, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTAGINGLIMIT0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTAGINGLIMIT0r, REG_PORT_ANY, 0), rv)

#define READ_PKTAGINGLIMIT1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTAGINGLIMIT1r, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTAGINGLIMIT1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTAGINGLIMIT1r, REG_PORT_ANY, 0), rv)

#define READ_PKTAGINGTIMERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTAGINGTIMERr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTAGINGTIMERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTAGINGTIMERr, REG_PORT_ANY, 0), rv)

#define READ_PKTBUF_ESM_DROPCNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTBUF_ESM_DROPCNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTBUF_ESM_DROPCNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTBUF_ESM_DROPCNTr, REG_PORT_ANY, 0), rv)

#define READ_PKTBUF_ESM_OFFSETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTBUF_ESM_OFFSETr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTBUF_ESM_OFFSETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTBUF_ESM_OFFSETr, REG_PORT_ANY, 0), rv)

#define READ_PKTLENGTHMEMDEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTLENGTHMEMDEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTLENGTHMEMDEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTLENGTHMEMDEBUGr, REG_PORT_ANY, 0), rv)

#define READ_PKTLINKMEMDEBUGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTLINKMEMDEBUGr, REG_PORT_ANY, idx), rvp)
#define WRITE_PKTLINKMEMDEBUGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTLINKMEMDEBUGr, REG_PORT_ANY, idx), rv)

#define READ_PKTMAXBUCKETr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTMAXBUCKETr, REG_PORT_ANY, idx), rvp)
#define WRITE_PKTMAXBUCKETr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTMAXBUCKETr, REG_PORT_ANY, idx), rv)

#define READ_PKTMAXBUCKETCONFIGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTMAXBUCKETCONFIGr, REG_PORT_ANY, idx), rvp)
#define WRITE_PKTMAXBUCKETCONFIGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTMAXBUCKETCONFIGr, REG_PORT_ANY, idx), rv)

#define READ_PKTPORTMAXBUCKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTPORTMAXBUCKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTPORTMAXBUCKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTPORTMAXBUCKETr, REG_PORT_ANY, 0), rv)

#define READ_PKTPORTMAXBUCKETCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTPORTMAXBUCKETCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTPORTMAXBUCKETCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTPORTMAXBUCKETCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_PKTSIZEADJUSTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTSIZEADJUSTr, port, 0), rvp)
#define WRITE_PKTSIZEADJUSTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTSIZEADJUSTr, port, 0), rv)

#define READ_PKTSIZECORRECTIONr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTSIZECORRECTIONr, port, 0), rvp)
#define WRITE_PKTSIZECORRECTIONr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTSIZECORRECTIONr, port, 0), rv)

#define READ_PKTS_RECEIVED_LSBr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTS_RECEIVED_LSBr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTS_RECEIVED_LSBr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTS_RECEIVED_LSBr, REG_PORT_ANY, 0), rv)

#define READ_PKTS_RECEIVED_MSBr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTS_RECEIVED_MSBr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTS_RECEIVED_MSBr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTS_RECEIVED_MSBr, REG_PORT_ANY, 0), rv)

#define READ_PKTS_TRANSMITTED_LSBr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTS_TRANSMITTED_LSBr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTS_TRANSMITTED_LSBr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTS_TRANSMITTED_LSBr, REG_PORT_ANY, 0), rv)

#define READ_PKTS_TRANSMITTED_MSBr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKTS_TRANSMITTED_MSBr, REG_PORT_ANY, 0), rvp)
#define WRITE_PKTS_TRANSMITTED_MSBr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKTS_TRANSMITTED_MSBr, REG_PORT_ANY, 0), rv)

#define READ_PKT_DROP_ENABLEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PKT_DROP_ENABLEr, port, 0), rvp)
#define WRITE_PKT_DROP_ENABLEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PKT_DROP_ENABLEr, port, 0), rv)

#define READ_POL_START_OVRDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, POL_START_OVRDr, REG_PORT_ANY, 0), rvp)
#define WRITE_POL_START_OVRDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, POL_START_OVRDr, REG_PORT_ANY, 0), rv)

#define READ_PORTARBITER_THRESHOLDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORTARBITER_THRESHOLDr, REG_PORT_ANY, 0), rvp)
#define WRITE_PORTARBITER_THRESHOLDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORTARBITER_THRESHOLDr, REG_PORT_ANY, 0), rv)

#define READ_PORTCONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORTCONFIGr, port, 0), rvp)
#define WRITE_PORTCONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORTCONFIGr, port, 0), rv)

#define READ_PORTSPEEDMOD0_P0_23r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORTSPEEDMOD0_P0_23r, REG_PORT_ANY, 0), rvp)
#define WRITE_PORTSPEEDMOD0_P0_23r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORTSPEEDMOD0_P0_23r, REG_PORT_ANY, 0), rv)

#define READ_PORTSPEEDMOD0_P24_28r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORTSPEEDMOD0_P24_28r, REG_PORT_ANY, 0), rvp)
#define WRITE_PORTSPEEDMOD0_P24_28r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORTSPEEDMOD0_P24_28r, REG_PORT_ANY, 0), rv)

#define READ_PORTSPEEDMOD1_P0_23r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORTSPEEDMOD1_P0_23r, REG_PORT_ANY, 0), rvp)
#define WRITE_PORTSPEEDMOD1_P0_23r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORTSPEEDMOD1_P0_23r, REG_PORT_ANY, 0), rv)

#define READ_PORT_BRIDGE_BMAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_BRIDGE_BMAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_PORT_BRIDGE_BMAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_BRIDGE_BMAPr, REG_PORT_ANY, 0), rv)

#define READ_PORT_BRIDGE_BMAP_64r(unit, rvp) \
	soc_reg_read(unit, PORT_BRIDGE_BMAP_64r, soc_reg_addr(unit, PORT_BRIDGE_BMAP_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_PORT_BRIDGE_BMAP_64r(unit, rv) \
	soc_reg_write(unit, PORT_BRIDGE_BMAP_64r, soc_reg_addr(unit, PORT_BRIDGE_BMAP_64r, REG_PORT_ANY, 0), rv)

#define READ_PORT_BRIDGE_BMAP_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_BRIDGE_BMAP_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_PORT_BRIDGE_BMAP_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_BRIDGE_BMAP_HIr, REG_PORT_ANY, 0), rv)

#define READ_PORT_BRIDGE_MIRROR_BMAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_BRIDGE_MIRROR_BMAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_PORT_BRIDGE_MIRROR_BMAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_BRIDGE_MIRROR_BMAPr, REG_PORT_ANY, 0), rv)

#define READ_PORT_COUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_COUNTr, port, 0), rvp)
#define WRITE_PORT_COUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_COUNTr, port, 0), rv)

#define READ_PORT_COUNT_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_COUNT_CELLr, port, 0), rvp)
#define WRITE_PORT_COUNT_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_COUNT_CELLr, port, 0), rv)

#define READ_PORT_COUNT_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_COUNT_PACKETr, port, 0), rvp)
#define WRITE_PORT_COUNT_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_COUNT_PACKETr, port, 0), rv)

#define READ_PORT_FC_STATUSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_FC_STATUSr, port, 0), rvp)
#define WRITE_PORT_FC_STATUSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_FC_STATUSr, port, 0), rv)

#define READ_PORT_MAX_PKT_SIZEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_MAX_PKT_SIZEr, port, 0), rvp)
#define WRITE_PORT_MAX_PKT_SIZEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_MAX_PKT_SIZEr, port, 0), rv)

#define READ_PORT_MINr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_MINr, port, 0), rvp)
#define WRITE_PORT_MINr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_MINr, port, 0), rv)

#define READ_PORT_MIN_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_MIN_CELLr, port, 0), rvp)
#define WRITE_PORT_MIN_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_MIN_CELLr, port, 0), rv)

#define READ_PORT_MIN_COUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_MIN_COUNTr, port, 0), rvp)
#define WRITE_PORT_MIN_COUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_MIN_COUNTr, port, 0), rv)

#define READ_PORT_MIN_COUNT_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_MIN_COUNT_CELLr, port, 0), rvp)
#define WRITE_PORT_MIN_COUNT_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_MIN_COUNT_CELLr, port, 0), rv)

#define READ_PORT_MIN_COUNT_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_MIN_COUNT_PACKETr, port, 0), rvp)
#define WRITE_PORT_MIN_COUNT_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_MIN_COUNT_PACKETr, port, 0), rv)

#define READ_PORT_MIN_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_MIN_PACKETr, port, 0), rvp)
#define WRITE_PORT_MIN_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_MIN_PACKETr, port, 0), rv)

#define READ_PORT_PAUSE_ENABLE_64r(unit, rvp) \
	soc_reg_read(unit, PORT_PAUSE_ENABLE_64r, soc_reg_addr(unit, PORT_PAUSE_ENABLE_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_PORT_PAUSE_ENABLE_64r(unit, rv) \
	soc_reg_write(unit, PORT_PAUSE_ENABLE_64r, soc_reg_addr(unit, PORT_PAUSE_ENABLE_64r, REG_PORT_ANY, 0), rv)

#define READ_PORT_PRI_GRPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_PRI_GRPr, port, 0), rvp)
#define WRITE_PORT_PRI_GRPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_PRI_GRPr, port, 0), rv)

#define READ_PORT_PRI_GRP0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_PRI_GRP0r, port, 0), rvp)
#define WRITE_PORT_PRI_GRP0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_PRI_GRP0r, port, 0), rv)

#define READ_PORT_PRI_GRP1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_PRI_GRP1r, port, 0), rvp)
#define WRITE_PORT_PRI_GRP1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_PRI_GRP1r, port, 0), rv)

#define READ_PORT_PRI_XON_ENABLEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_PRI_XON_ENABLEr, port, 0), rvp)
#define WRITE_PORT_PRI_XON_ENABLEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_PRI_XON_ENABLEr, port, 0), rv)

#define READ_PORT_QM_MINr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_QM_MINr, port, 0), rvp)
#define WRITE_PORT_QM_MINr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_QM_MINr, port, 0), rv)

#define READ_PORT_QM_MIN_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_QM_MIN_CELLr, port, 0), rvp)
#define WRITE_PORT_QM_MIN_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_QM_MIN_CELLr, port, 0), rv)

#define READ_PORT_QM_MIN_COUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_QM_MIN_COUNTr, port, 0), rvp)
#define WRITE_PORT_QM_MIN_COUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_QM_MIN_COUNTr, port, 0), rv)

#define READ_PORT_QM_MIN_COUNT_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_QM_MIN_COUNT_CELLr, port, 0), rvp)
#define WRITE_PORT_QM_MIN_COUNT_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_QM_MIN_COUNT_CELLr, port, 0), rv)

#define READ_PORT_QM_MIN_COUNT_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_QM_MIN_COUNT_PACKETr, port, 0), rvp)
#define WRITE_PORT_QM_MIN_COUNT_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_QM_MIN_COUNT_PACKETr, port, 0), rv)

#define READ_PORT_QM_MIN_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_QM_MIN_PACKETr, port, 0), rvp)
#define WRITE_PORT_QM_MIN_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_QM_MIN_PACKETr, port, 0), rv)

#define READ_PORT_QM_SHARED_COUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_QM_SHARED_COUNTr, port, 0), rvp)
#define WRITE_PORT_QM_SHARED_COUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_QM_SHARED_COUNTr, port, 0), rv)

#define READ_PORT_QM_SHARED_COUNT_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_QM_SHARED_COUNT_CELLr, port, 0), rvp)
#define WRITE_PORT_QM_SHARED_COUNT_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_QM_SHARED_COUNT_CELLr, port, 0), rv)

#define READ_PORT_QM_SHARED_COUNT_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_QM_SHARED_COUNT_PACKETr, port, 0), rvp)
#define WRITE_PORT_QM_SHARED_COUNT_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_QM_SHARED_COUNT_PACKETr, port, 0), rv)

#define READ_PORT_SCHEDULING_SPEEDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SCHEDULING_SPEEDr, REG_PORT_ANY, 0), rvp)
#define WRITE_PORT_SCHEDULING_SPEEDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SCHEDULING_SPEEDr, REG_PORT_ANY, 0), rv)

#define READ_PORT_SC_MINr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SC_MINr, port, 0), rvp)
#define WRITE_PORT_SC_MINr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SC_MINr, port, 0), rv)

#define READ_PORT_SC_MIN_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SC_MIN_CELLr, port, 0), rvp)
#define WRITE_PORT_SC_MIN_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SC_MIN_CELLr, port, 0), rv)

#define READ_PORT_SC_MIN_COUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SC_MIN_COUNTr, port, 0), rvp)
#define WRITE_PORT_SC_MIN_COUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SC_MIN_COUNTr, port, 0), rv)

#define READ_PORT_SC_MIN_COUNT_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SC_MIN_COUNT_CELLr, port, 0), rvp)
#define WRITE_PORT_SC_MIN_COUNT_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SC_MIN_COUNT_CELLr, port, 0), rv)

#define READ_PORT_SC_MIN_COUNT_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SC_MIN_COUNT_PACKETr, port, 0), rvp)
#define WRITE_PORT_SC_MIN_COUNT_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SC_MIN_COUNT_PACKETr, port, 0), rv)

#define READ_PORT_SC_MIN_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SC_MIN_PACKETr, port, 0), rvp)
#define WRITE_PORT_SC_MIN_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SC_MIN_PACKETr, port, 0), rv)

#define READ_PORT_SC_SHARED_COUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SC_SHARED_COUNTr, port, 0), rvp)
#define WRITE_PORT_SC_SHARED_COUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SC_SHARED_COUNTr, port, 0), rv)

#define READ_PORT_SC_SHARED_COUNT_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SC_SHARED_COUNT_CELLr, port, 0), rvp)
#define WRITE_PORT_SC_SHARED_COUNT_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SC_SHARED_COUNT_CELLr, port, 0), rv)

#define READ_PORT_SC_SHARED_COUNT_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SC_SHARED_COUNT_PACKETr, port, 0), rvp)
#define WRITE_PORT_SC_SHARED_COUNT_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SC_SHARED_COUNT_PACKETr, port, 0), rv)

#define READ_PORT_SHARED_COUNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SHARED_COUNTr, port, 0), rvp)
#define WRITE_PORT_SHARED_COUNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SHARED_COUNTr, port, 0), rv)

#define READ_PORT_SHARED_COUNT_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SHARED_COUNT_CELLr, port, 0), rvp)
#define WRITE_PORT_SHARED_COUNT_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SHARED_COUNT_CELLr, port, 0), rv)

#define READ_PORT_SHARED_COUNT_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SHARED_COUNT_PACKETr, port, 0), rvp)
#define WRITE_PORT_SHARED_COUNT_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SHARED_COUNT_PACKETr, port, 0), rv)

#define READ_PORT_SHARED_LIMITr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SHARED_LIMITr, port, 0), rvp)
#define WRITE_PORT_SHARED_LIMITr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SHARED_LIMITr, port, 0), rv)

#define READ_PORT_SHARED_LIMIT_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SHARED_LIMIT_CELLr, port, 0), rvp)
#define WRITE_PORT_SHARED_LIMIT_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SHARED_LIMIT_CELLr, port, 0), rv)

#define READ_PORT_SHARED_LIMIT_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_SHARED_LIMIT_PACKETr, port, 0), rvp)
#define WRITE_PORT_SHARED_LIMIT_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_SHARED_LIMIT_PACKETr, port, 0), rv)

#define READ_PORT_WREDAVGQSIZE_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_WREDAVGQSIZE_CELLr, port, 0), rvp)
#define WRITE_PORT_WREDAVGQSIZE_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_WREDAVGQSIZE_CELLr, port, 0), rv)

#define READ_PORT_WREDAVGQSIZE_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_WREDAVGQSIZE_PACKETr, port, 0), rvp)
#define WRITE_PORT_WREDAVGQSIZE_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_WREDAVGQSIZE_PACKETr, port, 0), rv)

#define READ_PORT_WREDCONFIG_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_WREDCONFIG_CELLr, port, 0), rvp)
#define WRITE_PORT_WREDCONFIG_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_WREDCONFIG_CELLr, port, 0), rv)

#define READ_PORT_WREDCONFIG_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_WREDCONFIG_PACKETr, port, 0), rvp)
#define WRITE_PORT_WREDCONFIG_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_WREDCONFIG_PACKETr, port, 0), rv)

#define READ_PORT_WREDPARAM_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_WREDPARAM_CELLr, port, 0), rvp)
#define WRITE_PORT_WREDPARAM_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_WREDPARAM_CELLr, port, 0), rv)

#define READ_PORT_WREDPARAM_NONTCP_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_WREDPARAM_NONTCP_CELLr, port, 0), rvp)
#define WRITE_PORT_WREDPARAM_NONTCP_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_WREDPARAM_NONTCP_CELLr, port, 0), rv)

#define READ_PORT_WREDPARAM_NONTCP_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_WREDPARAM_NONTCP_PACKETr, port, 0), rvp)
#define WRITE_PORT_WREDPARAM_NONTCP_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_WREDPARAM_NONTCP_PACKETr, port, 0), rv)

#define READ_PORT_WREDPARAM_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_WREDPARAM_PACKETr, port, 0), rvp)
#define WRITE_PORT_WREDPARAM_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_WREDPARAM_PACKETr, port, 0), rv)

#define READ_PORT_WREDPARAM_RED_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_WREDPARAM_RED_CELLr, port, 0), rvp)
#define WRITE_PORT_WREDPARAM_RED_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_WREDPARAM_RED_CELLr, port, 0), rv)

#define READ_PORT_WREDPARAM_RED_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_WREDPARAM_RED_PACKETr, port, 0), rvp)
#define WRITE_PORT_WREDPARAM_RED_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_WREDPARAM_RED_PACKETr, port, 0), rv)

#define READ_PORT_WREDPARAM_YELLOW_CELLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_WREDPARAM_YELLOW_CELLr, port, 0), rvp)
#define WRITE_PORT_WREDPARAM_YELLOW_CELLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_WREDPARAM_YELLOW_CELLr, port, 0), rv)

#define READ_PORT_WREDPARAM_YELLOW_PACKETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PORT_WREDPARAM_YELLOW_PACKETr, port, 0), rvp)
#define WRITE_PORT_WREDPARAM_YELLOW_PACKETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PORT_WREDPARAM_YELLOW_PACKETr, port, 0), rv)

#define READ_PPFC_ENr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PPFC_ENr, port, 0), rvp)
#define WRITE_PPFC_ENr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PPFC_ENr, port, 0), rv)

#define READ_PPFC_TX_PKT_XOFF_TIMER_0_1_VALr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PPFC_TX_PKT_XOFF_TIMER_0_1_VALr, port, 0), rvp)
#define WRITE_PPFC_TX_PKT_XOFF_TIMER_0_1_VALr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PPFC_TX_PKT_XOFF_TIMER_0_1_VALr, port, 0), rv)

#define READ_PPFC_TX_PKT_XOFF_TIMER_2_3_VALr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PPFC_TX_PKT_XOFF_TIMER_2_3_VALr, port, 0), rvp)
#define WRITE_PPFC_TX_PKT_XOFF_TIMER_2_3_VALr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PPFC_TX_PKT_XOFF_TIMER_2_3_VALr, port, 0), rv)

#define READ_PPFC_TX_PKT_XOFF_TIMER_4_5_VALr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PPFC_TX_PKT_XOFF_TIMER_4_5_VALr, port, 0), rvp)
#define WRITE_PPFC_TX_PKT_XOFF_TIMER_4_5_VALr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PPFC_TX_PKT_XOFF_TIMER_4_5_VALr, port, 0), rv)

#define READ_PPFC_TX_PKT_XOFF_TIMER_6_7_VALr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PPFC_TX_PKT_XOFF_TIMER_6_7_VALr, port, 0), rvp)
#define WRITE_PPFC_TX_PKT_XOFF_TIMER_6_7_VALr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PPFC_TX_PKT_XOFF_TIMER_6_7_VALr, port, 0), rv)

#define READ_PPPEMPTYr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PPPEMPTYr, REG_PORT_ANY, 0), rvp)
#define WRITE_PPPEMPTYr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PPPEMPTYr, REG_PORT_ANY, 0), rv)

#define READ_PPPEMPTYSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PPPEMPTYSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_PPPEMPTYSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PPPEMPTYSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_PPPEMPTYSTATUS_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PPPEMPTYSTATUS_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_PPPEMPTYSTATUS_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PPPEMPTYSTATUS_HIr, REG_PORT_ANY, 0), rv)

#define READ_PPPFULLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PPPFULLr, REG_PORT_ANY, 0), rvp)
#define WRITE_PPPFULLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PPPFULLr, REG_PORT_ANY, 0), rv)

#define READ_PPP_CTRLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PPP_CTRLr, port, 0), rvp)
#define WRITE_PPP_CTRLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PPP_CTRLr, port, 0), rv)

#define READ_PPP_REFRESH_CTRLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PPP_REFRESH_CTRLr, port, 0), rvp)
#define WRITE_PPP_REFRESH_CTRLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PPP_REFRESH_CTRLr, port, 0), rv)

#define READ_PRI2COSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PRI2COSr, REG_PORT_ANY, 0), rvp)
#define WRITE_PRI2COSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PRI2COSr, REG_PORT_ANY, 0), rv)

#define READ_PRI2COS_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PRI2COS_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_PRI2COS_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PRI2COS_2r, REG_PORT_ANY, 0), rv)

#define READ_PRIO2COSr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PRIO2COSr, REG_PORT_ANY, idx), rvp)
#define WRITE_PRIO2COSr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PRIO2COSr, REG_PORT_ANY, idx), rv)

#define READ_PRIO2COS_CBFCr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PRIO2COS_CBFCr, REG_PORT_ANY, idx), rvp)
#define WRITE_PRIO2COS_CBFCr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PRIO2COS_CBFCr, REG_PORT_ANY, idx), rv)

#define READ_PRIO2COS_LLFCr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PRIO2COS_LLFCr, REG_PORT_ANY, idx), rvp)
#define WRITE_PRIO2COS_LLFCr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PRIO2COS_LLFCr, REG_PORT_ANY, idx), rv)

#define READ_PRIORITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PRIORITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_PRIORITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PRIORITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_PROTOCOLERRORSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PROTOCOLERRORSr, REG_PORT_ANY, 0), rvp)
#define WRITE_PROTOCOLERRORSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PROTOCOLERRORSr, REG_PORT_ANY, 0), rv)

#define READ_PROTOCOL_PKT_CONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PROTOCOL_PKT_CONTROLr, port, 0), rvp)
#define WRITE_PROTOCOL_PKT_CONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PROTOCOL_PKT_CONTROLr, port, 0), rv)

#define READ_PROT_DEBUGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PROT_DEBUGr, REG_PORT_ANY, 0), rvp)
#define WRITE_PROT_DEBUGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PROT_DEBUGr, REG_PORT_ANY, 0), rv)

#define READ_PRTABLE_DEFAULTr(unit, port, rvp) \
	soc_reg_read(unit, PRTABLE_DEFAULTr, soc_reg_addr(unit, PRTABLE_DEFAULTr, port, 0), rvp)
#define WRITE_PRTABLE_DEFAULTr(unit, port, rv) \
	soc_reg_write(unit, PRTABLE_DEFAULTr, soc_reg_addr(unit, PRTABLE_DEFAULTr, port, 0), rv)

#define READ_PRTABLE_ENTRYr(unit, port, idx, rvp) \
	soc_reg_read(unit, PRTABLE_ENTRYr, soc_reg_addr(unit, PRTABLE_ENTRYr, port, idx), rvp)
#define WRITE_PRTABLE_ENTRYr(unit, port, idx, rv) \
	soc_reg_write(unit, PRTABLE_ENTRYr, soc_reg_addr(unit, PRTABLE_ENTRYr, port, idx), rv)

#define READ_PTRCTRLCONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PTRCTRLCONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_PTRCTRLCONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PTRCTRLCONFIGr, REG_PORT_ANY, 0), rv)

#define READ_PTR_FIFO_PARITY_CG0_CH0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PTR_FIFO_PARITY_CG0_CH0r, REG_PORT_ANY, 0), rvp)
#define WRITE_PTR_FIFO_PARITY_CG0_CH0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PTR_FIFO_PARITY_CG0_CH0r, REG_PORT_ANY, 0), rv)

#define READ_PTR_FIFO_PARITY_CG0_CH1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PTR_FIFO_PARITY_CG0_CH1r, REG_PORT_ANY, 0), rvp)
#define WRITE_PTR_FIFO_PARITY_CG0_CH1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PTR_FIFO_PARITY_CG0_CH1r, REG_PORT_ANY, 0), rv)

#define READ_PTR_FIFO_PARITY_CG1_CH0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PTR_FIFO_PARITY_CG1_CH0r, REG_PORT_ANY, 0), rvp)
#define WRITE_PTR_FIFO_PARITY_CG1_CH0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PTR_FIFO_PARITY_CG1_CH0r, REG_PORT_ANY, 0), rv)

#define READ_PTR_FIFO_PARITY_CG1_CH1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PTR_FIFO_PARITY_CG1_CH1r, REG_PORT_ANY, 0), rvp)
#define WRITE_PTR_FIFO_PARITY_CG1_CH1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PTR_FIFO_PARITY_CG1_CH1r, REG_PORT_ANY, 0), rv)

#define READ_PTR_FIFO_PARITY_CH0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PTR_FIFO_PARITY_CH0r, REG_PORT_ANY, 0), rvp)
#define WRITE_PTR_FIFO_PARITY_CH0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PTR_FIFO_PARITY_CH0r, REG_PORT_ANY, 0), rv)

#define READ_PTR_FIFO_PARITY_CH1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PTR_FIFO_PARITY_CH1r, REG_PORT_ANY, 0), rvp)
#define WRITE_PTR_FIFO_PARITY_CH1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PTR_FIFO_PARITY_CH1r, REG_PORT_ANY, 0), rv)

#define READ_PT_DEBUGr(unit, port, rvp) \
	soc_reg_read(unit, PT_DEBUGr, soc_reg_addr(unit, PT_DEBUGr, port, 0), rvp)
#define WRITE_PT_DEBUGr(unit, port, rv) \
	soc_reg_write(unit, PT_DEBUGr, soc_reg_addr(unit, PT_DEBUGr, port, 0), rv)

#define READ_PURGE_PKT_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, PURGE_PKT_CNTr, port, 0), rvp)
#define WRITE_PURGE_PKT_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, PURGE_PKT_CNTr, port, 0), rv)

#define READ_QDR36_CONFIG_REG1_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, QDR36_CONFIG_REG1_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_QDR36_CONFIG_REG1_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, QDR36_CONFIG_REG1_ISr, REG_PORT_ANY, 0), rv)

#define READ_QDR36_CONFIG_REG2_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, QDR36_CONFIG_REG2_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_QDR36_CONFIG_REG2_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, QDR36_CONFIG_REG2_ISr, REG_PORT_ANY, 0), rv)

#define READ_QDR36_CONFIG_REG3_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, QDR36_CONFIG_REG3_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_QDR36_CONFIG_REG3_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, QDR36_CONFIG_REG3_ISr, REG_PORT_ANY, 0), rv)

#define READ_QDR36_STATUS_REG1_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, QDR36_STATUS_REG1_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_QDR36_STATUS_REG1_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, QDR36_STATUS_REG1_ISr, REG_PORT_ANY, 0), rv)

#define READ_QDR36_STATUS_REG2_ISr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, QDR36_STATUS_REG2_ISr, REG_PORT_ANY, 0), rvp)
#define WRITE_QDR36_STATUS_REG2_ISr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, QDR36_STATUS_REG2_ISr, REG_PORT_ANY, 0), rv)

#define READ_QE_INTEROP_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, QE_INTEROP_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_QE_INTEROP_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, QE_INTEROP_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_QGPORT_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, QGPORT_CONFIGr, port, 0), rvp)
#define WRITE_QGPORT_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, QGPORT_CONFIGr, port, 0), rv)

#define READ_QGPORT_MAC_XGXS_CTRLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, QGPORT_MAC_XGXS_CTRLr, port, 0), rvp)
#define WRITE_QGPORT_MAC_XGXS_CTRLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, QGPORT_MAC_XGXS_CTRLr, port, 0), rv)

#define READ_QGPORT_MAC_XGXS_STAT_GS0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, QGPORT_MAC_XGXS_STAT_GS0r, port, 0), rvp)
#define WRITE_QGPORT_MAC_XGXS_STAT_GS0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, QGPORT_MAC_XGXS_STAT_GS0r, port, 0), rv)

#define READ_QGPORT_MAC_XGXS_STAT_GS1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, QGPORT_MAC_XGXS_STAT_GS1r, port, 0), rvp)
#define WRITE_QGPORT_MAC_XGXS_STAT_GS1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, QGPORT_MAC_XGXS_STAT_GS1r, port, 0), rv)

#define READ_QGPORT_MAC_XGXS_STAT_GS2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, QGPORT_MAC_XGXS_STAT_GS2r, port, 0), rvp)
#define WRITE_QGPORT_MAC_XGXS_STAT_GS2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, QGPORT_MAC_XGXS_STAT_GS2r, port, 0), rv)

#define READ_QGPORT_MAC_XGXS_STAT_GS3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, QGPORT_MAC_XGXS_STAT_GS3r, port, 0), rvp)
#define WRITE_QGPORT_MAC_XGXS_STAT_GS3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, QGPORT_MAC_XGXS_STAT_GS3r, port, 0), rv)

#define READ_RALNr(unit, port, rvp) \
	soc_reg_read(unit, RALNr, soc_reg_addr(unit, RALNr, port, 0), rvp)
#define WRITE_RALNr(unit, port, rv) \
	soc_reg_write(unit, RALNr, soc_reg_addr(unit, RALNr, port, 0), rv)

#define READ_RBCAr(unit, port, rvp) \
	soc_reg_read(unit, RBCAr, soc_reg_addr(unit, RBCAr, port, 0), rvp)
#define WRITE_RBCAr(unit, port, rv) \
	soc_reg_write(unit, RBCAr, soc_reg_addr(unit, RBCAr, port, 0), rv)

#define READ_RBYTr(unit, port, rvp) \
	soc_reg_read(unit, RBYTr, soc_reg_addr(unit, RBYTr, port, 0), rvp)
#define WRITE_RBYTr(unit, port, rv) \
	soc_reg_write(unit, RBYTr, soc_reg_addr(unit, RBYTr, port, 0), rv)

#define READ_RCDEr(unit, port, rvp) \
	soc_reg_read(unit, RCDEr, soc_reg_addr(unit, RCDEr, port, 0), rvp)
#define WRITE_RCDEr(unit, port, rv) \
	soc_reg_write(unit, RCDEr, soc_reg_addr(unit, RCDEr, port, 0), rv)

#define READ_RDBGC0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC0r, port, 0), rvp)
#define WRITE_RDBGC0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC0r, port, 0), rv)

#define READ_RDBGC1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC1r, port, 0), rvp)
#define WRITE_RDBGC1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC1r, port, 0), rv)

#define READ_RDBGC2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC2r, port, 0), rvp)
#define WRITE_RDBGC2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC2r, port, 0), rv)

#define READ_RDBGC3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC3r, port, 0), rvp)
#define WRITE_RDBGC3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC3r, port, 0), rv)

#define READ_RDBGC4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC4r, port, 0), rvp)
#define WRITE_RDBGC4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC4r, port, 0), rv)

#define READ_RDBGC5r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC5r, port, 0), rvp)
#define WRITE_RDBGC5r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC5r, port, 0), rv)

#define READ_RDBGC6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC6r, port, 0), rvp)
#define WRITE_RDBGC6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC6r, port, 0), rv)

#define READ_RDBGC7r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC7r, port, 0), rvp)
#define WRITE_RDBGC7r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC7r, port, 0), rv)

#define READ_RDBGC8r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC8r, port, 0), rvp)
#define WRITE_RDBGC8r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC8r, port, 0), rv)

#define READ_RDBGC0_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC0_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC0_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC0_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC1_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC1_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC1_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC1_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC2_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC2_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC2_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC2_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC3_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC3_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC3_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC3_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC4_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC4_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC4_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC4_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC5_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC5_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC5_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC5_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC6_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC6_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC6_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC6_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC7_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC7_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC7_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC7_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC8_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC8_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RDBGC8_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC8_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_RDBGC_SELECT_2r(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RDBGC_SELECT_2r, REG_PORT_ANY, idx), rvp)
#define WRITE_RDBGC_SELECT_2r(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RDBGC_SELECT_2r, REG_PORT_ANY, idx), rv)

#define READ_RDISCr(unit, port, rvp) \
	soc_reg_read(unit, RDISCr, soc_reg_addr(unit, RDISCr, port, 0), rvp)
#define WRITE_RDISCr(unit, port, rv) \
	soc_reg_write(unit, RDISCr, soc_reg_addr(unit, RDISCr, port, 0), rv)

#define READ_RDROPr(unit, port, rvp) \
	soc_reg_read(unit, RDROPr, soc_reg_addr(unit, RDROPr, port, 0), rvp)
#define WRITE_RDROPr(unit, port, rv) \
	soc_reg_write(unit, RDROPr, soc_reg_addr(unit, RDROPr, port, 0), rv)

#define READ_RED_CNG_DROP_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RED_CNG_DROP_CNTr, port, 0), rvp)
#define WRITE_RED_CNG_DROP_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RED_CNG_DROP_CNTr, port, 0), rv)

#define READ_REMOTE_CPU_DA_LSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, REMOTE_CPU_DA_LSr, REG_PORT_ANY, 0), rvp)
#define WRITE_REMOTE_CPU_DA_LSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, REMOTE_CPU_DA_LSr, REG_PORT_ANY, 0), rv)

#define READ_REMOTE_CPU_DA_MSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, REMOTE_CPU_DA_MSr, REG_PORT_ANY, 0), rvp)
#define WRITE_REMOTE_CPU_DA_MSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, REMOTE_CPU_DA_MSr, REG_PORT_ANY, 0), rv)

#define READ_REMOTE_CPU_LENGTH_TYPEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, REMOTE_CPU_LENGTH_TYPEr, REG_PORT_ANY, 0), rvp)
#define WRITE_REMOTE_CPU_LENGTH_TYPEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, REMOTE_CPU_LENGTH_TYPEr, REG_PORT_ANY, 0), rv)

#define READ_REROUTINGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, REROUTINGr, REG_PORT_ANY, 0), rvp)
#define WRITE_REROUTINGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, REROUTINGr, REG_PORT_ANY, 0), rv)

#define READ_RESETLIMITSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RESETLIMITSr, port, 0), rvp)
#define WRITE_RESETLIMITSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RESETLIMITSr, port, 0), rv)

#define READ_RESURRECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RESURRECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_RESURRECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RESURRECTr, REG_PORT_ANY, 0), rv)

#define READ_RESURRECTMOD0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RESURRECTMOD0r, REG_PORT_ANY, 0), rvp)
#define WRITE_RESURRECTMOD0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RESURRECTMOD0r, REG_PORT_ANY, 0), rv)

#define READ_RESURRECTMOD1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RESURRECTMOD1r, REG_PORT_ANY, 0), rvp)
#define WRITE_RESURRECTMOD1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RESURRECTMOD1r, REG_PORT_ANY, 0), rv)

#define READ_REVCDr(unit, port, rvp) \
	soc_reg_read(unit, REVCDr, soc_reg_addr(unit, REVCDr, port, 0), rvp)
#define WRITE_REVCDr(unit, port, rv) \
	soc_reg_write(unit, REVCDr, soc_reg_addr(unit, REVCDr, port, 0), rv)

#define READ_RFCRr(unit, port, rvp) \
	soc_reg_read(unit, RFCRr, soc_reg_addr(unit, RFCRr, port, 0), rvp)
#define WRITE_RFCRr(unit, port, rv) \
	soc_reg_write(unit, RFCRr, soc_reg_addr(unit, RFCRr, port, 0), rv)

#define READ_RFCSr(unit, port, rvp) \
	soc_reg_read(unit, RFCSr, soc_reg_addr(unit, RFCSr, port, 0), rvp)
#define WRITE_RFCSr(unit, port, rv) \
	soc_reg_write(unit, RFCSr, soc_reg_addr(unit, RFCSr, port, 0), rv)

#define READ_RFILDRr(unit, port, rvp) \
	soc_reg_read(unit, RFILDRr, soc_reg_addr(unit, RFILDRr, port, 0), rvp)
#define WRITE_RFILDRr(unit, port, rv) \
	soc_reg_write(unit, RFILDRr, soc_reg_addr(unit, RFILDRr, port, 0), rv)

#define READ_RFLRr(unit, port, rvp) \
	soc_reg_read(unit, RFLRr, soc_reg_addr(unit, RFLRr, port, 0), rvp)
#define WRITE_RFLRr(unit, port, rv) \
	soc_reg_write(unit, RFLRr, soc_reg_addr(unit, RFLRr, port, 0), rv)

#define READ_RFRGr(unit, port, rvp) \
	soc_reg_read(unit, RFRGr, soc_reg_addr(unit, RFRGr, port, 0), rvp)
#define WRITE_RFRGr(unit, port, rv) \
	soc_reg_write(unit, RFRGr, soc_reg_addr(unit, RFRGr, port, 0), rv)

#define READ_RHTLSDr(unit, port, rvp) \
	soc_reg_read(unit, RHTLSDr, soc_reg_addr(unit, RHTLSDr, port, 0), rvp)
#define WRITE_RHTLSDr(unit, port, rv) \
	soc_reg_write(unit, RHTLSDr, soc_reg_addr(unit, RHTLSDr, port, 0), rv)

#define READ_RILNRr(unit, port, rvp) \
	soc_reg_read(unit, RILNRr, soc_reg_addr(unit, RILNRr, port, 0), rvp)
#define WRITE_RILNRr(unit, port, rv) \
	soc_reg_write(unit, RILNRr, soc_reg_addr(unit, RILNRr, port, 0), rv)

#define READ_RILRTr(unit, port, rvp) \
	soc_reg_read(unit, RILRTr, soc_reg_addr(unit, RILRTr, port, 0), rvp)
#define WRITE_RILRTr(unit, port, rv) \
	soc_reg_write(unit, RILRTr, soc_reg_addr(unit, RILRTr, port, 0), rv)

#define READ_RIMDRr(unit, port, rvp) \
	soc_reg_read(unit, RIMDRr, soc_reg_addr(unit, RIMDRr, port, 0), rvp)
#define WRITE_RIMDRr(unit, port, rv) \
	soc_reg_write(unit, RIMDRr, soc_reg_addr(unit, RIMDRr, port, 0), rv)

#define READ_RIPCr(unit, port, rvp) \
	soc_reg_read(unit, RIPCr, soc_reg_addr(unit, RIPCr, port, 0), rvp)
#define WRITE_RIPCr(unit, port, rv) \
	soc_reg_write(unit, RIPCr, soc_reg_addr(unit, RIPCr, port, 0), rv)

#define READ_RIPC4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RIPC4r, port, 0), rvp)
#define WRITE_RIPC4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RIPC4r, port, 0), rv)

#define READ_RIPC6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RIPC6r, port, 0), rvp)
#define WRITE_RIPC6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RIPC6r, port, 0), rv)

#define READ_RIPCHKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RIPCHKr, port, 0), rvp)
#define WRITE_RIPCHKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RIPCHKr, port, 0), rv)

#define READ_RIPDr(unit, port, rvp) \
	soc_reg_read(unit, RIPDr, soc_reg_addr(unit, RIPDr, port, 0), rvp)
#define WRITE_RIPDr(unit, port, rv) \
	soc_reg_write(unit, RIPDr, soc_reg_addr(unit, RIPDr, port, 0), rv)

#define READ_RIPD4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RIPD4r, port, 0), rvp)
#define WRITE_RIPD4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RIPD4r, port, 0), rv)

#define READ_RIPD6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RIPD6r, port, 0), rvp)
#define WRITE_RIPD6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RIPD6r, port, 0), rv)

#define READ_RIPHEr(unit, port, rvp) \
	soc_reg_read(unit, RIPHEr, soc_reg_addr(unit, RIPHEr, port, 0), rvp)
#define WRITE_RIPHEr(unit, port, rv) \
	soc_reg_write(unit, RIPHEr, soc_reg_addr(unit, RIPHEr, port, 0), rv)

#define READ_RIPHE4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RIPHE4r, port, 0), rvp)
#define WRITE_RIPHE4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RIPHE4r, port, 0), rv)

#define READ_RIPHE6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RIPHE6r, port, 0), rvp)
#define WRITE_RIPHE6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RIPHE6r, port, 0), rv)

#define READ_RJBRr(unit, port, rvp) \
	soc_reg_read(unit, RJBRr, soc_reg_addr(unit, RJBRr, port, 0), rvp)
#define WRITE_RJBRr(unit, port, rv) \
	soc_reg_write(unit, RJBRr, soc_reg_addr(unit, RJBRr, port, 0), rv)

#define READ_RMCAr(unit, port, rvp) \
	soc_reg_read(unit, RMCAr, soc_reg_addr(unit, RMCAr, port, 0), rvp)
#define WRITE_RMCAr(unit, port, rv) \
	soc_reg_write(unit, RMCAr, soc_reg_addr(unit, RMCAr, port, 0), rv)

#define READ_RMCASTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RMCASTr, port, 0), rvp)
#define WRITE_RMCASTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RMCASTr, port, 0), rv)

#define READ_RM_START_OVRDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RM_START_OVRDr, REG_PORT_ANY, 0), rvp)
#define WRITE_RM_START_OVRDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RM_START_OVRDr, REG_PORT_ANY, 0), rv)

#define READ_ROVRr(unit, port, rvp) \
	soc_reg_read(unit, ROVRr, soc_reg_addr(unit, ROVRr, port, 0), rvp)
#define WRITE_ROVRr(unit, port, rv) \
	soc_reg_write(unit, ROVRr, soc_reg_addr(unit, ROVRr, port, 0), rv)

#define READ_RPDISCr(unit, port, rvp) \
	soc_reg_read(unit, RPDISCr, soc_reg_addr(unit, RPDISCr, port, 0), rvp)
#define WRITE_RPDISCr(unit, port, rv) \
	soc_reg_write(unit, RPDISCr, soc_reg_addr(unit, RPDISCr, port, 0), rv)

#define READ_RPKTr(unit, port, rvp) \
	soc_reg_read(unit, RPKTr, soc_reg_addr(unit, RPKTr, port, 0), rvp)
#define WRITE_RPKTr(unit, port, rv) \
	soc_reg_write(unit, RPKTr, soc_reg_addr(unit, RPKTr, port, 0), rv)

#define READ_RPORTDr(unit, port, rvp) \
	soc_reg_read(unit, RPORTDr, soc_reg_addr(unit, RPORTDr, port, 0), rvp)
#define WRITE_RPORTDr(unit, port, rv) \
	soc_reg_write(unit, RPORTDr, soc_reg_addr(unit, RPORTDr, port, 0), rv)

#define READ_RRBYTr(unit, port, rvp) \
	soc_reg_read(unit, RRBYTr, soc_reg_addr(unit, RRBYTr, port, 0), rvp)
#define WRITE_RRBYTr(unit, port, rv) \
	soc_reg_write(unit, RRBYTr, soc_reg_addr(unit, RRBYTr, port, 0), rv)

#define READ_RRPKTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RRPKTr, port, 0), rvp)
#define WRITE_RRPKTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RRPKTr, port, 0), rv)

#define READ_RSEL1_RAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RSEL1_RAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_RSEL1_RAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RSEL1_RAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_RSEL1_RAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RSEL1_RAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_RSEL1_RAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RSEL1_RAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_RSEL2_RAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RSEL2_RAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_RSEL2_RAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RSEL2_RAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_RSEL2_RAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RSEL2_RAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_RSEL2_RAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RSEL2_RAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_RSV_MASKr(unit, port, rvp) \
	soc_reg_read(unit, RSV_MASKr, soc_reg_addr(unit, RSV_MASKr, port, 0), rvp)
#define WRITE_RSV_MASKr(unit, port, rv) \
	soc_reg_write(unit, RSV_MASKr, soc_reg_addr(unit, RSV_MASKr, port, 0), rv)

#define READ_RSV_READr(unit, port, rvp) \
	soc_reg_read(unit, RSV_READr, soc_reg_addr(unit, RSV_READr, port, 0), rvp)
#define WRITE_RSV_READr(unit, port, rv) \
	soc_reg_write(unit, RSV_READr, soc_reg_addr(unit, RSV_READr, port, 0), rv)

#define READ_RTAG7_HASH_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_RTAG7_HASH_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_RTAG7_HASH_ECMPr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_ECMPr, REG_PORT_ANY, idx), rvp)
#define WRITE_RTAG7_HASH_ECMPr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_ECMPr, REG_PORT_ANY, idx), rv)

#define READ_RTAG7_HASH_FIELD_BMAP_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_FIELD_BMAP_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_RTAG7_HASH_FIELD_BMAP_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_FIELD_BMAP_1r, REG_PORT_ANY, 0), rv)

#define READ_RTAG7_HASH_FIELD_BMAP_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_FIELD_BMAP_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_RTAG7_HASH_FIELD_BMAP_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_FIELD_BMAP_2r, REG_PORT_ANY, 0), rv)

#define READ_RTAG7_HASH_FIELD_BMAP_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_FIELD_BMAP_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_RTAG7_HASH_FIELD_BMAP_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_FIELD_BMAP_3r, REG_PORT_ANY, 0), rv)

#define READ_RTAG7_HASH_FIELD_BMAP_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_FIELD_BMAP_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_RTAG7_HASH_FIELD_BMAP_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_FIELD_BMAP_4r, REG_PORT_ANY, 0), rv)

#define READ_RTAG7_HASH_FIELD_BMAP_5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_FIELD_BMAP_5r, REG_PORT_ANY, 0), rvp)
#define WRITE_RTAG7_HASH_FIELD_BMAP_5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_FIELD_BMAP_5r, REG_PORT_ANY, 0), rv)

#define READ_RTAG7_HASH_HG_TRUNKr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_HG_TRUNKr, REG_PORT_ANY, idx), rvp)
#define WRITE_RTAG7_HASH_HG_TRUNKr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_HG_TRUNKr, REG_PORT_ANY, idx), rv)

#define READ_RTAG7_HASH_HG_TRUNK_FAILOVERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_HG_TRUNK_FAILOVERr, REG_PORT_ANY, 0), rvp)
#define WRITE_RTAG7_HASH_HG_TRUNK_FAILOVERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_HG_TRUNK_FAILOVERr, REG_PORT_ANY, 0), rv)

#define READ_RTAG7_HASH_LBIDr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_LBIDr, REG_PORT_ANY, idx), rvp)
#define WRITE_RTAG7_HASH_LBIDr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_LBIDr, REG_PORT_ANY, idx), rv)

#define READ_RTAG7_HASH_PLFSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_PLFSr, REG_PORT_ANY, 0), rvp)
#define WRITE_RTAG7_HASH_PLFSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_PLFSr, REG_PORT_ANY, 0), rv)

#define READ_RTAG7_HASH_SEED_Ar(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_SEED_Ar, REG_PORT_ANY, 0), rvp)
#define WRITE_RTAG7_HASH_SEED_Ar(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_SEED_Ar, REG_PORT_ANY, 0), rv)

#define READ_RTAG7_HASH_SEED_Br(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_SEED_Br, REG_PORT_ANY, 0), rvp)
#define WRITE_RTAG7_HASH_SEED_Br(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_SEED_Br, REG_PORT_ANY, 0), rv)

#define READ_RTAG7_HASH_TRUNKr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RTAG7_HASH_TRUNKr, REG_PORT_ANY, idx), rvp)
#define WRITE_RTAG7_HASH_TRUNKr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RTAG7_HASH_TRUNKr, REG_PORT_ANY, idx), rv)

#define READ_RUCr(unit, port, rvp) \
	soc_reg_read(unit, RUCr, soc_reg_addr(unit, RUCr, port, 0), rvp)
#define WRITE_RUCr(unit, port, rv) \
	soc_reg_write(unit, RUCr, soc_reg_addr(unit, RUCr, port, 0), rv)

#define READ_RUCASTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RUCASTr, port, 0), rvp)
#define WRITE_RUCASTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RUCASTr, port, 0), rv)

#define READ_RUNDr(unit, port, rvp) \
	soc_reg_read(unit, RUNDr, soc_reg_addr(unit, RUNDr, port, 0), rvp)
#define WRITE_RUNDr(unit, port, rv) \
	soc_reg_write(unit, RUNDr, soc_reg_addr(unit, RUNDr, port, 0), rv)

#define READ_RXCFr(unit, port, rvp) \
	soc_reg_read(unit, RXCFr, soc_reg_addr(unit, RXCFr, port, 0), rvp)
#define WRITE_RXCFr(unit, port, rv) \
	soc_reg_write(unit, RXCFr, soc_reg_addr(unit, RXCFr, port, 0), rv)

#define READ_RXE2EIBPBKPSTATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RXE2EIBPBKPSTATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_RXE2EIBPBKPSTATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RXE2EIBPBKPSTATUSr, REG_PORT_ANY, 0), rv)

#define READ_RXFIFO_STATr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, RXFIFO_STATr, port, 0), rvp)
#define WRITE_RXFIFO_STATr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, RXFIFO_STATr, port, 0), rv)

#define READ_RXPFr(unit, port, rvp) \
	soc_reg_read(unit, RXPFr, soc_reg_addr(unit, RXPFr, port, 0), rvp)
#define WRITE_RXPFr(unit, port, rv) \
	soc_reg_write(unit, RXPFr, soc_reg_addr(unit, RXPFr, port, 0), rv)

#define READ_RXUOr(unit, port, rvp) \
	soc_reg_read(unit, RXUOr, soc_reg_addr(unit, RXUOr, port, 0), rvp)
#define WRITE_RXUOr(unit, port, rv) \
	soc_reg_write(unit, RXUOr, soc_reg_addr(unit, RXUOr, port, 0), rv)

#define READ_S1V_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, S1V_CONFIGr, port, 0), rvp)
#define WRITE_S1V_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, S1V_CONFIGr, port, 0), rv)

#define READ_S1V_COSMASKr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, S1V_COSMASKr, port, 0), rvp)
#define WRITE_S1V_COSMASKr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, S1V_COSMASKr, port, 0), rv)

#define READ_S1V_COSWEIGHTSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, S1V_COSWEIGHTSr, port, idx), rvp)
#define WRITE_S1V_COSWEIGHTSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, S1V_COSWEIGHTSr, port, idx), rv)

#define READ_S1V_MINSPCONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, S1V_MINSPCONFIGr, port, 0), rvp)
#define WRITE_S1V_MINSPCONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, S1V_MINSPCONFIGr, port, 0), rv)

#define READ_S1V_WDRRCOUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, S1V_WDRRCOUNTr, port, idx), rvp)
#define WRITE_S1V_WDRRCOUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, S1V_WDRRCOUNTr, port, idx), rv)

#define READ_SAFC_PRI2COS_MAPPING_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SAFC_PRI2COS_MAPPING_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_SAFC_PRI2COS_MAPPING_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SAFC_PRI2COS_MAPPING_1r, REG_PORT_ANY, 0), rv)

#define READ_SAFC_PRI2COS_MAPPING_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SAFC_PRI2COS_MAPPING_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_SAFC_PRI2COS_MAPPING_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SAFC_PRI2COS_MAPPING_2r, REG_PORT_ANY, 0), rv)

#define READ_SAFC_RX_CONFIG_XPORT0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SAFC_RX_CONFIG_XPORT0r, REG_PORT_ANY, 0), rvp)
#define WRITE_SAFC_RX_CONFIG_XPORT0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SAFC_RX_CONFIG_XPORT0r, REG_PORT_ANY, 0), rv)

#define READ_SAFC_RX_CONFIG_XPORT1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SAFC_RX_CONFIG_XPORT1r, REG_PORT_ANY, 0), rvp)
#define WRITE_SAFC_RX_CONFIG_XPORT1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SAFC_RX_CONFIG_XPORT1r, REG_PORT_ANY, 0), rv)

#define READ_SAFC_RX_CONFIG_XPORT2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SAFC_RX_CONFIG_XPORT2r, REG_PORT_ANY, 0), rvp)
#define WRITE_SAFC_RX_CONFIG_XPORT2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SAFC_RX_CONFIG_XPORT2r, REG_PORT_ANY, 0), rv)

#define READ_SAFC_RX_CONFIG_XPORT3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SAFC_RX_CONFIG_XPORT3r, REG_PORT_ANY, 0), rvp)
#define WRITE_SAFC_RX_CONFIG_XPORT3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SAFC_RX_CONFIG_XPORT3r, REG_PORT_ANY, 0), rv)

#define READ_SBS_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SBS_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_SBS_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SBS_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_SCHEDULERCONFIGMOD0_P24r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P24r, REG_PORT_ANY, 0), rvp)
#define WRITE_SCHEDULERCONFIGMOD0_P24r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P24r, REG_PORT_ANY, 0), rv)

#define READ_SCHEDULERCONFIGMOD0_P25r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P25r, REG_PORT_ANY, 0), rvp)
#define WRITE_SCHEDULERCONFIGMOD0_P25r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P25r, REG_PORT_ANY, 0), rv)

#define READ_SCHEDULERCONFIGMOD0_P26r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P26r, REG_PORT_ANY, 0), rvp)
#define WRITE_SCHEDULERCONFIGMOD0_P26r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P26r, REG_PORT_ANY, 0), rv)

#define READ_SCHEDULERCONFIGMOD0_P27r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P27r, REG_PORT_ANY, 0), rvp)
#define WRITE_SCHEDULERCONFIGMOD0_P27r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P27r, REG_PORT_ANY, 0), rv)

#define READ_SCHEDULERCONFIGMOD0_P28r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P28r, REG_PORT_ANY, 0), rvp)
#define WRITE_SCHEDULERCONFIGMOD0_P28r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P28r, REG_PORT_ANY, 0), rv)

#define READ_SCHEDULERCONFIGMOD0_P0_7r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P0_7r, REG_PORT_ANY, 0), rvp)
#define WRITE_SCHEDULERCONFIGMOD0_P0_7r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P0_7r, REG_PORT_ANY, 0), rv)

#define READ_SCHEDULERCONFIGMOD0_P16_23r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P16_23r, REG_PORT_ANY, 0), rvp)
#define WRITE_SCHEDULERCONFIGMOD0_P16_23r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P16_23r, REG_PORT_ANY, 0), rv)

#define READ_SCHEDULERCONFIGMOD0_P8_15r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P8_15r, REG_PORT_ANY, 0), rvp)
#define WRITE_SCHEDULERCONFIGMOD0_P8_15r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD0_P8_15r, REG_PORT_ANY, 0), rv)

#define READ_SCHEDULERCONFIGMOD1_P24r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD1_P24r, REG_PORT_ANY, 0), rvp)
#define WRITE_SCHEDULERCONFIGMOD1_P24r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD1_P24r, REG_PORT_ANY, 0), rv)

#define READ_SCHEDULERCONFIGMOD1_P0_7r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD1_P0_7r, REG_PORT_ANY, 0), rvp)
#define WRITE_SCHEDULERCONFIGMOD1_P0_7r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD1_P0_7r, REG_PORT_ANY, 0), rv)

#define READ_SCHEDULERCONFIGMOD1_P16_23r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD1_P16_23r, REG_PORT_ANY, 0), rvp)
#define WRITE_SCHEDULERCONFIGMOD1_P16_23r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD1_P16_23r, REG_PORT_ANY, 0), rv)

#define READ_SCHEDULERCONFIGMOD1_P8_15r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD1_P8_15r, REG_PORT_ANY, 0), rvp)
#define WRITE_SCHEDULERCONFIGMOD1_P8_15r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SCHEDULERCONFIGMOD1_P8_15r, REG_PORT_ANY, 0), rv)

#define READ_SCHEDULERCONTROLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SCHEDULERCONTROLr, port, 0), rvp)
#define WRITE_SCHEDULERCONTROLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SCHEDULERCONTROLr, port, 0), rv)

#define READ_SC_BYTE_METER_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SC_BYTE_METER_CONFIGr, port, 0), rvp)
#define WRITE_SC_BYTE_METER_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SC_BYTE_METER_CONFIGr, port, 0), rv)

#define READ_SDRAMCONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SDRAMCONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_SDRAMCONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SDRAMCONTROLr, REG_PORT_ANY, 0), rv)

#define READ_SDRAMCONTROL2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SDRAMCONTROL2r, REG_PORT_ANY, 0), rvp)
#define WRITE_SDRAMCONTROL2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SDRAMCONTROL2r, REG_PORT_ANY, 0), rv)

#define READ_SEER_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SEER_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_SEER_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SEER_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_SEER_HG_L2_LOOKUP_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SEER_HG_L2_LOOKUP_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_SEER_HG_L2_LOOKUP_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SEER_HG_L2_LOOKUP_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_SFAPPOOLSIZEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SFAPPOOLSIZEr, REG_PORT_ANY, 0), rvp)
#define WRITE_SFAPPOOLSIZEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SFAPPOOLSIZEr, REG_PORT_ANY, 0), rv)

#define READ_SFAPREADPOINTERr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SFAPREADPOINTERr, REG_PORT_ANY, 0), rvp)
#define WRITE_SFAPREADPOINTERr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SFAPREADPOINTERr, REG_PORT_ANY, 0), rv)

#define READ_SFD_OFFSETr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SFD_OFFSETr, port, 0), rvp)
#define WRITE_SFD_OFFSETr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SFD_OFFSETr, port, 0), rv)

#define READ_SFLOW_EGR_RAND_SEEDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SFLOW_EGR_RAND_SEEDr, REG_PORT_ANY, 0), rvp)
#define WRITE_SFLOW_EGR_RAND_SEEDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SFLOW_EGR_RAND_SEEDr, REG_PORT_ANY, 0), rv)

#define READ_SFLOW_EGR_THRESHOLDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SFLOW_EGR_THRESHOLDr, port, 0), rvp)
#define WRITE_SFLOW_EGR_THRESHOLDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SFLOW_EGR_THRESHOLDr, port, 0), rv)

#define READ_SFLOW_ING_RAND_SEEDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SFLOW_ING_RAND_SEEDr, REG_PORT_ANY, 0), rvp)
#define WRITE_SFLOW_ING_RAND_SEEDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SFLOW_ING_RAND_SEEDr, REG_PORT_ANY, 0), rv)

#define READ_SFLOW_ING_THRESHOLDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SFLOW_ING_THRESHOLDr, port, 0), rvp)
#define WRITE_SFLOW_ING_THRESHOLDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SFLOW_ING_THRESHOLDr, port, 0), rv)

#define READ_SHAPERMAXBWCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SHAPERMAXBWCOSr, port, idx), rvp)
#define WRITE_SHAPERMAXBWCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SHAPERMAXBWCOSr, port, idx), rv)

#define READ_SHAPERMAXBWPORTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SHAPERMAXBWPORTr, port, 0), rvp)
#define WRITE_SHAPERMAXBWPORTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SHAPERMAXBWPORTr, port, 0), rv)

#define READ_SIMPLEREDCONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SIMPLEREDCONFIGr, port, 0), rvp)
#define WRITE_SIMPLEREDCONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SIMPLEREDCONFIGr, port, 0), rv)

#define READ_SMALLINGBUFFERTHRESr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SMALLINGBUFFERTHRESr, REG_PORT_ANY, 0), rvp)
#define WRITE_SMALLINGBUFFERTHRESr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SMALLINGBUFFERTHRESr, REG_PORT_ANY, 0), rv)

#define READ_SMII_DLL_CONTROLr(unit, port, rvp) \
	soc_reg_read(unit, SMII_DLL_CONTROLr, soc_reg_addr(unit, SMII_DLL_CONTROLr, port, 0), rvp)
#define WRITE_SMII_DLL_CONTROLr(unit, port, rv) \
	soc_reg_write(unit, SMII_DLL_CONTROLr, soc_reg_addr(unit, SMII_DLL_CONTROLr, port, 0), rv)

#define READ_SOFTRESETPBMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SOFTRESETPBMr, REG_PORT_ANY, 0), rvp)
#define WRITE_SOFTRESETPBMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SOFTRESETPBMr, REG_PORT_ANY, 0), rv)

#define READ_SOFTRESETPBM_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SOFTRESETPBM_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_SOFTRESETPBM_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SOFTRESETPBM_HIr, REG_PORT_ANY, 0), rv)

#define READ_SOURCE_VP_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SOURCE_VP_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_SOURCE_VP_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SOURCE_VP_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_SOURCE_VP_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SOURCE_VP_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_SOURCE_VP_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SOURCE_VP_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_SPORT_CTL_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SPORT_CTL_REGr, port, 0), rvp)
#define WRITE_SPORT_CTL_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SPORT_CTL_REGr, port, 0), rv)

#define READ_SRCMOD2IBPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SRCMOD2IBPr, REG_PORT_ANY, 0), rvp)
#define WRITE_SRCMOD2IBPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SRCMOD2IBPr, REG_PORT_ANY, 0), rv)

#define READ_SRC_MODID_BLOCK_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SRC_MODID_BLOCK_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_SRC_MODID_BLOCK_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SRC_MODID_BLOCK_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_SRC_MODID_BLOCK_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SRC_MODID_BLOCK_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_SRC_MODID_BLOCK_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SRC_MODID_BLOCK_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_SRC_TRUNK_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SRC_TRUNK_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_SRC_TRUNK_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SRC_TRUNK_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_SRC_TRUNK_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SRC_TRUNK_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_SRC_TRUNK_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SRC_TRUNK_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_START_BY_START_ERROR_64r(unit, rvp) \
	soc_reg_read(unit, START_BY_START_ERROR_64r, soc_reg_addr(unit, START_BY_START_ERROR_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_START_BY_START_ERROR_64r(unit, rv) \
	soc_reg_write(unit, START_BY_START_ERROR_64r, soc_reg_addr(unit, START_BY_START_ERROR_64r, REG_PORT_ANY, 0), rv)

#define READ_START_BY_START_ERR_STATr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, START_BY_START_ERR_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_START_BY_START_ERR_STATr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, START_BY_START_ERR_STATr, REG_PORT_ANY, 0), rv)

#define READ_STATUS_BSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, STATUS_BSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_STATUS_BSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, STATUS_BSEr, REG_PORT_ANY, 0), rv)

#define READ_STATUS_CSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, STATUS_CSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_STATUS_CSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, STATUS_CSEr, REG_PORT_ANY, 0), rv)

#define READ_STATUS_HSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, STATUS_HSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_STATUS_HSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, STATUS_HSEr, REG_PORT_ANY, 0), rv)

#define READ_STAT_CAUSEr(unit, port, rvp) \
	soc_reg_read(unit, STAT_CAUSEr, soc_reg_addr(unit, STAT_CAUSEr, port, 0), rvp)
#define WRITE_STAT_CAUSEr(unit, port, rv) \
	soc_reg_write(unit, STAT_CAUSEr, soc_reg_addr(unit, STAT_CAUSEr, port, 0), rv)

#define READ_STORM_CONTROL_METER_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, STORM_CONTROL_METER_CONFIGr, port, 0), rvp)
#define WRITE_STORM_CONTROL_METER_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, STORM_CONTROL_METER_CONFIGr, port, 0), rv)

#define READ_STORM_CONTROL_METER_MAPPINGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, STORM_CONTROL_METER_MAPPINGr, REG_PORT_ANY, 0), rvp)
#define WRITE_STORM_CONTROL_METER_MAPPINGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, STORM_CONTROL_METER_MAPPINGr, REG_PORT_ANY, 0), rv)

#define READ_SUBNET_VLAN_CAM_BIST_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_SUBNET_VLAN_CAM_BIST_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_SUBNET_VLAN_CAM_BIST_S10_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_SUBNET_VLAN_CAM_BIST_S10_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_SUBNET_VLAN_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_SUBNET_VLAN_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_SUBNET_VLAN_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_SUBNET_VLAN_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_SUBNET_VLAN_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_SUBNET_VLAN_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_SUBNET_VLAN_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_SUBNET_VLAN_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_SUBNET_VLAN_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_SUBNET_VLAN_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_SUBNET_VLAN_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_SUBNET_VLAN_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SUBNET_VLAN_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_SUBNET_VLAN_SAMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SUBNET_VLAN_SAMr, REG_PORT_ANY, 0), rvp)
#define WRITE_SUBNET_VLAN_SAMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SUBNET_VLAN_SAMr, REG_PORT_ANY, 0), rv)

#define READ_SUM_LWMSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SUM_LWMSr, REG_PORT_ANY, 0), rvp)
#define WRITE_SUM_LWMSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SUM_LWMSr, REG_PORT_ANY, 0), rv)

#define READ_SW1_RAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SW1_RAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_SW1_RAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SW1_RAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_SW2_FP_DST_ACTION_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SW2_FP_DST_ACTION_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_SW2_FP_DST_ACTION_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SW2_FP_DST_ACTION_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_SW2_HW_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SW2_HW_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_SW2_HW_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SW2_HW_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_SW2_RAM_CONTROL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SW2_RAM_CONTROL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_SW2_RAM_CONTROL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SW2_RAM_CONTROL_1r, REG_PORT_ANY, 0), rv)

#define READ_SW2_RAM_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SW2_RAM_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_SW2_RAM_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SW2_RAM_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_SW2_RAM_CONTROL_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SW2_RAM_CONTROL_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_SW2_RAM_CONTROL_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SW2_RAM_CONTROL_3r, REG_PORT_ANY, 0), rv)

#define READ_SW2_RAM_CONTROL_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SW2_RAM_CONTROL_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_SW2_RAM_CONTROL_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SW2_RAM_CONTROL_4r, REG_PORT_ANY, 0), rv)

#define READ_SW_SRCH_ADDRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SW_SRCH_ADDRr, REG_PORT_ANY, 0), rvp)
#define WRITE_SW_SRCH_ADDRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SW_SRCH_ADDRr, REG_PORT_ANY, 0), rv)

#define READ_SW_SRCH_DATA0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SW_SRCH_DATA0r, REG_PORT_ANY, 0), rvp)
#define WRITE_SW_SRCH_DATA0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SW_SRCH_DATA0r, REG_PORT_ANY, 0), rv)

#define READ_SW_SRCH_DATA1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SW_SRCH_DATA1r, REG_PORT_ANY, 0), rvp)
#define WRITE_SW_SRCH_DATA1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SW_SRCH_DATA1r, REG_PORT_ANY, 0), rv)

#define READ_SW_SRCH_DATA2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SW_SRCH_DATA2r, REG_PORT_ANY, 0), rvp)
#define WRITE_SW_SRCH_DATA2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SW_SRCH_DATA2r, REG_PORT_ANY, 0), rv)

#define READ_SW_SRCH_DATA3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SW_SRCH_DATA3r, REG_PORT_ANY, 0), rvp)
#define WRITE_SW_SRCH_DATA3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SW_SRCH_DATA3r, REG_PORT_ANY, 0), rv)

#define READ_SYS_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SYS_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_SYS_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SYS_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_SYS_MAC_ACTIONr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SYS_MAC_ACTIONr, REG_PORT_ANY, 0), rvp)
#define WRITE_SYS_MAC_ACTIONr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SYS_MAC_ACTIONr, REG_PORT_ANY, 0), rv)

#define READ_SYS_MAC_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SYS_MAC_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_SYS_MAC_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SYS_MAC_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_SYS_MAC_LIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SYS_MAC_LIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_SYS_MAC_LIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SYS_MAC_LIMITr, REG_PORT_ANY, 0), rv)

#define READ_SYS_MAC_LIMIT_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, SYS_MAC_LIMIT_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_SYS_MAC_LIMIT_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, SYS_MAC_LIMIT_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_TABRTr(unit, port, rvp) \
	soc_reg_read(unit, TABRTr, soc_reg_addr(unit, TABRTr, port, 0), rvp)
#define WRITE_TABRTr(unit, port, rv) \
	soc_reg_write(unit, TABRTr, soc_reg_addr(unit, TABRTr, port, 0), rv)

#define READ_TAGEr(unit, port, rvp) \
	soc_reg_read(unit, TAGEr, soc_reg_addr(unit, TAGEr, port, 0), rvp)
#define WRITE_TAGEr(unit, port, rv) \
	soc_reg_write(unit, TAGEr, soc_reg_addr(unit, TAGEr, port, 0), rv)

#define READ_TAG_0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TAG_0r, port, 0), rvp)
#define WRITE_TAG_0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TAG_0r, port, 0), rv)

#define READ_TAG_1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TAG_1r, port, 0), rvp)
#define WRITE_TAG_1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TAG_1r, port, 0), rv)

#define READ_TBCAr(unit, port, rvp) \
	soc_reg_read(unit, TBCAr, soc_reg_addr(unit, TBCAr, port, 0), rvp)
#define WRITE_TBCAr(unit, port, rv) \
	soc_reg_write(unit, TBCAr, soc_reg_addr(unit, TBCAr, port, 0), rv)

#define READ_TBYTr(unit, port, rvp) \
	soc_reg_read(unit, TBYTr, soc_reg_addr(unit, TBYTr, port, 0), rvp)
#define WRITE_TBYTr(unit, port, rv) \
	soc_reg_write(unit, TBYTr, soc_reg_addr(unit, TBYTr, port, 0), rv)

#define READ_TCAM_TYPE1_IP_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TCAM_TYPE1_IP_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_TCAM_TYPE1_IP_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TCAM_TYPE1_IP_0r, REG_PORT_ANY, 0), rv)

#define READ_TCAM_TYPE1_IP_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TCAM_TYPE1_IP_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_TCAM_TYPE1_IP_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TCAM_TYPE1_IP_1r, REG_PORT_ANY, 0), rv)

#define READ_TCAM_TYPE1_IP_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TCAM_TYPE1_IP_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_TCAM_TYPE1_IP_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TCAM_TYPE1_IP_2r, REG_PORT_ANY, 0), rv)

#define READ_TCAM_TYPE2_T144_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TCAM_TYPE2_T144_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_TCAM_TYPE2_T144_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TCAM_TYPE2_T144_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_TCAM_TYPE2_T72_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TCAM_TYPE2_T72_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_TCAM_TYPE2_T72_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TCAM_TYPE2_T72_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_TCAM_TYPE2_UD_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TCAM_TYPE2_UD_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_TCAM_TYPE2_UD_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TCAM_TYPE2_UD_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_TCEr(unit, port, rvp) \
	soc_reg_read(unit, TCEr, soc_reg_addr(unit, TCEr, port, 0), rvp)
#define WRITE_TCEr(unit, port, rv) \
	soc_reg_write(unit, TCEr, soc_reg_addr(unit, TCEr, port, 0), rv)

#define READ_TCFIDRr(unit, port, rvp) \
	soc_reg_read(unit, TCFIDRr, soc_reg_addr(unit, TCFIDRr, port, 0), rvp)
#define WRITE_TCFIDRr(unit, port, rv) \
	soc_reg_write(unit, TCFIDRr, soc_reg_addr(unit, TCFIDRr, port, 0), rv)

#define READ_TDBGC0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC0r, port, 0), rvp)
#define WRITE_TDBGC0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC0r, port, 0), rv)

#define READ_TDBGC1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC1r, port, 0), rvp)
#define WRITE_TDBGC1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC1r, port, 0), rv)

#define READ_TDBGC2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC2r, port, 0), rvp)
#define WRITE_TDBGC2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC2r, port, 0), rv)

#define READ_TDBGC3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC3r, port, 0), rvp)
#define WRITE_TDBGC3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC3r, port, 0), rv)

#define READ_TDBGC4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC4r, port, 0), rvp)
#define WRITE_TDBGC4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC4r, port, 0), rv)

#define READ_TDBGC5r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC5r, port, 0), rvp)
#define WRITE_TDBGC5r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC5r, port, 0), rv)

#define READ_TDBGC6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC6r, port, 0), rvp)
#define WRITE_TDBGC6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC6r, port, 0), rv)

#define READ_TDBGC7r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC7r, port, 0), rvp)
#define WRITE_TDBGC7r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC7r, port, 0), rv)

#define READ_TDBGC8r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC8r, port, 0), rvp)
#define WRITE_TDBGC8r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC8r, port, 0), rv)

#define READ_TDBGC9r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC9r, port, 0), rvp)
#define WRITE_TDBGC9r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC9r, port, 0), rv)

#define READ_TDBGC10r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC10r, port, 0), rvp)
#define WRITE_TDBGC10r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC10r, port, 0), rv)

#define READ_TDBGC11r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC11r, port, 0), rvp)
#define WRITE_TDBGC11r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC11r, port, 0), rv)

#define READ_TDBGC12r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC12r, port, 0), rvp)
#define WRITE_TDBGC12r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC12r, port, 0), rv)

#define READ_TDBGC13r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC13r, port, 0), rvp)
#define WRITE_TDBGC13r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC13r, port, 0), rv)

#define READ_TDBGC14r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC14r, port, 0), rvp)
#define WRITE_TDBGC14r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC14r, port, 0), rv)

#define READ_TDBGC0_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC0_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC0_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC0_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC10_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC10_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC10_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC10_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC11_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC11_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC11_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC11_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC1_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC1_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC1_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC1_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC2_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC2_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC2_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC2_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC3_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC3_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC3_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC3_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC4_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC4_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC4_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC4_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC5_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC5_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC5_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC5_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC6_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC6_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC6_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC6_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC7_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC7_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC7_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC7_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC8_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC8_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC8_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC8_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC9_SELECTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC9_SELECTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDBGC9_SELECTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC9_SELECTr, REG_PORT_ANY, 0), rv)

#define READ_TDBGC_SELECTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDBGC_SELECTr, port, idx), rvp)
#define WRITE_TDBGC_SELECTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDBGC_SELECTr, port, idx), rv)

#define READ_TDFRr(unit, port, rvp) \
	soc_reg_read(unit, TDFRr, soc_reg_addr(unit, TDFRr, port, 0), rvp)
#define WRITE_TDFRr(unit, port, rv) \
	soc_reg_write(unit, TDFRr, soc_reg_addr(unit, TDFRr, port, 0), rv)

#define READ_TDM_ENr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TDM_ENr, REG_PORT_ANY, 0), rvp)
#define WRITE_TDM_ENr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TDM_ENr, REG_PORT_ANY, 0), rv)

#define READ_TEDFr(unit, port, rvp) \
	soc_reg_read(unit, TEDFr, soc_reg_addr(unit, TEDFr, port, 0), rvp)
#define WRITE_TEDFr(unit, port, rv) \
	soc_reg_write(unit, TEDFr, soc_reg_addr(unit, TEDFr, port, 0), rv)

#define READ_TEST2r(unit, port, rvp) \
	soc_reg_read(unit, TEST2r, soc_reg_addr(unit, TEST2r, port, 0), rvp)
#define WRITE_TEST2r(unit, port, rv) \
	soc_reg_write(unit, TEST2r, soc_reg_addr(unit, TEST2r, port, 0), rv)

#define READ_TFCSr(unit, port, rvp) \
	soc_reg_read(unit, TFCSr, soc_reg_addr(unit, TFCSr, port, 0), rvp)
#define WRITE_TFCSr(unit, port, rv) \
	soc_reg_write(unit, TFCSr, soc_reg_addr(unit, TFCSr, port, 0), rv)

#define READ_TFRGr(unit, port, rvp) \
	soc_reg_read(unit, TFRGr, soc_reg_addr(unit, TFRGr, port, 0), rvp)
#define WRITE_TFRGr(unit, port, rv) \
	soc_reg_write(unit, TFRGr, soc_reg_addr(unit, TFRGr, port, 0), rv)

#define READ_THDI_BYPASSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, THDI_BYPASSr, REG_PORT_ANY, 0), rvp)
#define WRITE_THDI_BYPASSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, THDI_BYPASSr, REG_PORT_ANY, 0), rv)

#define READ_THDO_BYPASSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, THDO_BYPASSr, REG_PORT_ANY, 0), rvp)
#define WRITE_THDO_BYPASSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, THDO_BYPASSr, REG_PORT_ANY, 0), rv)

#define READ_THRESHOLD_CONTROLr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, THRESHOLD_CONTROLr, REG_PORT_ANY, idx), rvp)
#define WRITE_THRESHOLD_CONTROLr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, THRESHOLD_CONTROLr, REG_PORT_ANY, idx), rv)

#define READ_TIMDRr(unit, port, rvp) \
	soc_reg_read(unit, TIMDRr, soc_reg_addr(unit, TIMDRr, port, 0), rvp)
#define WRITE_TIMDRr(unit, port, rv) \
	soc_reg_write(unit, TIMDRr, soc_reg_addr(unit, TIMDRr, port, 0), rv)

#define READ_TIMTLDr(unit, port, rvp) \
	soc_reg_read(unit, TIMTLDr, soc_reg_addr(unit, TIMTLDr, port, 0), rvp)
#define WRITE_TIMTLDr(unit, port, rv) \
	soc_reg_write(unit, TIMTLDr, soc_reg_addr(unit, TIMTLDr, port, 0), rv)

#define READ_TIPr(unit, port, rvp) \
	soc_reg_read(unit, TIPr, soc_reg_addr(unit, TIPr, port, 0), rvp)
#define WRITE_TIPr(unit, port, rv) \
	soc_reg_write(unit, TIPr, soc_reg_addr(unit, TIPr, port, 0), rv)

#define READ_TIPAGEr(unit, port, rvp) \
	soc_reg_read(unit, TIPAGEr, soc_reg_addr(unit, TIPAGEr, port, 0), rvp)
#define WRITE_TIPAGEr(unit, port, rv) \
	soc_reg_write(unit, TIPAGEr, soc_reg_addr(unit, TIPAGEr, port, 0), rv)

#define READ_TIPDr(unit, port, rvp) \
	soc_reg_read(unit, TIPDr, soc_reg_addr(unit, TIPDr, port, 0), rvp)
#define WRITE_TIPDr(unit, port, rv) \
	soc_reg_write(unit, TIPDr, soc_reg_addr(unit, TIPDr, port, 0), rv)

#define READ_TIPXr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TIPXr, port, 0), rvp)
#define WRITE_TIPXr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TIPXr, port, 0), rv)

#define READ_TJBRr(unit, port, rvp) \
	soc_reg_read(unit, TJBRr, soc_reg_addr(unit, TJBRr, port, 0), rvp)
#define WRITE_TJBRr(unit, port, rv) \
	soc_reg_write(unit, TJBRr, soc_reg_addr(unit, TJBRr, port, 0), rv)

#define READ_TLCLr(unit, port, rvp) \
	soc_reg_read(unit, TLCLr, soc_reg_addr(unit, TLCLr, port, 0), rvp)
#define WRITE_TLCLr(unit, port, rv) \
	soc_reg_write(unit, TLCLr, soc_reg_addr(unit, TLCLr, port, 0), rv)

#define READ_TMCAr(unit, port, rvp) \
	soc_reg_read(unit, TMCAr, soc_reg_addr(unit, TMCAr, port, 0), rvp)
#define WRITE_TMCAr(unit, port, rv) \
	soc_reg_write(unit, TMCAr, soc_reg_addr(unit, TMCAr, port, 0), rv)

#define READ_TMCLr(unit, port, rvp) \
	soc_reg_read(unit, TMCLr, soc_reg_addr(unit, TMCLr, port, 0), rvp)
#define WRITE_TMCLr(unit, port, rv) \
	soc_reg_write(unit, TMCLr, soc_reg_addr(unit, TMCLr, port, 0), rv)

#define READ_TNCLr(unit, port, rvp) \
	soc_reg_read(unit, TNCLr, soc_reg_addr(unit, TNCLr, port, 0), rvp)
#define WRITE_TNCLr(unit, port, rv) \
	soc_reg_write(unit, TNCLr, soc_reg_addr(unit, TNCLr, port, 0), rv)

#define READ_TNL_PROT_CHKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TNL_PROT_CHKr, REG_PORT_ANY, 0), rvp)
#define WRITE_TNL_PROT_CHKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TNL_PROT_CHKr, REG_PORT_ANY, 0), rv)

#define READ_TNL_PROT_VALr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TNL_PROT_VALr, REG_PORT_ANY, 0), rvp)
#define WRITE_TNL_PROT_VALr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TNL_PROT_VALr, REG_PORT_ANY, 0), rv)

#define READ_TOQEMPTYr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQEMPTYr, port, 0), rvp)
#define WRITE_TOQEMPTYr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQEMPTYr, port, 0), rv)

#define READ_TOQEMPTY_64r(unit, port, rvp) \
	soc_reg_read(unit, TOQEMPTY_64r, soc_reg_addr(unit, TOQEMPTY_64r, port, 0), rvp)
#define WRITE_TOQEMPTY_64r(unit, port, rv) \
	soc_reg_write(unit, TOQEMPTY_64r, soc_reg_addr(unit, TOQEMPTY_64r, port, 0), rv)

#define READ_TOQEMPTY_CPU_PORT_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQEMPTY_CPU_PORT_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQEMPTY_CPU_PORT_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQEMPTY_CPU_PORT_0r, REG_PORT_ANY, 0), rv)

#define READ_TOQEMPTY_CPU_PORT_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQEMPTY_CPU_PORT_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQEMPTY_CPU_PORT_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQEMPTY_CPU_PORT_1r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_ACTIVATEQr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_ACTIVATEQr, port, 0), rvp)
#define WRITE_TOQ_ACTIVATEQr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_ACTIVATEQr, port, 0), rv)

#define READ_TOQ_ACTIVATEQ_64r(unit, port, rvp) \
	soc_reg_read(unit, TOQ_ACTIVATEQ_64r, soc_reg_addr(unit, TOQ_ACTIVATEQ_64r, port, 0), rvp)
#define WRITE_TOQ_ACTIVATEQ_64r(unit, port, rv) \
	soc_reg_write(unit, TOQ_ACTIVATEQ_64r, soc_reg_addr(unit, TOQ_ACTIVATEQ_64r, port, 0), rv)

#define READ_TOQ_ACTIVATEQ_CPU_PORT_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_ACTIVATEQ_CPU_PORT_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_ACTIVATEQ_CPU_PORT_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_ACTIVATEQ_CPU_PORT_0r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_ACTIVATEQ_CPU_PORT_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_ACTIVATEQ_CPU_PORT_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_ACTIVATEQ_CPU_PORT_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_ACTIVATEQ_CPU_PORT_1r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_CELLHDRERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_CELLHDRERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_CELLHDRERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_CELLHDRERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_TOQ_CELLLINKERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_CELLLINKERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_CELLLINKERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_CELLLINKERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_TOQ_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_TOQ_DIS_IPMC_REPLICATIONr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_DIS_IPMC_REPLICATIONr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_DIS_IPMC_REPLICATIONr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_DIS_IPMC_REPLICATIONr, REG_PORT_ANY, 0), rv)

#define READ_TOQ_DIS_IPMC_REPLICATION_64r(unit, rvp) \
	soc_reg_read(unit, TOQ_DIS_IPMC_REPLICATION_64r, soc_reg_addr(unit, TOQ_DIS_IPMC_REPLICATION_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_DIS_IPMC_REPLICATION_64r(unit, rv) \
	soc_reg_write(unit, TOQ_DIS_IPMC_REPLICATION_64r, soc_reg_addr(unit, TOQ_DIS_IPMC_REPLICATION_64r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_ENQIPMCGRPERRPTR0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_ENQIPMCGRPERRPTR0r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_ENQIPMCGRPERRPTR0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_ENQIPMCGRPERRPTR0r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_ENQIPMCGRPERRPTR1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_ENQIPMCGRPERRPTR1r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_ENQIPMCGRPERRPTR1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_ENQIPMCGRPERRPTR1r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_ERRINTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_ERRINTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_ERRINTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_ERRINTRr, REG_PORT_ANY, 0), rv)

#define READ_TOQ_ERRINTR1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_ERRINTR1r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_ERRINTR1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_ERRINTR1r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_ERRINTR0_64r(unit, rvp) \
	soc_reg_read(unit, TOQ_ERRINTR0_64r, soc_reg_addr(unit, TOQ_ERRINTR0_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_ERRINTR0_64r(unit, rv) \
	soc_reg_write(unit, TOQ_ERRINTR0_64r, soc_reg_addr(unit, TOQ_ERRINTR0_64r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_FAST_FLUSHr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_FAST_FLUSHr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_FAST_FLUSHr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_FAST_FLUSHr, REG_PORT_ANY, 0), rv)

#define READ_TOQ_IPMCERRINTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_IPMCERRINTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_IPMCERRINTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_IPMCERRINTRr, REG_PORT_ANY, 0), rv)

#define READ_TOQ_IPMCGRPERRPTR0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_IPMCGRPERRPTR0r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_IPMCGRPERRPTR0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_IPMCGRPERRPTR0r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_IPMCGRPERRPTR1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_IPMCGRPERRPTR1r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_IPMCGRPERRPTR1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_IPMCGRPERRPTR1r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_IPMCVLANERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_IPMCVLANERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_IPMCVLANERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_IPMCVLANERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_TOQ_IPMC_FAST_FLUSH_64r(unit, rvp) \
	soc_reg_read(unit, TOQ_IPMC_FAST_FLUSH_64r, soc_reg_addr(unit, TOQ_IPMC_FAST_FLUSH_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_IPMC_FAST_FLUSH_64r(unit, rv) \
	soc_reg_write(unit, TOQ_IPMC_FAST_FLUSH_64r, soc_reg_addr(unit, TOQ_IPMC_FAST_FLUSH_64r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_IPMC_REPLICATION_STATr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_IPMC_REPLICATION_STATr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_IPMC_REPLICATION_STATr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_IPMC_REPLICATION_STATr, REG_PORT_ANY, 0), rv)

#define READ_TOQ_IPMC_REPLICATION_STAT_64r(unit, rvp) \
	soc_reg_read(unit, TOQ_IPMC_REPLICATION_STAT_64r, soc_reg_addr(unit, TOQ_IPMC_REPLICATION_STAT_64r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_IPMC_REPLICATION_STAT_64r(unit, rv) \
	soc_reg_write(unit, TOQ_IPMC_REPLICATION_STAT_64r, soc_reg_addr(unit, TOQ_IPMC_REPLICATION_STAT_64r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_PKTHDR1ERRPTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_PKTHDR1ERRPTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_PKTHDR1ERRPTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_PKTHDR1ERRPTRr, REG_PORT_ANY, 0), rv)

#define READ_TOQ_PKTLINKERRINTRr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_PKTLINKERRINTRr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_PKTLINKERRINTRr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_PKTLINKERRINTRr, REG_PORT_ANY, 0), rv)

#define READ_TOQ_PKTLINKERRPTRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_PKTLINKERRPTRr, port, 0), rvp)
#define WRITE_TOQ_PKTLINKERRPTRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_PKTLINKERRPTRr, port, 0), rv)

#define READ_TOQ_QUEUESTATr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_QUEUESTATr, port, 0), rvp)
#define WRITE_TOQ_QUEUESTATr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_QUEUESTATr, port, 0), rv)

#define READ_TOQ_QUEUESTAT_64r(unit, port, rvp) \
	soc_reg_read(unit, TOQ_QUEUESTAT_64r, soc_reg_addr(unit, TOQ_QUEUESTAT_64r, port, 0), rvp)
#define WRITE_TOQ_QUEUESTAT_64r(unit, port, rv) \
	soc_reg_write(unit, TOQ_QUEUESTAT_64r, soc_reg_addr(unit, TOQ_QUEUESTAT_64r, port, 0), rv)

#define READ_TOQ_QUEUESTAT_CPU_PORT_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_QUEUESTAT_CPU_PORT_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_QUEUESTAT_CPU_PORT_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_QUEUESTAT_CPU_PORT_0r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_QUEUESTAT_CPU_PORT_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_QUEUESTAT_CPU_PORT_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_QUEUESTAT_CPU_PORT_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_QUEUESTAT_CPU_PORT_1r, REG_PORT_ANY, 0), rv)

#define READ_TOQ_SPAREr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOQ_SPAREr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOQ_SPAREr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOQ_SPAREr, REG_PORT_ANY, 0), rv)

#define READ_TOTALDYNCELLLIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTALDYNCELLLIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTALDYNCELLLIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTALDYNCELLLIMITr, REG_PORT_ANY, 0), rv)

#define READ_TOTALDYNCELLRESETLIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTALDYNCELLRESETLIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTALDYNCELLRESETLIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTALDYNCELLRESETLIMITr, REG_PORT_ANY, 0), rv)

#define READ_TOTALDYNCELLSETLIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTALDYNCELLSETLIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTALDYNCELLSETLIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTALDYNCELLSETLIMITr, REG_PORT_ANY, 0), rv)

#define READ_TOTALDYNCELLUSEDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTALDYNCELLUSEDr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTALDYNCELLUSEDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTALDYNCELLUSEDr, REG_PORT_ANY, 0), rv)

#define READ_TOTAL_BUFFER_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTAL_BUFFER_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTAL_BUFFER_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTAL_BUFFER_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_TOTAL_BUFFER_COUNT_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTAL_BUFFER_COUNT_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTAL_BUFFER_COUNT_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTAL_BUFFER_COUNT_CELLr, REG_PORT_ANY, 0), rv)

#define READ_TOTAL_BUFFER_COUNT_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTAL_BUFFER_COUNT_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTAL_BUFFER_COUNT_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTAL_BUFFER_COUNT_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_TOTAL_SHARED_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTAL_SHARED_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTAL_SHARED_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTAL_SHARED_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_TOTAL_SHARED_COUNT_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTAL_SHARED_COUNT_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTAL_SHARED_COUNT_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTAL_SHARED_COUNT_CELLr, REG_PORT_ANY, 0), rv)

#define READ_TOTAL_SHARED_COUNT_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTAL_SHARED_COUNT_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTAL_SHARED_COUNT_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTAL_SHARED_COUNT_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_TOTAL_SHARED_LIMITr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTAL_SHARED_LIMITr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTAL_SHARED_LIMITr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTAL_SHARED_LIMITr, REG_PORT_ANY, 0), rv)

#define READ_TOTAL_SHARED_LIMIT_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTAL_SHARED_LIMIT_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTAL_SHARED_LIMIT_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTAL_SHARED_LIMIT_CELLr, REG_PORT_ANY, 0), rv)

#define READ_TOTAL_SHARED_LIMIT_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TOTAL_SHARED_LIMIT_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_TOTAL_SHARED_LIMIT_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TOTAL_SHARED_LIMIT_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_TOVRr(unit, port, rvp) \
	soc_reg_read(unit, TOVRr, soc_reg_addr(unit, TOVRr, port, 0), rvp)
#define WRITE_TOVRr(unit, port, rv) \
	soc_reg_write(unit, TOVRr, soc_reg_addr(unit, TOVRr, port, 0), rv)

#define READ_TPCEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TPCEr, port, 0), rvp)
#define WRITE_TPCEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TPCEr, port, 0), rv)

#define READ_TPKTr(unit, port, rvp) \
	soc_reg_read(unit, TPKTr, soc_reg_addr(unit, TPKTr, port, 0), rvp)
#define WRITE_TPKTr(unit, port, rv) \
	soc_reg_write(unit, TPKTr, soc_reg_addr(unit, TPKTr, port, 0), rv)

#define READ_TR64r(unit, port, rvp) \
	soc_reg_read(unit, TR64r, soc_reg_addr(unit, TR64r, port, 0), rvp)
#define WRITE_TR64r(unit, port, rv) \
	soc_reg_write(unit, TR64r, soc_reg_addr(unit, TR64r, port, 0), rv)

#define READ_TR127r(unit, port, rvp) \
	soc_reg_read(unit, TR127r, soc_reg_addr(unit, TR127r, port, 0), rvp)
#define WRITE_TR127r(unit, port, rv) \
	soc_reg_write(unit, TR127r, soc_reg_addr(unit, TR127r, port, 0), rv)

#define READ_TR255r(unit, port, rvp) \
	soc_reg_read(unit, TR255r, soc_reg_addr(unit, TR255r, port, 0), rvp)
#define WRITE_TR255r(unit, port, rv) \
	soc_reg_write(unit, TR255r, soc_reg_addr(unit, TR255r, port, 0), rv)

#define READ_TR511r(unit, port, rvp) \
	soc_reg_read(unit, TR511r, soc_reg_addr(unit, TR511r, port, 0), rvp)
#define WRITE_TR511r(unit, port, rv) \
	soc_reg_write(unit, TR511r, soc_reg_addr(unit, TR511r, port, 0), rv)

#define READ_TR1023r(unit, port, rvp) \
	soc_reg_read(unit, TR1023r, soc_reg_addr(unit, TR1023r, port, 0), rvp)
#define WRITE_TR1023r(unit, port, rv) \
	soc_reg_write(unit, TR1023r, soc_reg_addr(unit, TR1023r, port, 0), rv)

#define READ_TR1518r(unit, port, rvp) \
	soc_reg_read(unit, TR1518r, soc_reg_addr(unit, TR1518r, port, 0), rvp)
#define WRITE_TR1518r(unit, port, rv) \
	soc_reg_write(unit, TR1518r, soc_reg_addr(unit, TR1518r, port, 0), rv)

#define READ_TR2047r(unit, port, rvp) \
	soc_reg_read(unit, TR2047r, soc_reg_addr(unit, TR2047r, port, 0), rvp)
#define WRITE_TR2047r(unit, port, rv) \
	soc_reg_write(unit, TR2047r, soc_reg_addr(unit, TR2047r, port, 0), rv)

#define READ_TR4095r(unit, port, rvp) \
	soc_reg_read(unit, TR4095r, soc_reg_addr(unit, TR4095r, port, 0), rvp)
#define WRITE_TR4095r(unit, port, rv) \
	soc_reg_write(unit, TR4095r, soc_reg_addr(unit, TR4095r, port, 0), rv)

#define READ_TR9216r(unit, port, rvp) \
	soc_reg_read(unit, TR9216r, soc_reg_addr(unit, TR9216r, port, 0), rvp)
#define WRITE_TR9216r(unit, port, rv) \
	soc_reg_write(unit, TR9216r, soc_reg_addr(unit, TR9216r, port, 0), rv)

#define READ_TRMAXr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TRMAXr, port, 0), rvp)
#define WRITE_TRMAXr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TRMAXr, port, 0), rv)

#define READ_TRMGVr(unit, port, rvp) \
	soc_reg_read(unit, TRMGVr, soc_reg_addr(unit, TRMGVr, port, 0), rvp)
#define WRITE_TRMGVr(unit, port, rv) \
	soc_reg_write(unit, TRMGVr, soc_reg_addr(unit, TRMGVr, port, 0), rv)

#define READ_TSCLr(unit, port, rvp) \
	soc_reg_read(unit, TSCLr, soc_reg_addr(unit, TSCLr, port, 0), rvp)
#define WRITE_TSCLr(unit, port, rv) \
	soc_reg_write(unit, TSCLr, soc_reg_addr(unit, TSCLr, port, 0), rv)

#define READ_TSPDRr(unit, port, rvp) \
	soc_reg_read(unit, TSPDRr, soc_reg_addr(unit, TSPDRr, port, 0), rvp)
#define WRITE_TSPDRr(unit, port, rv) \
	soc_reg_write(unit, TSPDRr, soc_reg_addr(unit, TSPDRr, port, 0), rv)

#define READ_TUNNEL_CAM_BIST_ENABLEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_ENABLEr, REG_PORT_ANY, 0), rvp)
#define WRITE_TUNNEL_CAM_BIST_ENABLEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_ENABLEr, REG_PORT_ANY, 0), rv)

#define READ_TUNNEL_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_TUNNEL_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_TUNNEL_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_TUNNEL_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_TUNNEL_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_TUNNEL_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_TUNNEL_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_TUNNEL_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_TUNNEL_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_TUNNEL_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_TUNNEL_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_TUNNEL_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TUNNEL_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_TUNNEL_SAMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TUNNEL_SAMr, REG_PORT_ANY, 0), rvp)
#define WRITE_TUNNEL_SAMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TUNNEL_SAMr, REG_PORT_ANY, 0), rv)

#define READ_TVLANr(unit, port, rvp) \
	soc_reg_read(unit, TVLANr, soc_reg_addr(unit, TVLANr, port, 0), rvp)
#define WRITE_TVLANr(unit, port, rv) \
	soc_reg_write(unit, TVLANr, soc_reg_addr(unit, TVLANr, port, 0), rv)

#define READ_TXCFr(unit, port, rvp) \
	soc_reg_read(unit, TXCFr, soc_reg_addr(unit, TXCFr, port, 0), rvp)
#define WRITE_TXCFr(unit, port, rv) \
	soc_reg_write(unit, TXCFr, soc_reg_addr(unit, TXCFr, port, 0), rv)

#define READ_TXCLr(unit, port, rvp) \
	soc_reg_read(unit, TXCLr, soc_reg_addr(unit, TXCLr, port, 0), rvp)
#define WRITE_TXCLr(unit, port, rv) \
	soc_reg_write(unit, TXCLr, soc_reg_addr(unit, TXCLr, port, 0), rv)

#define READ_TXFIFO_STATr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TXFIFO_STATr, port, 0), rvp)
#define WRITE_TXFIFO_STATr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TXFIFO_STATr, port, 0), rv)

#define READ_TXLLFCMSGCNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TXLLFCMSGCNTr, port, 0), rvp)
#define WRITE_TXLLFCMSGCNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TXLLFCMSGCNTr, port, 0), rv)

#define READ_TXPFr(unit, port, rvp) \
	soc_reg_read(unit, TXPFr, soc_reg_addr(unit, TXPFr, port, 0), rvp)
#define WRITE_TXPFr(unit, port, rv) \
	soc_reg_write(unit, TXPFr, soc_reg_addr(unit, TXPFr, port, 0), rv)

#define READ_TX_CNT_CONFIGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TX_CNT_CONFIGr, REG_PORT_ANY, idx), rvp)
#define WRITE_TX_CNT_CONFIGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TX_CNT_CONFIGr, REG_PORT_ANY, idx), rv)

#define READ_TX_IPG_LENGTHr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TX_IPG_LENGTHr, port, 0), rvp)
#define WRITE_TX_IPG_LENGTHr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TX_IPG_LENGTHr, port, 0), rv)

#define READ_TX_PKT_CNTr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, TX_PKT_CNTr, REG_PORT_ANY, idx), rvp)
#define WRITE_TX_PKT_CNTr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, TX_PKT_CNTr, REG_PORT_ANY, idx), rv)

#define READ_UDF_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UDF_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_UDF_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UDF_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_UDF_ETHERTYPE_MATCHr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UDF_ETHERTYPE_MATCHr, REG_PORT_ANY, idx), rvp)
#define WRITE_UDF_ETHERTYPE_MATCHr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UDF_ETHERTYPE_MATCHr, REG_PORT_ANY, idx), rv)

#define READ_UDF_IPPROTO_MATCHr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UDF_IPPROTO_MATCHr, REG_PORT_ANY, idx), rvp)
#define WRITE_UDF_IPPROTO_MATCHr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UDF_IPPROTO_MATCHr, REG_PORT_ANY, idx), rv)

#define READ_UL_BIST_REG0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UL_BIST_REG0r, port, 0), rvp)
#define WRITE_UL_BIST_REG0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UL_BIST_REG0r, port, 0), rv)

#define READ_UL_BIST_REG1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UL_BIST_REG1r, port, 0), rvp)
#define WRITE_UL_BIST_REG1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UL_BIST_REG1r, port, 0), rv)

#define READ_UL_BIST_REG2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UL_BIST_REG2r, port, 0), rvp)
#define WRITE_UL_BIST_REG2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UL_BIST_REG2r, port, 0), rv)

#define READ_UL_BIST_REG3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UL_BIST_REG3r, port, 0), rvp)
#define WRITE_UL_BIST_REG3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UL_BIST_REG3r, port, 0), rv)

#define READ_UNKNOWN_HGI_BITMAPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UNKNOWN_HGI_BITMAPr, port, 0), rvp)
#define WRITE_UNKNOWN_HGI_BITMAPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UNKNOWN_HGI_BITMAPr, port, 0), rv)

#define READ_UNKNOWN_MCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg_read(unit, UNKNOWN_MCAST_BLOCK_MASKr, soc_reg_addr(unit, UNKNOWN_MCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_UNKNOWN_MCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg_write(unit, UNKNOWN_MCAST_BLOCK_MASKr, soc_reg_addr(unit, UNKNOWN_MCAST_BLOCK_MASKr, port, 0), rv)

#define READ_UNKNOWN_MCAST_BLOCK_MASK_64r(unit, port, rvp) \
	soc_reg_read(unit, UNKNOWN_MCAST_BLOCK_MASK_64r, soc_reg_addr(unit, UNKNOWN_MCAST_BLOCK_MASK_64r, port, 0), rvp)
#define WRITE_UNKNOWN_MCAST_BLOCK_MASK_64r(unit, port, rv) \
	soc_reg_write(unit, UNKNOWN_MCAST_BLOCK_MASK_64r, soc_reg_addr(unit, UNKNOWN_MCAST_BLOCK_MASK_64r, port, 0), rv)

#define READ_UNKNOWN_MCAST_BLOCK_MASK_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UNKNOWN_MCAST_BLOCK_MASK_HIr, port, 0), rvp)
#define WRITE_UNKNOWN_MCAST_BLOCK_MASK_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UNKNOWN_MCAST_BLOCK_MASK_HIr, port, 0), rv)

#define READ_UNKNOWN_UCAST_BLOCK_MASKr(unit, port, rvp) \
	soc_reg_read(unit, UNKNOWN_UCAST_BLOCK_MASKr, soc_reg_addr(unit, UNKNOWN_UCAST_BLOCK_MASKr, port, 0), rvp)
#define WRITE_UNKNOWN_UCAST_BLOCK_MASKr(unit, port, rv) \
	soc_reg_write(unit, UNKNOWN_UCAST_BLOCK_MASKr, soc_reg_addr(unit, UNKNOWN_UCAST_BLOCK_MASKr, port, 0), rv)

#define READ_UNKNOWN_UCAST_BLOCK_MASK_64r(unit, port, rvp) \
	soc_reg_read(unit, UNKNOWN_UCAST_BLOCK_MASK_64r, soc_reg_addr(unit, UNKNOWN_UCAST_BLOCK_MASK_64r, port, 0), rvp)
#define WRITE_UNKNOWN_UCAST_BLOCK_MASK_64r(unit, port, rv) \
	soc_reg_write(unit, UNKNOWN_UCAST_BLOCK_MASK_64r, soc_reg_addr(unit, UNKNOWN_UCAST_BLOCK_MASK_64r, port, 0), rv)

#define READ_UNKNOWN_UCAST_BLOCK_MASK_HIr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, UNKNOWN_UCAST_BLOCK_MASK_HIr, port, 0), rvp)
#define WRITE_UNKNOWN_UCAST_BLOCK_MASK_HIr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, UNKNOWN_UCAST_BLOCK_MASK_HIr, port, 0), rv)

#define READ_USER_TRUNK_HASH_SELECTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, USER_TRUNK_HASH_SELECTr, port, 0), rvp)
#define WRITE_USER_TRUNK_HASH_SELECTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, USER_TRUNK_HASH_SELECTr, port, 0), rv)

#define READ_USE_EGRESS_PKT_SIZEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, USE_EGRESS_PKT_SIZEr, REG_PORT_ANY, 0), rvp)
#define WRITE_USE_EGRESS_PKT_SIZEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, USE_EGRESS_PKT_SIZEr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_BIST_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_BIST_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_BIST_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_BIST_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_BIST_DBG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_BIST_DBG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_BIST_S10_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_BIST_S10_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_BIST_S12_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_BIST_S12_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_BIST_S12_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_BIST_S12_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_BIST_S14_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_BIST_S14_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_BIST_S14_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_BIST_S14_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_BIST_S15_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_BIST_S15_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_BIST_S15_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_BIST_S15_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_CONTROL_3_THRU_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_CONTROL_3_THRU_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_CONTROL_3_THRU_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_CONTROL_3_THRU_0r, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_CONTROL_SLICE_3_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_CONTROL_SLICE_3_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_CONTROL_SLICE_3_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_CONTROL_SLICE_3_0r, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_CONTROL_TM_7_THRU_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_CONTROL_TM_7_THRU_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_CONTROL_TM_7_THRU_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_CONTROL_TM_7_THRU_0r, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_DEBUG_DATA_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_DATA_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_DEBUG_DATA_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_DATA_0r, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_DEBUG_DATA_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_DATA_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_DEBUG_DATA_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_DATA_1r, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_DEBUG_DATA_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_DATA_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_DEBUG_DATA_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_DATA_2r, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_DEBUG_DATA_3r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_DATA_3r, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_DEBUG_DATA_3r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_DATA_3r, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_DEBUG_DATA_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_DATA_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_DEBUG_DATA_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_DATA_4r, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_DEBUG_DATA_5r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_DATA_5r, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_DEBUG_DATA_5r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_DATA_5r, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_DEBUG_GLOBAL_MASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_GLOBAL_MASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_DEBUG_GLOBAL_MASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_GLOBAL_MASKr, REG_PORT_ANY, 0), rv)

#define READ_VFP_CAM_DEBUG_SENDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_SENDr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_CAM_DEBUG_SENDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_CAM_DEBUG_SENDr, REG_PORT_ANY, 0), rv)

#define READ_VFP_KEY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_KEY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_KEY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_KEY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VFP_KEY_CONTROL_2r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_KEY_CONTROL_2r, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_KEY_CONTROL_2r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_KEY_CONTROL_2r, REG_PORT_ANY, 0), rv)

#define READ_VFP_POLICY_TABLE_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_POLICY_TABLE_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_POLICY_TABLE_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_POLICY_TABLE_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VFP_POLICY_TABLE_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_POLICY_TABLE_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_POLICY_TABLE_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_POLICY_TABLE_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VFP_POLICY_TABLE_RAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_POLICY_TABLE_RAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_POLICY_TABLE_RAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_POLICY_TABLE_RAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VFP_SLICE_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_SLICE_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_SLICE_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_SLICE_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VFP_SLICE_MAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VFP_SLICE_MAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_VFP_SLICE_MAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VFP_SLICE_MAPr, REG_PORT_ANY, 0), rv)

#define READ_VIRT_PORT_EGRPKTUSECOSr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VIRT_PORT_EGRPKTUSECOSr, REG_PORT_ANY, idx), rvp)
#define WRITE_VIRT_PORT_EGRPKTUSECOSr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VIRT_PORT_EGRPKTUSECOSr, REG_PORT_ANY, idx), rv)

#define READ_VIRT_XQ_PARITYr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VIRT_XQ_PARITYr, REG_PORT_ANY, 0), rvp)
#define WRITE_VIRT_XQ_PARITYr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VIRT_XQ_PARITYr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_CONTROLr(unit, port, rvp) \
	soc_reg_read(unit, VLAN_CONTROLr, soc_reg_addr(unit, VLAN_CONTROLr, port, 0), rvp)
#define WRITE_VLAN_CONTROLr(unit, port, rv) \
	soc_reg_write(unit, VLAN_CONTROLr, soc_reg_addr(unit, VLAN_CONTROLr, port, 0), rv)

#define READ_VLAN_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_DEFAULTr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_DEFAULTr, REG_PORT_ANY, idx), rvp)
#define WRITE_VLAN_DEFAULTr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_DEFAULTr, REG_PORT_ANY, idx), rv)

#define READ_VLAN_ING_PRI_CNG_MAP_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_ING_PRI_CNG_MAP_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_ING_PRI_CNG_MAP_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_ING_PRI_CNG_MAP_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_MAC_AUX_HASH_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_MAC_AUX_HASH_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_MAC_AUX_HASH_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_MAC_AUX_HASH_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_MAC_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_MAC_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_MAC_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_MAC_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_MAC_OR_XLATE_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_MAC_OR_XLATE_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_MAC_OR_XLATE_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_MAC_OR_XLATE_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_MAC_OR_XLATE_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_MAC_OR_XLATE_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_MAC_OR_XLATE_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_MAC_OR_XLATE_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_PROTOCOLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_PROTOCOLr, port, idx), rvp)
#define WRITE_VLAN_PROTOCOLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_PROTOCOLr, port, idx), rv)

#define READ_VLAN_PROTOCOL_DATAr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_PROTOCOL_DATAr, port, idx), rvp)
#define WRITE_VLAN_PROTOCOL_DATAr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_PROTOCOL_DATAr, port, idx), rv)

#define READ_VLAN_PROTOCOL_DATA_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_PROTOCOL_DATA_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_PROTOCOL_DATA_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_PROTOCOL_DATA_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_STG_ADDR_MASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_STG_ADDR_MASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_STG_ADDR_MASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_STG_ADDR_MASKr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_STG_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_STG_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_STG_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_STG_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_DBG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_DBG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_DEBUG_DATA_VALIDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_DEBUG_DATA_VALIDr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_DEBUG_DATA_VALIDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_DEBUG_DATA_VALIDr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_DEBUG_SENDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_DEBUG_SENDr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_DEBUG_SENDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_DEBUG_SENDr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_S10_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_S10_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_CAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_CAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_CAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_SUBNET_DATA_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_SUBNET_DATA_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_SUBNET_DATA_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_SUBNET_DATA_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_BIST_CONFIGr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_BIST_CONFIGr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_CONFIGr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_BIST_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_BIST_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_BIST_DBG_DATAr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_BIST_DBG_DATAr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_DBG_DATAr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_BIST_DEBUG_DATA_VALIDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_DEBUG_DATA_VALIDr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_BIST_DEBUG_DATA_VALIDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_DEBUG_DATA_VALIDr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_BIST_DEBUG_SENDr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_DEBUG_SENDr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_BIST_DEBUG_SENDr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_DEBUG_SENDr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_BIST_S10_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_BIST_S10_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_S10_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_BIST_S2_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_BIST_S2_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_S2_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_BIST_S3_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_BIST_S3_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_S3_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_BIST_S5_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_BIST_S5_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_S5_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_BIST_S6_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_BIST_S6_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_S6_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_BIST_S8_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_BIST_S8_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_S8_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_BIST_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_BIST_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_BIST_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_CAM_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_CAM_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_CAM_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_DATA_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_DATA_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_DATA_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_DATA_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_DATA_DBGCTRL_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_DATA_DBGCTRL_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_DATA_DBGCTRL_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_DATA_DBGCTRL_0r, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_DATA_DBGCTRL_1r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_DATA_DBGCTRL_1r, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_DATA_DBGCTRL_1r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_DATA_DBGCTRL_1r, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_DBGCTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_DBGCTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_DBGCTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_DBGCTRLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_HASH_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_HASH_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_HASH_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_HASH_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_PARITY_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_PARITY_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_PARITY_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_PARITY_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_VLAN_XLATE_PARITY_STATUSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VLAN_XLATE_PARITY_STATUSr, REG_PORT_ANY, 0), rvp)
#define WRITE_VLAN_XLATE_PARITY_STATUSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VLAN_XLATE_PARITY_STATUSr, REG_PORT_ANY, 0), rv)

#define READ_VRF_MASKr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, VRF_MASKr, REG_PORT_ANY, 0), rvp)
#define WRITE_VRF_MASKr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, VRF_MASKr, REG_PORT_ANY, 0), rv)

#define READ_WDRRCOUNTr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WDRRCOUNTr, port, idx), rvp)
#define WRITE_WDRRCOUNTr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WDRRCOUNTr, port, idx), rv)

#define READ_WFQCONFIGMOD0_P24r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P24r, REG_PORT_ANY, 0), rvp)
#define WRITE_WFQCONFIGMOD0_P24r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P24r, REG_PORT_ANY, 0), rv)

#define READ_WFQCONFIGMOD0_P25r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P25r, REG_PORT_ANY, 0), rvp)
#define WRITE_WFQCONFIGMOD0_P25r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P25r, REG_PORT_ANY, 0), rv)

#define READ_WFQCONFIGMOD0_P26r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P26r, REG_PORT_ANY, 0), rvp)
#define WRITE_WFQCONFIGMOD0_P26r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P26r, REG_PORT_ANY, 0), rv)

#define READ_WFQCONFIGMOD0_P27r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P27r, REG_PORT_ANY, 0), rvp)
#define WRITE_WFQCONFIGMOD0_P27r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P27r, REG_PORT_ANY, 0), rv)

#define READ_WFQCONFIGMOD0_P28r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P28r, REG_PORT_ANY, 0), rvp)
#define WRITE_WFQCONFIGMOD0_P28r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P28r, REG_PORT_ANY, 0), rv)

#define READ_WFQCONFIGMOD0_P0_7r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P0_7r, REG_PORT_ANY, 0), rvp)
#define WRITE_WFQCONFIGMOD0_P0_7r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P0_7r, REG_PORT_ANY, 0), rv)

#define READ_WFQCONFIGMOD0_P16_23r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P16_23r, REG_PORT_ANY, 0), rvp)
#define WRITE_WFQCONFIGMOD0_P16_23r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P16_23r, REG_PORT_ANY, 0), rv)

#define READ_WFQCONFIGMOD0_P8_15r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P8_15r, REG_PORT_ANY, 0), rvp)
#define WRITE_WFQCONFIGMOD0_P8_15r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIGMOD0_P8_15r, REG_PORT_ANY, 0), rv)

#define READ_WFQCONFIGMOD1_P24r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIGMOD1_P24r, REG_PORT_ANY, 0), rvp)
#define WRITE_WFQCONFIGMOD1_P24r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIGMOD1_P24r, REG_PORT_ANY, 0), rv)

#define READ_WFQCONFIGMOD1_P0_7r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIGMOD1_P0_7r, REG_PORT_ANY, 0), rvp)
#define WRITE_WFQCONFIGMOD1_P0_7r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIGMOD1_P0_7r, REG_PORT_ANY, 0), rv)

#define READ_WFQCONFIGMOD1_P16_23r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIGMOD1_P16_23r, REG_PORT_ANY, 0), rvp)
#define WRITE_WFQCONFIGMOD1_P16_23r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIGMOD1_P16_23r, REG_PORT_ANY, 0), rv)

#define READ_WFQCONFIGMOD1_P8_15r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIGMOD1_P8_15r, REG_PORT_ANY, 0), rvp)
#define WRITE_WFQCONFIGMOD1_P8_15r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIGMOD1_P8_15r, REG_PORT_ANY, 0), rv)

#define READ_WFQCONFIG_GENERALr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIG_GENERALr, port, 0), rvp)
#define WRITE_WFQCONFIG_GENERALr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIG_GENERALr, port, 0), rv)

#define READ_WFQCONFIG_MASKSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQCONFIG_MASKSr, port, 0), rvp)
#define WRITE_WFQCONFIG_MASKSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQCONFIG_MASKSr, port, 0), rv)

#define READ_WFQMINBWCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQMINBWCOSr, port, idx), rvp)
#define WRITE_WFQMINBWCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQMINBWCOSr, port, idx), rv)

#define READ_WFQWEIGHTSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WFQWEIGHTSr, port, 0), rvp)
#define WRITE_WFQWEIGHTSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WFQWEIGHTSr, port, 0), rv)

#define READ_WREDAVERAGINGTIMEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDAVERAGINGTIMEr, port, 0), rvp)
#define WRITE_WREDAVERAGINGTIMEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDAVERAGINGTIMEr, port, 0), rv)

#define READ_WREDAVGQSIZE_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDAVGQSIZE_CELLr, port, idx), rvp)
#define WRITE_WREDAVGQSIZE_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDAVGQSIZE_CELLr, port, idx), rv)

#define READ_WREDAVGQSIZE_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDAVGQSIZE_PACKETr, port, idx), rvp)
#define WRITE_WREDAVGQSIZE_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDAVGQSIZE_PACKETr, port, idx), rv)

#define READ_WREDCNGPARAMETERCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDCNGPARAMETERCOSr, port, idx), rvp)
#define WRITE_WREDCNGPARAMETERCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDCNGPARAMETERCOSr, port, idx), rv)

#define READ_WREDCONFIG_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDCONFIG_CELLr, port, idx), rvp)
#define WRITE_WREDCONFIG_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDCONFIG_CELLr, port, idx), rv)

#define READ_WREDCONFIG_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDCONFIG_PACKETr, port, idx), rvp)
#define WRITE_WREDCONFIG_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDCONFIG_PACKETr, port, idx), rv)

#define READ_WREDFUNCTIONr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDFUNCTIONr, REG_PORT_ANY, 0), rvp)
#define WRITE_WREDFUNCTIONr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDFUNCTIONr, REG_PORT_ANY, 0), rv)

#define READ_WREDMEMDEBUG_CFG_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDMEMDEBUG_CFG_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_WREDMEMDEBUG_CFG_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDMEMDEBUG_CFG_CELLr, REG_PORT_ANY, 0), rv)

#define READ_WREDMEMDEBUG_CFG_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDMEMDEBUG_CFG_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_WREDMEMDEBUG_CFG_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDMEMDEBUG_CFG_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_WREDMEMDEBUG_THD_0_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDMEMDEBUG_THD_0_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_WREDMEMDEBUG_THD_0_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDMEMDEBUG_THD_0_CELLr, REG_PORT_ANY, 0), rv)

#define READ_WREDMEMDEBUG_THD_0_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDMEMDEBUG_THD_0_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_WREDMEMDEBUG_THD_0_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDMEMDEBUG_THD_0_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_WREDMEMDEBUG_THD_1_CELLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDMEMDEBUG_THD_1_CELLr, REG_PORT_ANY, 0), rvp)
#define WRITE_WREDMEMDEBUG_THD_1_CELLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDMEMDEBUG_THD_1_CELLr, REG_PORT_ANY, 0), rv)

#define READ_WREDMEMDEBUG_THD_1_PACKETr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDMEMDEBUG_THD_1_PACKETr, REG_PORT_ANY, 0), rvp)
#define WRITE_WREDMEMDEBUG_THD_1_PACKETr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDMEMDEBUG_THD_1_PACKETr, REG_PORT_ANY, 0), rv)

#define READ_WREDPARAMCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDPARAMCOSr, port, idx), rvp)
#define WRITE_WREDPARAMCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDPARAMCOSr, port, idx), rv)

#define READ_WREDPARAMETERCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDPARAMETERCOSr, port, idx), rvp)
#define WRITE_WREDPARAMETERCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDPARAMETERCOSr, port, idx), rv)

#define READ_WREDPARAMREDCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDPARAMREDCOSr, port, idx), rvp)
#define WRITE_WREDPARAMREDCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDPARAMREDCOSr, port, idx), rv)

#define READ_WREDPARAMYELCOSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDPARAMYELCOSr, port, idx), rvp)
#define WRITE_WREDPARAMYELCOSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDPARAMYELCOSr, port, idx), rv)

#define READ_WREDPARAM_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDPARAM_CELLr, port, idx), rvp)
#define WRITE_WREDPARAM_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDPARAM_CELLr, port, idx), rv)

#define READ_WREDPARAM_NONTCP_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDPARAM_NONTCP_CELLr, port, idx), rvp)
#define WRITE_WREDPARAM_NONTCP_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDPARAM_NONTCP_CELLr, port, idx), rv)

#define READ_WREDPARAM_NONTCP_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDPARAM_NONTCP_PACKETr, port, idx), rvp)
#define WRITE_WREDPARAM_NONTCP_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDPARAM_NONTCP_PACKETr, port, idx), rv)

#define READ_WREDPARAM_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDPARAM_PACKETr, port, idx), rvp)
#define WRITE_WREDPARAM_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDPARAM_PACKETr, port, idx), rv)

#define READ_WREDPARAM_RED_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDPARAM_RED_CELLr, port, idx), rvp)
#define WRITE_WREDPARAM_RED_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDPARAM_RED_CELLr, port, idx), rv)

#define READ_WREDPARAM_RED_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDPARAM_RED_PACKETr, port, idx), rvp)
#define WRITE_WREDPARAM_RED_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDPARAM_RED_PACKETr, port, idx), rv)

#define READ_WREDPARAM_YELLOW_CELLr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDPARAM_YELLOW_CELLr, port, idx), rvp)
#define WRITE_WREDPARAM_YELLOW_CELLr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDPARAM_YELLOW_CELLr, port, idx), rv)

#define READ_WREDPARAM_YELLOW_PACKETr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WREDPARAM_YELLOW_PACKETr, port, idx), rvp)
#define WRITE_WREDPARAM_YELLOW_PACKETr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WREDPARAM_YELLOW_PACKETr, port, idx), rv)

#define READ_WRED_PARITY_ERROR_BITMAPr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WRED_PARITY_ERROR_BITMAPr, REG_PORT_ANY, 0), rvp)
#define WRITE_WRED_PARITY_ERROR_BITMAPr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WRED_PARITY_ERROR_BITMAPr, REG_PORT_ANY, 0), rv)

#define READ_WRED_PARITY_ERROR_INFOr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WRED_PARITY_ERROR_INFOr, REG_PORT_ANY, 0), rvp)
#define WRITE_WRED_PARITY_ERROR_INFOr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WRED_PARITY_ERROR_INFOr, REG_PORT_ANY, 0), rv)

#define READ_WRRWEIGHTSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WRRWEIGHTSr, port, 0), rvp)
#define WRITE_WRRWEIGHTSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WRRWEIGHTSr, port, 0), rv)

#define READ_WRRWEIGHT_COSr(unit, port, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, WRRWEIGHT_COSr, port, idx), rvp)
#define WRITE_WRRWEIGHT_COSr(unit, port, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, WRRWEIGHT_COSr, port, idx), rv)

#define READ_XBOD_OVRFLWr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XBOD_OVRFLWr, port, 0), rvp)
#define WRITE_XBOD_OVRFLWr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XBOD_OVRFLWr, port, 0), rv)

#define READ_XEGR_ENABLEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XEGR_ENABLEr, port, 0), rvp)
#define WRITE_XEGR_ENABLEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XEGR_ENABLEr, port, 0), rv)

#define READ_XGPORT_EXTRA_XGXS_NEWCTL_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_EXTRA_XGXS_NEWCTL_REGr, port, 0), rvp)
#define WRITE_XGPORT_EXTRA_XGXS_NEWCTL_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_EXTRA_XGXS_NEWCTL_REGr, port, 0), rv)

#define READ_XGPORT_EXTRA_XGXS_NEWSTATUS0_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_EXTRA_XGXS_NEWSTATUS0_REGr, port, 0), rvp)
#define WRITE_XGPORT_EXTRA_XGXS_NEWSTATUS0_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_EXTRA_XGXS_NEWSTATUS0_REGr, port, 0), rv)

#define READ_XGPORT_EXTRA_XGXS_NEWSTATUS1_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_EXTRA_XGXS_NEWSTATUS1_REGr, port, 0), rvp)
#define WRITE_XGPORT_EXTRA_XGXS_NEWSTATUS1_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_EXTRA_XGXS_NEWSTATUS1_REGr, port, 0), rv)

#define READ_XGPORT_EXTRA_XGXS_NEWSTATUS2_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_EXTRA_XGXS_NEWSTATUS2_REGr, port, 0), rvp)
#define WRITE_XGPORT_EXTRA_XGXS_NEWSTATUS2_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_EXTRA_XGXS_NEWSTATUS2_REGr, port, 0), rv)

#define READ_XGPORT_EXTRA_XGXS_NEWSTATUS3_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_EXTRA_XGXS_NEWSTATUS3_REGr, port, 0), rvp)
#define WRITE_XGPORT_EXTRA_XGXS_NEWSTATUS3_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_EXTRA_XGXS_NEWSTATUS3_REGr, port, 0), rv)

#define READ_XGPORT_MODE_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_MODE_REGr, port, 0), rvp)
#define WRITE_XGPORT_MODE_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_MODE_REGr, port, 0), rv)

#define READ_XGPORT_SERDES_CTLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_SERDES_CTLr, port, 0), rvp)
#define WRITE_XGPORT_SERDES_CTLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_SERDES_CTLr, port, 0), rv)

#define READ_XGPORT_XGXS_CTRLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_XGXS_CTRLr, port, 0), rvp)
#define WRITE_XGPORT_XGXS_CTRLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_XGXS_CTRLr, port, 0), rv)

#define READ_XGPORT_XGXS_NEWCTL_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_XGXS_NEWCTL_REGr, port, 0), rvp)
#define WRITE_XGPORT_XGXS_NEWCTL_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_XGXS_NEWCTL_REGr, port, 0), rv)

#define READ_XGPORT_XGXS_NEWSTATUS0_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_XGXS_NEWSTATUS0_REGr, port, 0), rvp)
#define WRITE_XGPORT_XGXS_NEWSTATUS0_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_XGXS_NEWSTATUS0_REGr, port, 0), rv)

#define READ_XGPORT_XGXS_NEWSTATUS1_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_XGXS_NEWSTATUS1_REGr, port, 0), rvp)
#define WRITE_XGPORT_XGXS_NEWSTATUS1_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_XGXS_NEWSTATUS1_REGr, port, 0), rv)

#define READ_XGPORT_XGXS_NEWSTATUS2_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_XGXS_NEWSTATUS2_REGr, port, 0), rvp)
#define WRITE_XGPORT_XGXS_NEWSTATUS2_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_XGXS_NEWSTATUS2_REGr, port, 0), rv)

#define READ_XGPORT_XGXS_NEWSTATUS3_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_XGXS_NEWSTATUS3_REGr, port, 0), rvp)
#define WRITE_XGPORT_XGXS_NEWSTATUS3_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_XGXS_NEWSTATUS3_REGr, port, 0), rv)

#define READ_XGPORT_XGXS_STATr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XGPORT_XGXS_STATr, port, 0), rvp)
#define WRITE_XGPORT_XGXS_STATr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XGPORT_XGXS_STATr, port, 0), rv)

#define READ_XHBADE2Er(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XHBADE2Er, REG_PORT_ANY, 0), rvp)
#define WRITE_XHBADE2Er(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XHBADE2Er, REG_PORT_ANY, 0), rv)

#define READ_XHOLD0r(unit, port, rvp) \
	soc_reg_read(unit, XHOLD0r, soc_reg_addr(unit, XHOLD0r, port, 0), rvp)
#define WRITE_XHOLD0r(unit, port, rv) \
	soc_reg_write(unit, XHOLD0r, soc_reg_addr(unit, XHOLD0r, port, 0), rv)

#define READ_XHOLD1r(unit, port, rvp) \
	soc_reg_read(unit, XHOLD1r, soc_reg_addr(unit, XHOLD1r, port, 0), rvp)
#define WRITE_XHOLD1r(unit, port, rv) \
	soc_reg_write(unit, XHOLD1r, soc_reg_addr(unit, XHOLD1r, port, 0), rv)

#define READ_XHOLD2r(unit, port, rvp) \
	soc_reg_read(unit, XHOLD2r, soc_reg_addr(unit, XHOLD2r, port, 0), rvp)
#define WRITE_XHOLD2r(unit, port, rv) \
	soc_reg_write(unit, XHOLD2r, soc_reg_addr(unit, XHOLD2r, port, 0), rv)

#define READ_XHOL_D0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XHOL_D0r, port, 0), rvp)
#define WRITE_XHOL_D0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XHOL_D0r, port, 0), rv)

#define READ_XHOL_D1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XHOL_D1r, port, 0), rvp)
#define WRITE_XHOL_D1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XHOL_D1r, port, 0), rv)

#define READ_XHOL_D2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XHOL_D2r, port, 0), rvp)
#define WRITE_XHOL_D2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XHOL_D2r, port, 0), rv)

#define READ_XHOL_D3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XHOL_D3r, port, 0), rvp)
#define WRITE_XHOL_D3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XHOL_D3r, port, 0), rv)

#define READ_XHOL_MH0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XHOL_MH0r, port, 0), rvp)
#define WRITE_XHOL_MH0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XHOL_MH0r, port, 0), rv)

#define READ_XHOL_MH1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XHOL_MH1r, port, 0), rvp)
#define WRITE_XHOL_MH1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XHOL_MH1r, port, 0), rv)

#define READ_XHOL_MH2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XHOL_MH2r, port, 0), rvp)
#define WRITE_XHOL_MH2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XHOL_MH2r, port, 0), rv)

#define READ_XHOL_MH3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XHOL_MH3r, port, 0), rvp)
#define WRITE_XHOL_MH3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XHOL_MH3r, port, 0), rv)

#define READ_XH_E2E_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XH_E2E_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_XH_E2E_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XH_E2E_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_XIBP_D0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XIBP_D0r, port, 0), rvp)
#define WRITE_XIBP_D0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XIBP_D0r, port, 0), rv)

#define READ_XIBP_D1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XIBP_D1r, port, 0), rvp)
#define WRITE_XIBP_D1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XIBP_D1r, port, 0), rv)

#define READ_XIBP_D2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XIBP_D2r, port, 0), rvp)
#define WRITE_XIBP_D2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XIBP_D2r, port, 0), rv)

#define READ_XIBP_D3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XIBP_D3r, port, 0), rvp)
#define WRITE_XIBP_D3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XIBP_D3r, port, 0), rv)

#define READ_XIBP_MH0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XIBP_MH0r, port, 0), rvp)
#define WRITE_XIBP_MH0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XIBP_MH0r, port, 0), rv)

#define READ_XIBP_MH1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XIBP_MH1r, port, 0), rvp)
#define WRITE_XIBP_MH1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XIBP_MH1r, port, 0), rv)

#define READ_XIBP_MH2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XIBP_MH2r, port, 0), rvp)
#define WRITE_XIBP_MH2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XIBP_MH2r, port, 0), rv)

#define READ_XIBP_MH3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XIBP_MH3r, port, 0), rvp)
#define WRITE_XIBP_MH3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XIBP_MH3r, port, 0), rv)

#define READ_XIMBPr(unit, port, rvp) \
	soc_reg_read(unit, XIMBPr, soc_reg_addr(unit, XIMBPr, port, 0), rvp)
#define WRITE_XIMBPr(unit, port, rv) \
	soc_reg_write(unit, XIMBPr, soc_reg_addr(unit, XIMBPr, port, 0), rv)

#define READ_XIMRPr(unit, port, rvp) \
	soc_reg_read(unit, XIMRPr, soc_reg_addr(unit, XIMRPr, port, 0), rvp)
#define WRITE_XIMRPr(unit, port, rv) \
	soc_reg_write(unit, XIMRPr, soc_reg_addr(unit, XIMRPr, port, 0), rv)

#define READ_XLBADE2Er(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XLBADE2Er, REG_PORT_ANY, 0), rvp)
#define WRITE_XLBADE2Er(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XLBADE2Er, REG_PORT_ANY, 0), rv)

#define READ_XL_E2E_CONTROLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XL_E2E_CONTROLr, REG_PORT_ANY, 0), rvp)
#define WRITE_XL_E2E_CONTROLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XL_E2E_CONTROLr, REG_PORT_ANY, 0), rv)

#define READ_XMODIDr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XMODIDr, port, 0), rvp)
#define WRITE_XMODIDr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XMODIDr, port, 0), rv)

#define READ_XMODID_ENr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XMODID_ENr, port, 0), rvp)
#define WRITE_XMODID_ENr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XMODID_ENr, port, 0), rv)

#define READ_XPAUSE_CTRL_RX_DA_LSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_CTRL_RX_DA_LSr, REG_PORT_ANY, 0), rvp)
#define WRITE_XPAUSE_CTRL_RX_DA_LSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_CTRL_RX_DA_LSr, REG_PORT_ANY, 0), rv)

#define READ_XPAUSE_CTRL_RX_DA_MSr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_CTRL_RX_DA_MSr, REG_PORT_ANY, 0), rvp)
#define WRITE_XPAUSE_CTRL_RX_DA_MSr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_CTRL_RX_DA_MSr, REG_PORT_ANY, 0), rv)

#define READ_XPAUSE_CTRL_RX_LENGTH_TYPEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_CTRL_RX_LENGTH_TYPEr, REG_PORT_ANY, 0), rvp)
#define WRITE_XPAUSE_CTRL_RX_LENGTH_TYPEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_CTRL_RX_LENGTH_TYPEr, REG_PORT_ANY, 0), rv)

#define READ_XPAUSE_CTRL_RX_OPCODEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_CTRL_RX_OPCODEr, REG_PORT_ANY, 0), rvp)
#define WRITE_XPAUSE_CTRL_RX_OPCODEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_CTRL_RX_OPCODEr, REG_PORT_ANY, 0), rv)

#define READ_XPAUSE_D0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_D0r, port, 0), rvp)
#define WRITE_XPAUSE_D0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_D0r, port, 0), rv)

#define READ_XPAUSE_D1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_D1r, port, 0), rvp)
#define WRITE_XPAUSE_D1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_D1r, port, 0), rv)

#define READ_XPAUSE_D2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_D2r, port, 0), rvp)
#define WRITE_XPAUSE_D2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_D2r, port, 0), rv)

#define READ_XPAUSE_D3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_D3r, port, 0), rvp)
#define WRITE_XPAUSE_D3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_D3r, port, 0), rv)

#define READ_XPAUSE_MH0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_MH0r, port, 0), rvp)
#define WRITE_XPAUSE_MH0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_MH0r, port, 0), rv)

#define READ_XPAUSE_MH1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_MH1r, port, 0), rvp)
#define WRITE_XPAUSE_MH1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_MH1r, port, 0), rv)

#define READ_XPAUSE_MH2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_MH2r, port, 0), rvp)
#define WRITE_XPAUSE_MH2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_MH2r, port, 0), rv)

#define READ_XPAUSE_MH3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_MH3r, port, 0), rvp)
#define WRITE_XPAUSE_MH3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_MH3r, port, 0), rv)

#define READ_XPAUSE_RX_DA_LSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_RX_DA_LSr, port, 0), rvp)
#define WRITE_XPAUSE_RX_DA_LSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_RX_DA_LSr, port, 0), rv)

#define READ_XPAUSE_RX_DA_MSr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_RX_DA_MSr, port, 0), rvp)
#define WRITE_XPAUSE_RX_DA_MSr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_RX_DA_MSr, port, 0), rv)

#define READ_XPAUSE_RX_LENGTH_TYPEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_RX_LENGTH_TYPEr, port, 0), rvp)
#define WRITE_XPAUSE_RX_LENGTH_TYPEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_RX_LENGTH_TYPEr, port, 0), rv)

#define READ_XPAUSE_RX_OPCODEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_RX_OPCODEr, port, 0), rvp)
#define WRITE_XPAUSE_RX_OPCODEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_RX_OPCODEr, port, 0), rv)

#define READ_XPAUSE_TX_PKT_XOFF_VALr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_TX_PKT_XOFF_VALr, port, 0), rvp)
#define WRITE_XPAUSE_TX_PKT_XOFF_VALr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_TX_PKT_XOFF_VALr, port, 0), rv)

#define READ_XPAUSE_WATCHDOG_INIT_VALr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_WATCHDOG_INIT_VALr, port, 0), rvp)
#define WRITE_XPAUSE_WATCHDOG_INIT_VALr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_WATCHDOG_INIT_VALr, port, 0), rv)

#define READ_XPAUSE_WATCHDOG_THRESHr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPAUSE_WATCHDOG_THRESHr, port, 0), rvp)
#define WRITE_XPAUSE_WATCHDOG_THRESHr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPAUSE_WATCHDOG_THRESHr, port, 0), rv)

#define READ_XPC_PARERRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_PARERRr, port, 0), rvp)
#define WRITE_XPC_PARERRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_PARERRr, port, 0), rv)

#define READ_XPC_PARERR_ADDR0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_PARERR_ADDR0r, port, 0), rvp)
#define WRITE_XPC_PARERR_ADDR0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_PARERR_ADDR0r, port, 0), rv)

#define READ_XPC_PARERR_ADDR1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_PARERR_ADDR1r, port, 0), rvp)
#define WRITE_XPC_PARERR_ADDR1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_PARERR_ADDR1r, port, 0), rv)

#define READ_XPC_PARERR_ADDR2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_PARERR_ADDR2r, port, 0), rvp)
#define WRITE_XPC_PARERR_ADDR2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_PARERR_ADDR2r, port, 0), rv)

#define READ_XPC_PARERR_ADDR3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_PARERR_ADDR3r, port, 0), rvp)
#define WRITE_XPC_PARERR_ADDR3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_PARERR_ADDR3r, port, 0), rv)

#define READ_XPC_PARERR_ADDR4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_PARERR_ADDR4r, port, 0), rvp)
#define WRITE_XPC_PARERR_ADDR4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_PARERR_ADDR4r, port, 0), rv)

#define READ_XPC_PARERR_ADDR5r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_PARERR_ADDR5r, port, 0), rvp)
#define WRITE_XPC_PARERR_ADDR5r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_PARERR_ADDR5r, port, 0), rv)

#define READ_XPC_PARERR_ADDR6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_PARERR_ADDR6r, port, 0), rvp)
#define WRITE_XPC_PARERR_ADDR6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_PARERR_ADDR6r, port, 0), rv)

#define READ_XPC_PARERR_ADDR7r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_PARERR_ADDR7r, port, 0), rvp)
#define WRITE_XPC_PARERR_ADDR7r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_PARERR_ADDR7r, port, 0), rv)

#define READ_XPC_PARERR_ADDR8r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_PARERR_ADDR8r, port, 0), rvp)
#define WRITE_XPC_PARERR_ADDR8r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_PARERR_ADDR8r, port, 0), rv)

#define READ_XPC_PARERR_ADDR9r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_PARERR_ADDR9r, port, 0), rvp)
#define WRITE_XPC_PARERR_ADDR9r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_PARERR_ADDR9r, port, 0), rv)

#define READ_XPC_PARERR_ADDR10r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_PARERR_ADDR10r, port, 0), rvp)
#define WRITE_XPC_PARERR_ADDR10r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_PARERR_ADDR10r, port, 0), rv)

#define READ_XPC_PARITY_DIAGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_PARITY_DIAGr, port, 0), rvp)
#define WRITE_XPC_PARITY_DIAGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_PARITY_DIAGr, port, 0), rv)

#define READ_XPC_SPARE_REG0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_SPARE_REG0r, port, 0), rvp)
#define WRITE_XPC_SPARE_REG0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_SPARE_REG0r, port, 0), rv)

#define READ_XPC_SPARE_REG1r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_SPARE_REG1r, port, 0), rvp)
#define WRITE_XPC_SPARE_REG1r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_SPARE_REG1r, port, 0), rv)

#define READ_XPC_SPARE_REG2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_SPARE_REG2r, port, 0), rvp)
#define WRITE_XPC_SPARE_REG2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_SPARE_REG2r, port, 0), rv)

#define READ_XPC_SPARE_REG3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPC_SPARE_REG3r, port, 0), rvp)
#define WRITE_XPC_SPARE_REG3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPC_SPARE_REG3r, port, 0), rv)

#define READ_XPDISCr(unit, port, rvp) \
	soc_reg_read(unit, XPDISCr, soc_reg_addr(unit, XPDISCr, port, 0), rvp)
#define WRITE_XPDISCr(unit, port, rv) \
	soc_reg_write(unit, XPDISCr, soc_reg_addr(unit, XPDISCr, port, 0), rv)

#define READ_XPORT_CONFIGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPORT_CONFIGr, port, 0), rvp)
#define WRITE_XPORT_CONFIGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPORT_CONFIGr, port, 0), rv)

#define READ_XPORT_MODE_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPORT_MODE_REGr, port, 0), rvp)
#define WRITE_XPORT_MODE_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPORT_MODE_REGr, port, 0), rv)

#define READ_XPORT_TO_MMU_BKPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPORT_TO_MMU_BKPr, port, 0), rvp)
#define WRITE_XPORT_TO_MMU_BKPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPORT_TO_MMU_BKPr, port, 0), rv)

#define READ_XPORT_TO_MMU_BKP_HGr(unit, idx, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPORT_TO_MMU_BKP_HGr, REG_PORT_ANY, idx), rvp)
#define WRITE_XPORT_TO_MMU_BKP_HGr(unit, idx, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPORT_TO_MMU_BKP_HGr, REG_PORT_ANY, idx), rv)

#define READ_XPORT_XGXS_NEWCTL_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPORT_XGXS_NEWCTL_REGr, port, 0), rvp)
#define WRITE_XPORT_XGXS_NEWCTL_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPORT_XGXS_NEWCTL_REGr, port, 0), rv)

#define READ_XPORT_XGXS_NEWSTATUS0_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPORT_XGXS_NEWSTATUS0_REGr, port, 0), rvp)
#define WRITE_XPORT_XGXS_NEWSTATUS0_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPORT_XGXS_NEWSTATUS0_REGr, port, 0), rv)

#define READ_XPORT_XGXS_NEWSTATUS1_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPORT_XGXS_NEWSTATUS1_REGr, port, 0), rvp)
#define WRITE_XPORT_XGXS_NEWSTATUS1_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPORT_XGXS_NEWSTATUS1_REGr, port, 0), rv)

#define READ_XPORT_XGXS_NEWSTATUS2_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPORT_XGXS_NEWSTATUS2_REGr, port, 0), rvp)
#define WRITE_XPORT_XGXS_NEWSTATUS2_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPORT_XGXS_NEWSTATUS2_REGr, port, 0), rv)

#define READ_XPORT_XGXS_NEWSTATUS3_REGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XPORT_XGXS_NEWSTATUS3_REGr, port, 0), rvp)
#define WRITE_XPORT_XGXS_NEWSTATUS3_REGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XPORT_XGXS_NEWSTATUS3_REGr, port, 0), rv)

#define READ_XP_EGR_PKT_DROP_CTLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XP_EGR_PKT_DROP_CTLr, port, 0), rvp)
#define WRITE_XP_EGR_PKT_DROP_CTLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XP_EGR_PKT_DROP_CTLr, port, 0), rv)

#define READ_XP_XBODE_CELL_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XP_XBODE_CELL_CNTr, port, 0), rvp)
#define WRITE_XP_XBODE_CELL_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XP_XBODE_CELL_CNTr, port, 0), rv)

#define READ_XP_XBODE_CELL_REQ_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XP_XBODE_CELL_REQ_CNTr, port, 0), rvp)
#define WRITE_XP_XBODE_CELL_REQ_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XP_XBODE_CELL_REQ_CNTr, port, 0), rv)

#define READ_XQCOSARBSELr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQCOSARBSELr, port, 0), rvp)
#define WRITE_XQCOSARBSELr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQCOSARBSELr, port, 0), rv)

#define READ_XQCOSENTRIES0_3r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQCOSENTRIES0_3r, port, 0), rvp)
#define WRITE_XQCOSENTRIES0_3r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQCOSENTRIES0_3r, port, 0), rv)

#define READ_XQCOSENTRIES4_7r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQCOSENTRIES4_7r, port, 0), rvp)
#define WRITE_XQCOSENTRIES4_7r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQCOSENTRIES4_7r, port, 0), rv)

#define READ_XQCOSPTRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQCOSPTRr, port, 0), rvp)
#define WRITE_XQCOSPTRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQCOSPTRr, port, 0), rv)

#define READ_XQCOSRANGE1_0r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQCOSRANGE1_0r, port, 0), rvp)
#define WRITE_XQCOSRANGE1_0r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQCOSRANGE1_0r, port, 0), rv)

#define READ_XQCOSRANGE3_0r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQCOSRANGE3_0r, REG_PORT_ANY, 0), rvp)
#define WRITE_XQCOSRANGE3_0r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQCOSRANGE3_0r, REG_PORT_ANY, 0), rv)

#define READ_XQCOSRANGE3_2r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQCOSRANGE3_2r, port, 0), rvp)
#define WRITE_XQCOSRANGE3_2r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQCOSRANGE3_2r, port, 0), rv)

#define READ_XQCOSRANGE5_4r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQCOSRANGE5_4r, port, 0), rvp)
#define WRITE_XQCOSRANGE5_4r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQCOSRANGE5_4r, port, 0), rv)

#define READ_XQCOSRANGE7_4r(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQCOSRANGE7_4r, REG_PORT_ANY, 0), rvp)
#define WRITE_XQCOSRANGE7_4r(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQCOSRANGE7_4r, REG_PORT_ANY, 0), rv)

#define READ_XQCOSRANGE7_6r(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQCOSRANGE7_6r, port, 0), rvp)
#define WRITE_XQCOSRANGE7_6r(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQCOSRANGE7_6r, port, 0), rv)

#define READ_XQEMPTYr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQEMPTYr, port, 0), rvp)
#define WRITE_XQEMPTYr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQEMPTYr, port, 0), rv)

#define READ_XQMEMDEBUGr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQMEMDEBUGr, port, 0), rvp)
#define WRITE_XQMEMDEBUGr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQMEMDEBUGr, port, 0), rv)

#define READ_XQPARITYr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQPARITYr, REG_PORT_ANY, 0), rvp)
#define WRITE_XQPARITYr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQPARITYr, REG_PORT_ANY, 0), rv)

#define READ_XQPARITYERRORPBMr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQPARITYERRORPBMr, REG_PORT_ANY, 0), rvp)
#define WRITE_XQPARITYERRORPBMr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQPARITYERRORPBMr, REG_PORT_ANY, 0), rv)

#define READ_XQPARITYERRORPBM_HIr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQPARITYERRORPBM_HIr, REG_PORT_ANY, 0), rvp)
#define WRITE_XQPARITYERRORPBM_HIr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQPARITYERRORPBM_HIr, REG_PORT_ANY, 0), rv)

#define READ_XQPARITYERRORPTRr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQPARITYERRORPTRr, port, 0), rvp)
#define WRITE_XQPARITYERRORPTRr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQPARITYERRORPTRr, port, 0), rv)

#define READ_XQREADPOINTERr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQREADPOINTERr, port, 0), rvp)
#define WRITE_XQREADPOINTERr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQREADPOINTERr, port, 0), rv)

#define READ_XQ_CTRLr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQ_CTRLr, REG_PORT_ANY, 0), rvp)
#define WRITE_XQ_CTRLr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQ_CTRLr, REG_PORT_ANY, 0), rv)

#define READ_XQ_MEM_FUSEr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQ_MEM_FUSEr, REG_PORT_ANY, 0), rvp)
#define WRITE_XQ_MEM_FUSEr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQ_MEM_FUSEr, REG_PORT_ANY, 0), rv)

#define READ_XQ_MISCr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQ_MISCr, REG_PORT_ANY, 0), rvp)
#define WRITE_XQ_MISCr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQ_MISCr, REG_PORT_ANY, 0), rv)

#define READ_XQ_PARITYr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XQ_PARITYr, port, 0), rvp)
#define WRITE_XQ_PARITYr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XQ_PARITYr, port, 0), rv)

#define READ_XRDISCr(unit, port, rvp) \
	soc_reg_read(unit, XRDISCr, soc_reg_addr(unit, XRDISCr, port, 0), rvp)
#define WRITE_XRDISCr(unit, port, rv) \
	soc_reg_write(unit, XRDISCr, soc_reg_addr(unit, XRDISCr, port, 0), rv)

#define READ_XRDROPr(unit, port, rvp) \
	soc_reg_read(unit, XRDROPr, soc_reg_addr(unit, XRDROPr, port, 0), rvp)
#define WRITE_XRDROPr(unit, port, rv) \
	soc_reg_write(unit, XRDROPr, soc_reg_addr(unit, XRDROPr, port, 0), rv)

#define READ_XRFILDRr(unit, port, rvp) \
	soc_reg_read(unit, XRFILDRr, soc_reg_addr(unit, XRFILDRr, port, 0), rvp)
#define WRITE_XRFILDRr(unit, port, rv) \
	soc_reg_write(unit, XRFILDRr, soc_reg_addr(unit, XRFILDRr, port, 0), rv)

#define READ_XRIMDRr(unit, port, rvp) \
	soc_reg_read(unit, XRIMDRr, soc_reg_addr(unit, XRIMDRr, port, 0), rvp)
#define WRITE_XRIMDRr(unit, port, rv) \
	soc_reg_write(unit, XRIMDRr, soc_reg_addr(unit, XRIMDRr, port, 0), rv)

#define READ_XRIPCr(unit, port, rvp) \
	soc_reg_read(unit, XRIPCr, soc_reg_addr(unit, XRIPCr, port, 0), rvp)
#define WRITE_XRIPCr(unit, port, rv) \
	soc_reg_write(unit, XRIPCr, soc_reg_addr(unit, XRIPCr, port, 0), rv)

#define READ_XRIPDr(unit, port, rvp) \
	soc_reg_read(unit, XRIPDr, soc_reg_addr(unit, XRIPDr, port, 0), rvp)
#define WRITE_XRIPDr(unit, port, rv) \
	soc_reg_write(unit, XRIPDr, soc_reg_addr(unit, XRIPDr, port, 0), rv)

#define READ_XRIPHEr(unit, port, rvp) \
	soc_reg_read(unit, XRIPHEr, soc_reg_addr(unit, XRIPHEr, port, 0), rvp)
#define WRITE_XRIPHEr(unit, port, rv) \
	soc_reg_write(unit, XRIPHEr, soc_reg_addr(unit, XRIPHEr, port, 0), rv)

#define READ_XRITPIDr(unit, port, rvp) \
	soc_reg_read(unit, XRITPIDr, soc_reg_addr(unit, XRITPIDr, port, 0), rvp)
#define WRITE_XRITPIDr(unit, port, rv) \
	soc_reg_write(unit, XRITPIDr, soc_reg_addr(unit, XRITPIDr, port, 0), rv)

#define READ_XRPORTDr(unit, port, rvp) \
	soc_reg_read(unit, XRPORTDr, soc_reg_addr(unit, XRPORTDr, port, 0), rvp)
#define WRITE_XRPORTDr(unit, port, rv) \
	soc_reg_write(unit, XRPORTDr, soc_reg_addr(unit, XRPORTDr, port, 0), rv)

#define READ_XRSTPIDr(unit, port, rvp) \
	soc_reg_read(unit, XRSTPIDr, soc_reg_addr(unit, XRSTPIDr, port, 0), rvp)
#define WRITE_XRSTPIDr(unit, port, rv) \
	soc_reg_write(unit, XRSTPIDr, soc_reg_addr(unit, XRSTPIDr, port, 0), rv)

#define READ_XRTPIDr(unit, port, rvp) \
	soc_reg_read(unit, XRTPIDr, soc_reg_addr(unit, XRTPIDr, port, 0), rvp)
#define WRITE_XRTPIDr(unit, port, rv) \
	soc_reg_write(unit, XRTPIDr, soc_reg_addr(unit, XRTPIDr, port, 0), rv)

#define READ_XRUCr(unit, port, rvp) \
	soc_reg_read(unit, XRUCr, soc_reg_addr(unit, XRUCr, port, 0), rvp)
#define WRITE_XRUCr(unit, port, rv) \
	soc_reg_write(unit, XRUCr, soc_reg_addr(unit, XRUCr, port, 0), rv)

#define READ_XRV0r(unit, port, rvp) \
	soc_reg_read(unit, XRV0r, soc_reg_addr(unit, XRV0r, port, 0), rvp)
#define WRITE_XRV0r(unit, port, rv) \
	soc_reg_write(unit, XRV0r, soc_reg_addr(unit, XRV0r, port, 0), rv)

#define READ_XRV1r(unit, port, rvp) \
	soc_reg_read(unit, XRV1r, soc_reg_addr(unit, XRV1r, port, 0), rvp)
#define WRITE_XRV1r(unit, port, rv) \
	soc_reg_write(unit, XRV1r, soc_reg_addr(unit, XRV1r, port, 0), rv)

#define READ_XTABRTr(unit, port, rvp) \
	soc_reg_read(unit, XTABRTr, soc_reg_addr(unit, XTABRTr, port, 0), rvp)
#define WRITE_XTABRTr(unit, port, rv) \
	soc_reg_write(unit, XTABRTr, soc_reg_addr(unit, XTABRTr, port, 0), rv)

#define READ_XTAGEr(unit, port, rvp) \
	soc_reg_read(unit, XTAGEr, soc_reg_addr(unit, XTAGEr, port, 0), rvp)
#define WRITE_XTAGEr(unit, port, rv) \
	soc_reg_write(unit, XTAGEr, soc_reg_addr(unit, XTAGEr, port, 0), rv)

#define READ_XTCEr(unit, port, rvp) \
	soc_reg_read(unit, XTCEr, soc_reg_addr(unit, XTCEr, port, 0), rvp)
#define WRITE_XTCEr(unit, port, rv) \
	soc_reg_write(unit, XTCEr, soc_reg_addr(unit, XTCEr, port, 0), rv)

#define READ_XTCFIDRr(unit, port, rvp) \
	soc_reg_read(unit, XTCFIDRr, soc_reg_addr(unit, XTCFIDRr, port, 0), rvp)
#define WRITE_XTCFIDRr(unit, port, rv) \
	soc_reg_write(unit, XTCFIDRr, soc_reg_addr(unit, XTCFIDRr, port, 0), rv)

#define READ_XTHOLr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XTHOLr, port, 0), rvp)
#define WRITE_XTHOLr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XTHOLr, port, 0), rv)

#define READ_XTIBPr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XTIBPr, port, 0), rvp)
#define WRITE_XTIBPr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XTIBPr, port, 0), rv)

#define READ_XTIMDRr(unit, port, rvp) \
	soc_reg_read(unit, XTIMDRr, soc_reg_addr(unit, XTIMDRr, port, 0), rvp)
#define WRITE_XTIMDRr(unit, port, rv) \
	soc_reg_write(unit, XTIMDRr, soc_reg_addr(unit, XTIMDRr, port, 0), rv)

#define READ_XTIMTLDr(unit, port, rvp) \
	soc_reg_read(unit, XTIMTLDr, soc_reg_addr(unit, XTIMTLDr, port, 0), rvp)
#define WRITE_XTIMTLDr(unit, port, rv) \
	soc_reg_write(unit, XTIMTLDr, soc_reg_addr(unit, XTIMTLDr, port, 0), rv)

#define READ_XTIPr(unit, port, rvp) \
	soc_reg_read(unit, XTIPr, soc_reg_addr(unit, XTIPr, port, 0), rvp)
#define WRITE_XTIPr(unit, port, rv) \
	soc_reg_write(unit, XTIPr, soc_reg_addr(unit, XTIPr, port, 0), rv)

#define READ_XTIPAGEr(unit, port, rvp) \
	soc_reg_read(unit, XTIPAGEr, soc_reg_addr(unit, XTIPAGEr, port, 0), rvp)
#define WRITE_XTIPAGEr(unit, port, rv) \
	soc_reg_write(unit, XTIPAGEr, soc_reg_addr(unit, XTIPAGEr, port, 0), rv)

#define READ_XTIPDr(unit, port, rvp) \
	soc_reg_read(unit, XTIPDr, soc_reg_addr(unit, XTIPDr, port, 0), rvp)
#define WRITE_XTIPDr(unit, port, rv) \
	soc_reg_write(unit, XTIPDr, soc_reg_addr(unit, XTIPDr, port, 0), rv)

#define READ_XTIPREPr(unit, port, rvp) \
	soc_reg_read(unit, XTIPREPr, soc_reg_addr(unit, XTIPREPr, port, 0), rvp)
#define WRITE_XTIPREPr(unit, port, rv) \
	soc_reg_write(unit, XTIPREPr, soc_reg_addr(unit, XTIPREPr, port, 0), rv)

#define READ_XTMSTDRr(unit, port, rvp) \
	soc_reg_read(unit, XTMSTDRr, soc_reg_addr(unit, XTMSTDRr, port, 0), rvp)
#define WRITE_XTMSTDRr(unit, port, rv) \
	soc_reg_write(unit, XTMSTDRr, soc_reg_addr(unit, XTMSTDRr, port, 0), rv)

#define READ_XTPSEr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, XTPSEr, port, 0), rvp)
#define WRITE_XTPSEr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, XTPSEr, port, 0), rv)

#define READ_XTSTPIDr(unit, port, rvp) \
	soc_reg_read(unit, XTSTPIDr, soc_reg_addr(unit, XTSTPIDr, port, 0), rvp)
#define WRITE_XTSTPIDr(unit, port, rv) \
	soc_reg_write(unit, XTSTPIDr, soc_reg_addr(unit, XTSTPIDr, port, 0), rv)

#define READ_XTV0r(unit, port, rvp) \
	soc_reg_read(unit, XTV0r, soc_reg_addr(unit, XTV0r, port, 0), rvp)
#define WRITE_XTV0r(unit, port, rv) \
	soc_reg_write(unit, XTV0r, soc_reg_addr(unit, XTV0r, port, 0), rv)

#define READ_XTV1r(unit, port, rvp) \
	soc_reg_read(unit, XTV1r, soc_reg_addr(unit, XTV1r, port, 0), rvp)
#define WRITE_XTV1r(unit, port, rv) \
	soc_reg_write(unit, XTV1r, soc_reg_addr(unit, XTV1r, port, 0), rv)

#define READ_XTVLANr(unit, port, rvp) \
	soc_reg_read(unit, XTVLANr, soc_reg_addr(unit, XTVLANr, port, 0), rvp)
#define WRITE_XTVLANr(unit, port, rv) \
	soc_reg_write(unit, XTVLANr, soc_reg_addr(unit, XTVLANr, port, 0), rv)

#define READ_X_CPU_SLOT_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, X_CPU_SLOT_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_X_CPU_SLOT_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, X_CPU_SLOT_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_X_TDM_ENr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, X_TDM_ENr, REG_PORT_ANY, 0), rvp)
#define WRITE_X_TDM_ENr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, X_TDM_ENr, REG_PORT_ANY, 0), rv)

#define READ_YELLOW_CNG_DROP_CNTr(unit, port, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, YELLOW_CNG_DROP_CNTr, port, 0), rvp)
#define WRITE_YELLOW_CNG_DROP_CNTr(unit, port, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, YELLOW_CNG_DROP_CNTr, port, 0), rv)

#define READ_Y_CPU_SLOT_COUNTr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, Y_CPU_SLOT_COUNTr, REG_PORT_ANY, 0), rvp)
#define WRITE_Y_CPU_SLOT_COUNTr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, Y_CPU_SLOT_COUNTr, REG_PORT_ANY, 0), rv)

#define READ_Y_TDM_ENr(unit, rvp) \
	soc_reg32_read(unit, soc_reg_addr(unit, Y_TDM_ENr, REG_PORT_ANY, 0), rvp)
#define WRITE_Y_TDM_ENr(unit, rv) \
	soc_reg32_write(unit, soc_reg_addr(unit, Y_TDM_ENr, REG_PORT_ANY, 0), rv)



/*****************************************************************************
 **
 **	MEMORY READ and WRITE MACROS
 **
 *****************************************************************************/

#define READ_ALTERNATE_EMIRROR_BITMAPm(unit, blk, index, data) \
	soc_mem_read(unit, ALTERNATE_EMIRROR_BITMAPm, blk, index, data)
#define WRITE_ALTERNATE_EMIRROR_BITMAPm(unit, blk, index, data) \
	soc_mem_write(unit, ALTERNATE_EMIRROR_BITMAPm, blk, index, data)

#define READ_ARB_TDM_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, ARB_TDM_TABLEm, blk, index, data)
#define WRITE_ARB_TDM_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, ARB_TDM_TABLEm, blk, index, data)

#define READ_ARLm(unit, blk, index, data) \
	soc_mem_read(unit, ARLm, blk, index, data)
#define WRITE_ARLm(unit, blk, index, data) \
	soc_mem_write(unit, ARLm, blk, index, data)

#define READ_ARL_CNTm(unit, blk, index, data) \
	soc_mem_read(unit, ARL_CNTm, blk, index, data)
#define WRITE_ARL_CNTm(unit, blk, index, data) \
	soc_mem_write(unit, ARL_CNTm, blk, index, data)

#define READ_BSAFE_CMD_DATA_INm(unit, blk, index, data) \
	soc_mem_read(unit, BSAFE_CMD_DATA_INm, blk, index, data)
#define WRITE_BSAFE_CMD_DATA_INm(unit, blk, index, data) \
	soc_mem_write(unit, BSAFE_CMD_DATA_INm, blk, index, data)

#define READ_BSAFE_CMD_DATA_OUTm(unit, blk, index, data) \
	soc_mem_read(unit, BSAFE_CMD_DATA_OUTm, blk, index, data)
#define WRITE_BSAFE_CMD_DATA_OUTm(unit, blk, index, data) \
	soc_mem_write(unit, BSAFE_CMD_DATA_OUTm, blk, index, data)

#define READ_C0_CELLm(unit, blk, index, data) \
	soc_mem_read(unit, C0_CELLm, blk, index, data)
#define WRITE_C0_CELLm(unit, blk, index, data) \
	soc_mem_write(unit, C0_CELLm, blk, index, data)

#define READ_C0_CPU_RQm(unit, blk, index, data) \
	soc_mem_read(unit, C0_CPU_RQm, blk, index, data)
#define WRITE_C0_CPU_RQm(unit, blk, index, data) \
	soc_mem_write(unit, C0_CPU_RQm, blk, index, data)

#define READ_C0_CPU_WQm(unit, blk, index, data) \
	soc_mem_read(unit, C0_CPU_WQm, blk, index, data)
#define WRITE_C0_CPU_WQm(unit, blk, index, data) \
	soc_mem_write(unit, C0_CPU_WQm, blk, index, data)

#define READ_C0_RQm(unit, blk, index, data) \
	soc_mem_read(unit, C0_RQm, blk, index, data)
#define WRITE_C0_RQm(unit, blk, index, data) \
	soc_mem_write(unit, C0_RQm, blk, index, data)

#define READ_C0_WQm(unit, blk, index, data) \
	soc_mem_read(unit, C0_WQm, blk, index, data)
#define WRITE_C0_WQm(unit, blk, index, data) \
	soc_mem_write(unit, C0_WQm, blk, index, data)

#define READ_C1_CELLm(unit, blk, index, data) \
	soc_mem_read(unit, C1_CELLm, blk, index, data)
#define WRITE_C1_CELLm(unit, blk, index, data) \
	soc_mem_write(unit, C1_CELLm, blk, index, data)

#define READ_C1_CPU_RQm(unit, blk, index, data) \
	soc_mem_read(unit, C1_CPU_RQm, blk, index, data)
#define WRITE_C1_CPU_RQm(unit, blk, index, data) \
	soc_mem_write(unit, C1_CPU_RQm, blk, index, data)

#define READ_C1_CPU_WQm(unit, blk, index, data) \
	soc_mem_read(unit, C1_CPU_WQm, blk, index, data)
#define WRITE_C1_CPU_WQm(unit, blk, index, data) \
	soc_mem_write(unit, C1_CPU_WQm, blk, index, data)

#define READ_C1_RQm(unit, blk, index, data) \
	soc_mem_read(unit, C1_RQm, blk, index, data)
#define WRITE_C1_RQm(unit, blk, index, data) \
	soc_mem_write(unit, C1_RQm, blk, index, data)

#define READ_C1_WQm(unit, blk, index, data) \
	soc_mem_read(unit, C1_WQm, blk, index, data)
#define WRITE_C1_WQm(unit, blk, index, data) \
	soc_mem_write(unit, C1_WQm, blk, index, data)

#define READ_C2_CELLm(unit, blk, index, data) \
	soc_mem_read(unit, C2_CELLm, blk, index, data)
#define WRITE_C2_CELLm(unit, blk, index, data) \
	soc_mem_write(unit, C2_CELLm, blk, index, data)

#define READ_C2_RQm(unit, blk, index, data) \
	soc_mem_read(unit, C2_RQm, blk, index, data)
#define WRITE_C2_RQm(unit, blk, index, data) \
	soc_mem_write(unit, C2_RQm, blk, index, data)

#define READ_C2_WQm(unit, blk, index, data) \
	soc_mem_read(unit, C2_WQm, blk, index, data)
#define WRITE_C2_WQm(unit, blk, index, data) \
	soc_mem_write(unit, C2_WQm, blk, index, data)

#define READ_C3_RQm(unit, blk, index, data) \
	soc_mem_read(unit, C3_RQm, blk, index, data)
#define WRITE_C3_RQm(unit, blk, index, data) \
	soc_mem_write(unit, C3_RQm, blk, index, data)

#define READ_C3_WQm(unit, blk, index, data) \
	soc_mem_read(unit, C3_WQm, blk, index, data)
#define WRITE_C3_WQm(unit, blk, index, data) \
	soc_mem_write(unit, C3_WQm, blk, index, data)

#define READ_CELL_BUFm(unit, blk, index, data) \
	soc_mem_read(unit, CELL_BUFm, blk, index, data)
#define WRITE_CELL_BUFm(unit, blk, index, data) \
	soc_mem_write(unit, CELL_BUFm, blk, index, data)

#define READ_COMMAND_MEMORY_BSEm(unit, blk, index, data) \
	soc_mem_read(unit, COMMAND_MEMORY_BSEm, blk, index, data)
#define WRITE_COMMAND_MEMORY_BSEm(unit, blk, index, data) \
	soc_mem_write(unit, COMMAND_MEMORY_BSEm, blk, index, data)

#define READ_COMMAND_MEMORY_CSEm(unit, blk, index, data) \
	soc_mem_read(unit, COMMAND_MEMORY_CSEm, blk, index, data)
#define WRITE_COMMAND_MEMORY_CSEm(unit, blk, index, data) \
	soc_mem_write(unit, COMMAND_MEMORY_CSEm, blk, index, data)

#define READ_COMMAND_MEMORY_HSEm(unit, blk, index, data) \
	soc_mem_read(unit, COMMAND_MEMORY_HSEm, blk, index, data)
#define WRITE_COMMAND_MEMORY_HSEm(unit, blk, index, data) \
	soc_mem_write(unit, COMMAND_MEMORY_HSEm, blk, index, data)

#define READ_CPU_COS_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, CPU_COS_MAPm, blk, index, data)
#define WRITE_CPU_COS_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, CPU_COS_MAPm, blk, index, data)

#define READ_CPU_COS_MAP_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, CPU_COS_MAP_DATA_ONLYm, blk, index, data)
#define WRITE_CPU_COS_MAP_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, CPU_COS_MAP_DATA_ONLYm, blk, index, data)

#define READ_CPU_COS_MAP_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, CPU_COS_MAP_ONLYm, blk, index, data)
#define WRITE_CPU_COS_MAP_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, CPU_COS_MAP_ONLYm, blk, index, data)

#define READ_CPU_TS_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, CPU_TS_MAPm, blk, index, data)
#define WRITE_CPU_TS_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, CPU_TS_MAPm, blk, index, data)

#define READ_DEFIPm(unit, blk, index, data) \
	soc_mem_read(unit, DEFIPm, blk, index, data)
#define WRITE_DEFIPm(unit, blk, index, data) \
	soc_mem_write(unit, DEFIPm, blk, index, data)

#define READ_DEFIP_ALLm(unit, blk, index, data) \
	soc_mem_read(unit, DEFIP_ALLm, blk, index, data)
#define WRITE_DEFIP_ALLm(unit, blk, index, data) \
	soc_mem_write(unit, DEFIP_ALLm, blk, index, data)

#define READ_DEFIP_ENTRYm(unit, blk, index, data) \
	soc_mem_read(unit, DEFIP_ENTRYm, blk, index, data)
#define WRITE_DEFIP_ENTRYm(unit, blk, index, data) \
	soc_mem_write(unit, DEFIP_ENTRYm, blk, index, data)

#define READ_DEFIP_HIm(unit, blk, index, data) \
	soc_mem_read(unit, DEFIP_HIm, blk, index, data)
#define WRITE_DEFIP_HIm(unit, blk, index, data) \
	soc_mem_write(unit, DEFIP_HIm, blk, index, data)

#define READ_DEFIP_HITm(unit, blk, index, data) \
	soc_mem_read(unit, DEFIP_HITm, blk, index, data)
#define WRITE_DEFIP_HITm(unit, blk, index, data) \
	soc_mem_write(unit, DEFIP_HITm, blk, index, data)

#define READ_DEFIP_HIT_HIm(unit, blk, index, data) \
	soc_mem_read(unit, DEFIP_HIT_HIm, blk, index, data)
#define WRITE_DEFIP_HIT_HIm(unit, blk, index, data) \
	soc_mem_write(unit, DEFIP_HIT_HIm, blk, index, data)

#define READ_DEFIP_HIT_LOm(unit, blk, index, data) \
	soc_mem_read(unit, DEFIP_HIT_LOm, blk, index, data)
#define WRITE_DEFIP_HIT_LOm(unit, blk, index, data) \
	soc_mem_write(unit, DEFIP_HIT_LOm, blk, index, data)

#define READ_DEFIP_HI_ALLm(unit, blk, index, data) \
	soc_mem_read(unit, DEFIP_HI_ALLm, blk, index, data)
#define WRITE_DEFIP_HI_ALLm(unit, blk, index, data) \
	soc_mem_write(unit, DEFIP_HI_ALLm, blk, index, data)

#define READ_DEFIP_LOm(unit, blk, index, data) \
	soc_mem_read(unit, DEFIP_LOm, blk, index, data)
#define WRITE_DEFIP_LOm(unit, blk, index, data) \
	soc_mem_write(unit, DEFIP_LOm, blk, index, data)

#define READ_DEFIP_LO_ALLm(unit, blk, index, data) \
	soc_mem_read(unit, DEFIP_LO_ALLm, blk, index, data)
#define WRITE_DEFIP_LO_ALLm(unit, blk, index, data) \
	soc_mem_write(unit, DEFIP_LO_ALLm, blk, index, data)

#define READ_DSCPm(unit, blk, index, data) \
	soc_mem_read(unit, DSCPm, blk, index, data)
#define WRITE_DSCPm(unit, blk, index, data) \
	soc_mem_write(unit, DSCPm, blk, index, data)

#define READ_DSCP_PRIORITY_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, DSCP_PRIORITY_TABLEm, blk, index, data)
#define WRITE_DSCP_PRIORITY_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, DSCP_PRIORITY_TABLEm, blk, index, data)

#define READ_DSCP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, DSCP_TABLEm, blk, index, data)
#define WRITE_DSCP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, DSCP_TABLEm, blk, index, data)

#define READ_E2E_HOL_STATUSm(unit, blk, index, data) \
	soc_mem_read(unit, E2E_HOL_STATUSm, blk, index, data)
#define WRITE_E2E_HOL_STATUSm(unit, blk, index, data) \
	soc_mem_write(unit, E2E_HOL_STATUSm, blk, index, data)

#define READ_EFP_COUNTER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, EFP_COUNTER_TABLEm, blk, index, data)
#define WRITE_EFP_COUNTER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, EFP_COUNTER_TABLEm, blk, index, data)

#define READ_EFP_COUNTER_TABLE_Xm(unit, blk, index, data) \
	soc_mem_read(unit, EFP_COUNTER_TABLE_Xm, blk, index, data)
#define WRITE_EFP_COUNTER_TABLE_Xm(unit, blk, index, data) \
	soc_mem_write(unit, EFP_COUNTER_TABLE_Xm, blk, index, data)

#define READ_EFP_COUNTER_TABLE_Ym(unit, blk, index, data) \
	soc_mem_read(unit, EFP_COUNTER_TABLE_Ym, blk, index, data)
#define WRITE_EFP_COUNTER_TABLE_Ym(unit, blk, index, data) \
	soc_mem_write(unit, EFP_COUNTER_TABLE_Ym, blk, index, data)

#define READ_EFP_METER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, EFP_METER_TABLEm, blk, index, data)
#define WRITE_EFP_METER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, EFP_METER_TABLEm, blk, index, data)

#define READ_EFP_METER_TABLE_Xm(unit, blk, index, data) \
	soc_mem_read(unit, EFP_METER_TABLE_Xm, blk, index, data)
#define WRITE_EFP_METER_TABLE_Xm(unit, blk, index, data) \
	soc_mem_write(unit, EFP_METER_TABLE_Xm, blk, index, data)

#define READ_EFP_METER_TABLE_Ym(unit, blk, index, data) \
	soc_mem_read(unit, EFP_METER_TABLE_Ym, blk, index, data)
#define WRITE_EFP_METER_TABLE_Ym(unit, blk, index, data) \
	soc_mem_write(unit, EFP_METER_TABLE_Ym, blk, index, data)

#define READ_EFP_POLICY_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, EFP_POLICY_TABLEm, blk, index, data)
#define WRITE_EFP_POLICY_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, EFP_POLICY_TABLEm, blk, index, data)

#define READ_EFP_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, EFP_TCAMm, blk, index, data)
#define WRITE_EFP_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, EFP_TCAMm, blk, index, data)

#define READ_EGRESS_ADJACENT_MACm(unit, blk, index, data) \
	soc_mem_read(unit, EGRESS_ADJACENT_MACm, blk, index, data)
#define WRITE_EGRESS_ADJACENT_MACm(unit, blk, index, data) \
	soc_mem_write(unit, EGRESS_ADJACENT_MACm, blk, index, data)

#define READ_EGRESS_DSCP_EXPm(unit, blk, index, data) \
	soc_mem_read(unit, EGRESS_DSCP_EXPm, blk, index, data)
#define WRITE_EGRESS_DSCP_EXPm(unit, blk, index, data) \
	soc_mem_write(unit, EGRESS_DSCP_EXPm, blk, index, data)

#define READ_EGRESS_IPMC_LSm(unit, blk, index, data) \
	soc_mem_read(unit, EGRESS_IPMC_LSm, blk, index, data)
#define WRITE_EGRESS_IPMC_LSm(unit, blk, index, data) \
	soc_mem_write(unit, EGRESS_IPMC_LSm, blk, index, data)

#define READ_EGRESS_IPMC_MSm(unit, blk, index, data) \
	soc_mem_read(unit, EGRESS_IPMC_MSm, blk, index, data)
#define WRITE_EGRESS_IPMC_MSm(unit, blk, index, data) \
	soc_mem_write(unit, EGRESS_IPMC_MSm, blk, index, data)

#define READ_EGRESS_IP_TUNNELm(unit, blk, index, data) \
	soc_mem_read(unit, EGRESS_IP_TUNNELm, blk, index, data)
#define WRITE_EGRESS_IP_TUNNELm(unit, blk, index, data) \
	soc_mem_write(unit, EGRESS_IP_TUNNELm, blk, index, data)

#define READ_EGRESS_SPVLAN_IDm(unit, blk, index, data) \
	soc_mem_read(unit, EGRESS_SPVLAN_IDm, blk, index, data)
#define WRITE_EGRESS_SPVLAN_IDm(unit, blk, index, data) \
	soc_mem_write(unit, EGRESS_SPVLAN_IDm, blk, index, data)

#define READ_EGRESS_VLAN_STGm(unit, blk, index, data) \
	soc_mem_read(unit, EGRESS_VLAN_STGm, blk, index, data)
#define WRITE_EGRESS_VLAN_STGm(unit, blk, index, data) \
	soc_mem_write(unit, EGRESS_VLAN_STGm, blk, index, data)

#define READ_EGR_DSCP_ECN_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_DSCP_ECN_MAPm, blk, index, data)
#define WRITE_EGR_DSCP_ECN_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_DSCP_ECN_MAPm, blk, index, data)

#define READ_EGR_DSCP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_DSCP_TABLEm, blk, index, data)
#define WRITE_EGR_DSCP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_DSCP_TABLEm, blk, index, data)

#define READ_EGR_EM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_EM_MTP_INDEXm, blk, index, data)
#define WRITE_EGR_EM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_EM_MTP_INDEXm, blk, index, data)

#define READ_EGR_ERSPANm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_ERSPANm, blk, index, data)
#define WRITE_EGR_ERSPANm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_ERSPANm, blk, index, data)

#define READ_EGR_IM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IM_MTP_INDEXm, blk, index, data)
#define WRITE_EGR_IM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IM_MTP_INDEXm, blk, index, data)

#define READ_EGR_IPFIX_DSCP_XLATE_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IPFIX_DSCP_XLATE_TABLEm, blk, index, data)
#define WRITE_EGR_IPFIX_DSCP_XLATE_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IPFIX_DSCP_XLATE_TABLEm, blk, index, data)

#define READ_EGR_IPFIX_EOP_BUFFERm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IPFIX_EOP_BUFFERm, blk, index, data)
#define WRITE_EGR_IPFIX_EOP_BUFFERm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IPFIX_EOP_BUFFERm, blk, index, data)

#define READ_EGR_IPFIX_EXPORT_FIFOm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IPFIX_EXPORT_FIFOm, blk, index, data)
#define WRITE_EGR_IPFIX_EXPORT_FIFOm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IPFIX_EXPORT_FIFOm, blk, index, data)

#define READ_EGR_IPFIX_IPV4_MASK_SET_Am(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IPFIX_IPV4_MASK_SET_Am, blk, index, data)
#define WRITE_EGR_IPFIX_IPV4_MASK_SET_Am(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IPFIX_IPV4_MASK_SET_Am, blk, index, data)

#define READ_EGR_IPFIX_IPV6_MASK_SET_Am(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IPFIX_IPV6_MASK_SET_Am, blk, index, data)
#define WRITE_EGR_IPFIX_IPV6_MASK_SET_Am(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IPFIX_IPV6_MASK_SET_Am, blk, index, data)

#define READ_EGR_IPFIX_PROFILEm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IPFIX_PROFILEm, blk, index, data)
#define WRITE_EGR_IPFIX_PROFILEm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IPFIX_PROFILEm, blk, index, data)

#define READ_EGR_IPFIX_SESSION_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IPFIX_SESSION_TABLEm, blk, index, data)
#define WRITE_EGR_IPFIX_SESSION_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IPFIX_SESSION_TABLEm, blk, index, data)

#define READ_EGR_IPMCm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IPMCm, blk, index, data)
#define WRITE_EGR_IPMCm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IPMCm, blk, index, data)

#define READ_EGR_IP_TUNNELm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IP_TUNNELm, blk, index, data)
#define WRITE_EGR_IP_TUNNELm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IP_TUNNELm, blk, index, data)

#define READ_EGR_IP_TUNNEL_IPV6m(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IP_TUNNEL_IPV6m, blk, index, data)
#define WRITE_EGR_IP_TUNNEL_IPV6m(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IP_TUNNEL_IPV6m, blk, index, data)

#define READ_EGR_IP_TUNNEL_MPLSm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_IP_TUNNEL_MPLSm, blk, index, data)
#define WRITE_EGR_IP_TUNNEL_MPLSm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_IP_TUNNEL_MPLSm, blk, index, data)

#define READ_EGR_L3_INTFm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_L3_INTFm, blk, index, data)
#define WRITE_EGR_L3_INTFm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_L3_INTFm, blk, index, data)

#define READ_EGR_L3_NEXT_HOPm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_L3_NEXT_HOPm, blk, index, data)
#define WRITE_EGR_L3_NEXT_HOPm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_L3_NEXT_HOPm, blk, index, data)

#define READ_EGR_MAC_DA_PROFILEm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_MAC_DA_PROFILEm, blk, index, data)
#define WRITE_EGR_MAC_DA_PROFILEm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_MAC_DA_PROFILEm, blk, index, data)

#define READ_EGR_MASKm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_MASKm, blk, index, data)
#define WRITE_EGR_MASKm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_MASKm, blk, index, data)

#define READ_EGR_MOD_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_MOD_MAP_TABLEm, blk, index, data)
#define WRITE_EGR_MOD_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_MOD_MAP_TABLEm, blk, index, data)

#define READ_EGR_MPLS_EXP_MAPPING_1m(unit, blk, index, data) \
	soc_mem_read(unit, EGR_MPLS_EXP_MAPPING_1m, blk, index, data)
#define WRITE_EGR_MPLS_EXP_MAPPING_1m(unit, blk, index, data) \
	soc_mem_write(unit, EGR_MPLS_EXP_MAPPING_1m, blk, index, data)

#define READ_EGR_MPLS_EXP_MAPPING_2m(unit, blk, index, data) \
	soc_mem_read(unit, EGR_MPLS_EXP_MAPPING_2m, blk, index, data)
#define WRITE_EGR_MPLS_EXP_MAPPING_2m(unit, blk, index, data) \
	soc_mem_write(unit, EGR_MPLS_EXP_MAPPING_2m, blk, index, data)

#define READ_EGR_MPLS_EXP_PRI_MAPPINGm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_MPLS_EXP_PRI_MAPPINGm, blk, index, data)
#define WRITE_EGR_MPLS_EXP_PRI_MAPPINGm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_MPLS_EXP_PRI_MAPPINGm, blk, index, data)

#define READ_EGR_MPLS_PRI_MAPPINGm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_MPLS_PRI_MAPPINGm, blk, index, data)
#define WRITE_EGR_MPLS_PRI_MAPPINGm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_MPLS_PRI_MAPPINGm, blk, index, data)

#define READ_EGR_MPLS_VC_AND_SWAP_LABEL_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_MPLS_VC_AND_SWAP_LABEL_TABLEm, blk, index, data)
#define WRITE_EGR_MPLS_VC_AND_SWAP_LABEL_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_MPLS_VC_AND_SWAP_LABEL_TABLEm, blk, index, data)

#define READ_EGR_PERQ_XMT_COUNTERSm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_PERQ_XMT_COUNTERSm, blk, index, data)
#define WRITE_EGR_PERQ_XMT_COUNTERSm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_PERQ_XMT_COUNTERSm, blk, index, data)

#define READ_EGR_PRI_CNG_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_PRI_CNG_MAPm, blk, index, data)
#define WRITE_EGR_PRI_CNG_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_PRI_CNG_MAPm, blk, index, data)

#define READ_EGR_PW_INIT_COUNTERSm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_PW_INIT_COUNTERSm, blk, index, data)
#define WRITE_EGR_PW_INIT_COUNTERSm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_PW_INIT_COUNTERSm, blk, index, data)

#define READ_EGR_VLANm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_VLANm, blk, index, data)
#define WRITE_EGR_VLANm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_VLANm, blk, index, data)

#define READ_EGR_VLAN_STGm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_VLAN_STGm, blk, index, data)
#define WRITE_EGR_VLAN_STGm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_VLAN_STGm, blk, index, data)

#define READ_EGR_VLAN_TAG_ACTION_PROFILEm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_VLAN_TAG_ACTION_PROFILEm, blk, index, data)
#define WRITE_EGR_VLAN_TAG_ACTION_PROFILEm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_VLAN_TAG_ACTION_PROFILEm, blk, index, data)

#define READ_EGR_VLAN_XLATEm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_VLAN_XLATEm, blk, index, data)
#define WRITE_EGR_VLAN_XLATEm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_VLAN_XLATEm, blk, index, data)

#define READ_EGR_VLAN_XLATE_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_VLAN_XLATE_DATA_ONLYm, blk, index, data)
#define WRITE_EGR_VLAN_XLATE_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_VLAN_XLATE_DATA_ONLYm, blk, index, data)

#define READ_EGR_VLAN_XLATE_MASKm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_VLAN_XLATE_MASKm, blk, index, data)
#define WRITE_EGR_VLAN_XLATE_MASKm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_VLAN_XLATE_MASKm, blk, index, data)

#define READ_EGR_VLAN_XLATE_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_VLAN_XLATE_ONLYm, blk, index, data)
#define WRITE_EGR_VLAN_XLATE_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_VLAN_XLATE_ONLYm, blk, index, data)

#define READ_EGR_VLAN_XLATE_SCRATCHm(unit, blk, index, data) \
	soc_mem_read(unit, EGR_VLAN_XLATE_SCRATCHm, blk, index, data)
#define WRITE_EGR_VLAN_XLATE_SCRATCHm(unit, blk, index, data) \
	soc_mem_write(unit, EGR_VLAN_XLATE_SCRATCHm, blk, index, data)

#define READ_EM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_read(unit, EM_MTP_INDEXm, blk, index, data)
#define WRITE_EM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_write(unit, EM_MTP_INDEXm, blk, index, data)

#define READ_ESM_RANGE_CHECKm(unit, blk, index, data) \
	soc_mem_read(unit, ESM_RANGE_CHECKm, blk, index, data)
#define WRITE_ESM_RANGE_CHECKm(unit, blk, index, data) \
	soc_mem_write(unit, ESM_RANGE_CHECKm, blk, index, data)

#define READ_ET_INST_OPC_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, ET_INST_OPC_TABLEm, blk, index, data)
#define WRITE_ET_INST_OPC_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, ET_INST_OPC_TABLEm, blk, index, data)

#define READ_ET_PA_XLATm(unit, blk, index, data) \
	soc_mem_read(unit, ET_PA_XLATm, blk, index, data)
#define WRITE_ET_PA_XLATm(unit, blk, index, data) \
	soc_mem_write(unit, ET_PA_XLATm, blk, index, data)

#define READ_ET_UINST_MEMm(unit, blk, index, data) \
	soc_mem_read(unit, ET_UINST_MEMm, blk, index, data)
#define WRITE_ET_UINST_MEMm(unit, blk, index, data) \
	soc_mem_write(unit, ET_UINST_MEMm, blk, index, data)

#define READ_EXT_ACL144_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL144_TCAMm, blk, index, data)
#define WRITE_EXT_ACL144_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL144_TCAMm, blk, index, data)

#define READ_EXT_ACL144_TCAM_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL144_TCAM_IPV4m, blk, index, data)
#define WRITE_EXT_ACL144_TCAM_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL144_TCAM_IPV4m, blk, index, data)

#define READ_EXT_ACL144_TCAM_IPV6m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL144_TCAM_IPV6m, blk, index, data)
#define WRITE_EXT_ACL144_TCAM_IPV6m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL144_TCAM_IPV6m, blk, index, data)

#define READ_EXT_ACL144_TCAM_L2m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL144_TCAM_L2m, blk, index, data)
#define WRITE_EXT_ACL144_TCAM_L2m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL144_TCAM_L2m, blk, index, data)

#define READ_EXT_ACL288_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL288_TCAMm, blk, index, data)
#define WRITE_EXT_ACL288_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL288_TCAMm, blk, index, data)

#define READ_EXT_ACL288_TCAM_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL288_TCAM_IPV4m, blk, index, data)
#define WRITE_EXT_ACL288_TCAM_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL288_TCAM_IPV4m, blk, index, data)

#define READ_EXT_ACL288_TCAM_L2m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL288_TCAM_L2m, blk, index, data)
#define WRITE_EXT_ACL288_TCAM_L2m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL288_TCAM_L2m, blk, index, data)

#define READ_EXT_ACL360_TCAM_DATAm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL360_TCAM_DATAm, blk, index, data)
#define WRITE_EXT_ACL360_TCAM_DATAm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL360_TCAM_DATAm, blk, index, data)

#define READ_EXT_ACL360_TCAM_DATA_IPV6_SHORTm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL360_TCAM_DATA_IPV6_SHORTm, blk, index, data)
#define WRITE_EXT_ACL360_TCAM_DATA_IPV6_SHORTm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL360_TCAM_DATA_IPV6_SHORTm, blk, index, data)

#define READ_EXT_ACL360_TCAM_MASKm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL360_TCAM_MASKm, blk, index, data)
#define WRITE_EXT_ACL360_TCAM_MASKm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL360_TCAM_MASKm, blk, index, data)

#define READ_EXT_ACL432_TCAM_DATAm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL432_TCAM_DATAm, blk, index, data)
#define WRITE_EXT_ACL432_TCAM_DATAm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL432_TCAM_DATAm, blk, index, data)

#define READ_EXT_ACL432_TCAM_DATA_IPV6_LONGm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL432_TCAM_DATA_IPV6_LONGm, blk, index, data)
#define WRITE_EXT_ACL432_TCAM_DATA_IPV6_LONGm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL432_TCAM_DATA_IPV6_LONGm, blk, index, data)

#define READ_EXT_ACL432_TCAM_DATA_L2_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL432_TCAM_DATA_L2_IPV4m, blk, index, data)
#define WRITE_EXT_ACL432_TCAM_DATA_L2_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL432_TCAM_DATA_L2_IPV4m, blk, index, data)

#define READ_EXT_ACL432_TCAM_DATA_L2_IPV6m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL432_TCAM_DATA_L2_IPV6m, blk, index, data)
#define WRITE_EXT_ACL432_TCAM_DATA_L2_IPV6m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL432_TCAM_DATA_L2_IPV6m, blk, index, data)

#define READ_EXT_ACL432_TCAM_MASKm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_ACL432_TCAM_MASKm, blk, index, data)
#define WRITE_EXT_ACL432_TCAM_MASKm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_ACL432_TCAM_MASKm, blk, index, data)

#define READ_EXT_DEFIP_DATAm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_DEFIP_DATAm, blk, index, data)
#define WRITE_EXT_DEFIP_DATAm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_DEFIP_DATAm, blk, index, data)

#define READ_EXT_DEFIP_DATA_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_DEFIP_DATA_IPV4m, blk, index, data)
#define WRITE_EXT_DEFIP_DATA_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_DEFIP_DATA_IPV4m, blk, index, data)

#define READ_EXT_DEFIP_DATA_IPV6_64m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_DEFIP_DATA_IPV6_64m, blk, index, data)
#define WRITE_EXT_DEFIP_DATA_IPV6_64m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_DEFIP_DATA_IPV6_64m, blk, index, data)

#define READ_EXT_DEFIP_DATA_IPV6_128m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_DEFIP_DATA_IPV6_128m, blk, index, data)
#define WRITE_EXT_DEFIP_DATA_IPV6_128m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_DEFIP_DATA_IPV6_128m, blk, index, data)

#define READ_EXT_DST_HIT_BITSm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_DST_HIT_BITSm, blk, index, data)
#define WRITE_EXT_DST_HIT_BITSm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_DST_HIT_BITSm, blk, index, data)

#define READ_EXT_DST_HIT_BITS_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_DST_HIT_BITS_IPV4m, blk, index, data)
#define WRITE_EXT_DST_HIT_BITS_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_DST_HIT_BITS_IPV4m, blk, index, data)

#define READ_EXT_DST_HIT_BITS_IPV6_64m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_DST_HIT_BITS_IPV6_64m, blk, index, data)
#define WRITE_EXT_DST_HIT_BITS_IPV6_64m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_DST_HIT_BITS_IPV6_64m, blk, index, data)

#define READ_EXT_DST_HIT_BITS_IPV6_128m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_DST_HIT_BITS_IPV6_128m, blk, index, data)
#define WRITE_EXT_DST_HIT_BITS_IPV6_128m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_DST_HIT_BITS_IPV6_128m, blk, index, data)

#define READ_EXT_DST_HIT_BITS_L2m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_DST_HIT_BITS_L2m, blk, index, data)
#define WRITE_EXT_DST_HIT_BITS_L2m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_DST_HIT_BITS_L2m, blk, index, data)

#define READ_EXT_FP_CNTRm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTRm, blk, index, data)
#define WRITE_EXT_FP_CNTRm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTRm, blk, index, data)

#define READ_EXT_FP_CNTR8m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR8m, blk, index, data)
#define WRITE_EXT_FP_CNTR8m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR8m, blk, index, data)

#define READ_EXT_FP_CNTR8_ACL144_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR8_ACL144_IPV4m, blk, index, data)
#define WRITE_EXT_FP_CNTR8_ACL144_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR8_ACL144_IPV4m, blk, index, data)

#define READ_EXT_FP_CNTR8_ACL144_IPV6m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR8_ACL144_IPV6m, blk, index, data)
#define WRITE_EXT_FP_CNTR8_ACL144_IPV6m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR8_ACL144_IPV6m, blk, index, data)

#define READ_EXT_FP_CNTR8_ACL144_L2m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR8_ACL144_L2m, blk, index, data)
#define WRITE_EXT_FP_CNTR8_ACL144_L2m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR8_ACL144_L2m, blk, index, data)

#define READ_EXT_FP_CNTR8_ACL288_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR8_ACL288_IPV4m, blk, index, data)
#define WRITE_EXT_FP_CNTR8_ACL288_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR8_ACL288_IPV4m, blk, index, data)

#define READ_EXT_FP_CNTR8_ACL288_L2m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR8_ACL288_L2m, blk, index, data)
#define WRITE_EXT_FP_CNTR8_ACL288_L2m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR8_ACL288_L2m, blk, index, data)

#define READ_EXT_FP_CNTR8_ACL360_IPV6_SHORTm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR8_ACL360_IPV6_SHORTm, blk, index, data)
#define WRITE_EXT_FP_CNTR8_ACL360_IPV6_SHORTm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR8_ACL360_IPV6_SHORTm, blk, index, data)

#define READ_EXT_FP_CNTR8_ACL432_IPV6_LONGm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR8_ACL432_IPV6_LONGm, blk, index, data)
#define WRITE_EXT_FP_CNTR8_ACL432_IPV6_LONGm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR8_ACL432_IPV6_LONGm, blk, index, data)

#define READ_EXT_FP_CNTR8_ACL432_L2_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR8_ACL432_L2_IPV4m, blk, index, data)
#define WRITE_EXT_FP_CNTR8_ACL432_L2_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR8_ACL432_L2_IPV4m, blk, index, data)

#define READ_EXT_FP_CNTR8_ACL432_L2_IPV6m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR8_ACL432_L2_IPV6m, blk, index, data)
#define WRITE_EXT_FP_CNTR8_ACL432_L2_IPV6m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR8_ACL432_L2_IPV6m, blk, index, data)

#define READ_EXT_FP_CNTR_ACL144_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR_ACL144_IPV4m, blk, index, data)
#define WRITE_EXT_FP_CNTR_ACL144_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR_ACL144_IPV4m, blk, index, data)

#define READ_EXT_FP_CNTR_ACL144_IPV6m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR_ACL144_IPV6m, blk, index, data)
#define WRITE_EXT_FP_CNTR_ACL144_IPV6m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR_ACL144_IPV6m, blk, index, data)

#define READ_EXT_FP_CNTR_ACL144_L2m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR_ACL144_L2m, blk, index, data)
#define WRITE_EXT_FP_CNTR_ACL144_L2m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR_ACL144_L2m, blk, index, data)

#define READ_EXT_FP_CNTR_ACL288_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR_ACL288_IPV4m, blk, index, data)
#define WRITE_EXT_FP_CNTR_ACL288_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR_ACL288_IPV4m, blk, index, data)

#define READ_EXT_FP_CNTR_ACL288_L2m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR_ACL288_L2m, blk, index, data)
#define WRITE_EXT_FP_CNTR_ACL288_L2m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR_ACL288_L2m, blk, index, data)

#define READ_EXT_FP_CNTR_ACL360_IPV6_SHORTm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR_ACL360_IPV6_SHORTm, blk, index, data)
#define WRITE_EXT_FP_CNTR_ACL360_IPV6_SHORTm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR_ACL360_IPV6_SHORTm, blk, index, data)

#define READ_EXT_FP_CNTR_ACL432_IPV6_LONGm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR_ACL432_IPV6_LONGm, blk, index, data)
#define WRITE_EXT_FP_CNTR_ACL432_IPV6_LONGm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR_ACL432_IPV6_LONGm, blk, index, data)

#define READ_EXT_FP_CNTR_ACL432_L2_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR_ACL432_L2_IPV4m, blk, index, data)
#define WRITE_EXT_FP_CNTR_ACL432_L2_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR_ACL432_L2_IPV4m, blk, index, data)

#define READ_EXT_FP_CNTR_ACL432_L2_IPV6m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_CNTR_ACL432_L2_IPV6m, blk, index, data)
#define WRITE_EXT_FP_CNTR_ACL432_L2_IPV6m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_CNTR_ACL432_L2_IPV6m, blk, index, data)

#define READ_EXT_FP_POLICYm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_POLICYm, blk, index, data)
#define WRITE_EXT_FP_POLICYm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_POLICYm, blk, index, data)

#define READ_EXT_FP_POLICY_ACL144_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_POLICY_ACL144_IPV4m, blk, index, data)
#define WRITE_EXT_FP_POLICY_ACL144_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_POLICY_ACL144_IPV4m, blk, index, data)

#define READ_EXT_FP_POLICY_ACL144_IPV6m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_POLICY_ACL144_IPV6m, blk, index, data)
#define WRITE_EXT_FP_POLICY_ACL144_IPV6m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_POLICY_ACL144_IPV6m, blk, index, data)

#define READ_EXT_FP_POLICY_ACL144_L2m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_POLICY_ACL144_L2m, blk, index, data)
#define WRITE_EXT_FP_POLICY_ACL144_L2m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_POLICY_ACL144_L2m, blk, index, data)

#define READ_EXT_FP_POLICY_ACL288_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_POLICY_ACL288_IPV4m, blk, index, data)
#define WRITE_EXT_FP_POLICY_ACL288_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_POLICY_ACL288_IPV4m, blk, index, data)

#define READ_EXT_FP_POLICY_ACL288_L2m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_POLICY_ACL288_L2m, blk, index, data)
#define WRITE_EXT_FP_POLICY_ACL288_L2m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_POLICY_ACL288_L2m, blk, index, data)

#define READ_EXT_FP_POLICY_ACL360_IPV6_SHORTm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_POLICY_ACL360_IPV6_SHORTm, blk, index, data)
#define WRITE_EXT_FP_POLICY_ACL360_IPV6_SHORTm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_POLICY_ACL360_IPV6_SHORTm, blk, index, data)

#define READ_EXT_FP_POLICY_ACL432_IPV6_LONGm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_POLICY_ACL432_IPV6_LONGm, blk, index, data)
#define WRITE_EXT_FP_POLICY_ACL432_IPV6_LONGm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_POLICY_ACL432_IPV6_LONGm, blk, index, data)

#define READ_EXT_FP_POLICY_ACL432_L2_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_POLICY_ACL432_L2_IPV4m, blk, index, data)
#define WRITE_EXT_FP_POLICY_ACL432_L2_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_POLICY_ACL432_L2_IPV4m, blk, index, data)

#define READ_EXT_FP_POLICY_ACL432_L2_IPV6m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_FP_POLICY_ACL432_L2_IPV6m, blk, index, data)
#define WRITE_EXT_FP_POLICY_ACL432_L2_IPV6m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_FP_POLICY_ACL432_L2_IPV6m, blk, index, data)

#define READ_EXT_IFP_ACTION_PROFILEm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_IFP_ACTION_PROFILEm, blk, index, data)
#define WRITE_EXT_IFP_ACTION_PROFILEm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_IFP_ACTION_PROFILEm, blk, index, data)

#define READ_EXT_IPV4_DEFIPm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_IPV4_DEFIPm, blk, index, data)
#define WRITE_EXT_IPV4_DEFIPm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_IPV4_DEFIPm, blk, index, data)

#define READ_EXT_IPV4_DEFIP_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_IPV4_DEFIP_TCAMm, blk, index, data)
#define WRITE_EXT_IPV4_DEFIP_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_IPV4_DEFIP_TCAMm, blk, index, data)

#define READ_EXT_IPV6_128_DEFIPm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_IPV6_128_DEFIPm, blk, index, data)
#define WRITE_EXT_IPV6_128_DEFIPm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_IPV6_128_DEFIPm, blk, index, data)

#define READ_EXT_IPV6_128_DEFIP_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_IPV6_128_DEFIP_TCAMm, blk, index, data)
#define WRITE_EXT_IPV6_128_DEFIP_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_IPV6_128_DEFIP_TCAMm, blk, index, data)

#define READ_EXT_IPV6_64_DEFIPm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_IPV6_64_DEFIPm, blk, index, data)
#define WRITE_EXT_IPV6_64_DEFIPm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_IPV6_64_DEFIPm, blk, index, data)

#define READ_EXT_IPV6_64_DEFIP_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_IPV6_64_DEFIP_TCAMm, blk, index, data)
#define WRITE_EXT_IPV6_64_DEFIP_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_IPV6_64_DEFIP_TCAMm, blk, index, data)

#define READ_EXT_L2_ENTRYm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_L2_ENTRYm, blk, index, data)
#define WRITE_EXT_L2_ENTRYm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_L2_ENTRYm, blk, index, data)

#define READ_EXT_L2_ENTRY_DATAm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_L2_ENTRY_DATAm, blk, index, data)
#define WRITE_EXT_L2_ENTRY_DATAm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_L2_ENTRY_DATAm, blk, index, data)

#define READ_EXT_L2_ENTRY_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_L2_ENTRY_TCAMm, blk, index, data)
#define WRITE_EXT_L2_ENTRY_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_L2_ENTRY_TCAMm, blk, index, data)

#define READ_EXT_L2_MOD_FIFOm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_L2_MOD_FIFOm, blk, index, data)
#define WRITE_EXT_L2_MOD_FIFOm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_L2_MOD_FIFOm, blk, index, data)

#define READ_EXT_SRC_HIT_BITSm(unit, blk, index, data) \
	soc_mem_read(unit, EXT_SRC_HIT_BITSm, blk, index, data)
#define WRITE_EXT_SRC_HIT_BITSm(unit, blk, index, data) \
	soc_mem_write(unit, EXT_SRC_HIT_BITSm, blk, index, data)

#define READ_EXT_SRC_HIT_BITS_IPV4m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_SRC_HIT_BITS_IPV4m, blk, index, data)
#define WRITE_EXT_SRC_HIT_BITS_IPV4m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_SRC_HIT_BITS_IPV4m, blk, index, data)

#define READ_EXT_SRC_HIT_BITS_IPV6_64m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_SRC_HIT_BITS_IPV6_64m, blk, index, data)
#define WRITE_EXT_SRC_HIT_BITS_IPV6_64m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_SRC_HIT_BITS_IPV6_64m, blk, index, data)

#define READ_EXT_SRC_HIT_BITS_IPV6_128m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_SRC_HIT_BITS_IPV6_128m, blk, index, data)
#define WRITE_EXT_SRC_HIT_BITS_IPV6_128m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_SRC_HIT_BITS_IPV6_128m, blk, index, data)

#define READ_EXT_SRC_HIT_BITS_L2m(unit, blk, index, data) \
	soc_mem_read(unit, EXT_SRC_HIT_BITS_L2m, blk, index, data)
#define WRITE_EXT_SRC_HIT_BITS_L2m(unit, blk, index, data) \
	soc_mem_write(unit, EXT_SRC_HIT_BITS_L2m, blk, index, data)

#define READ_FE_IPMC_VECm(unit, blk, index, data) \
	soc_mem_read(unit, FE_IPMC_VECm, blk, index, data)
#define WRITE_FE_IPMC_VECm(unit, blk, index, data) \
	soc_mem_write(unit, FE_IPMC_VECm, blk, index, data)

#define READ_FE_IPMC_VLANm(unit, blk, index, data) \
	soc_mem_read(unit, FE_IPMC_VLANm, blk, index, data)
#define WRITE_FE_IPMC_VLANm(unit, blk, index, data) \
	soc_mem_write(unit, FE_IPMC_VLANm, blk, index, data)

#define READ_FILTER_FFPCOUNTERSm(unit, blk, index, data) \
	soc_mem_read(unit, FILTER_FFPCOUNTERSm, blk, index, data)
#define WRITE_FILTER_FFPCOUNTERSm(unit, blk, index, data) \
	soc_mem_write(unit, FILTER_FFPCOUNTERSm, blk, index, data)

#define READ_FILTER_FFPPACKETCOUNTERSm(unit, blk, index, data) \
	soc_mem_read(unit, FILTER_FFPPACKETCOUNTERSm, blk, index, data)
#define WRITE_FILTER_FFPPACKETCOUNTERSm(unit, blk, index, data) \
	soc_mem_write(unit, FILTER_FFPPACKETCOUNTERSm, blk, index, data)

#define READ_FILTER_IMASKm(unit, blk, index, data) \
	soc_mem_read(unit, FILTER_IMASKm, blk, index, data)
#define WRITE_FILTER_IMASKm(unit, blk, index, data) \
	soc_mem_write(unit, FILTER_IMASKm, blk, index, data)

#define READ_FILTER_IRULEm(unit, blk, index, data) \
	soc_mem_read(unit, FILTER_IRULEm, blk, index, data)
#define WRITE_FILTER_IRULEm(unit, blk, index, data) \
	soc_mem_write(unit, FILTER_IRULEm, blk, index, data)

#define READ_FILTER_METERINGm(unit, blk, index, data) \
	soc_mem_read(unit, FILTER_METERINGm, blk, index, data)
#define WRITE_FILTER_METERINGm(unit, blk, index, data) \
	soc_mem_write(unit, FILTER_METERINGm, blk, index, data)

#define READ_FP_COUNTER_EXTm(unit, blk, index, data) \
	soc_mem_read(unit, FP_COUNTER_EXTm, blk, index, data)
#define WRITE_FP_COUNTER_EXTm(unit, blk, index, data) \
	soc_mem_write(unit, FP_COUNTER_EXTm, blk, index, data)

#define READ_FP_COUNTER_INTm(unit, blk, index, data) \
	soc_mem_read(unit, FP_COUNTER_INTm, blk, index, data)
#define WRITE_FP_COUNTER_INTm(unit, blk, index, data) \
	soc_mem_write(unit, FP_COUNTER_INTm, blk, index, data)

#define READ_FP_COUNTER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_COUNTER_TABLEm, blk, index, data)
#define WRITE_FP_COUNTER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_COUNTER_TABLEm, blk, index, data)

#define READ_FP_COUNTER_TABLE_Xm(unit, blk, index, data) \
	soc_mem_read(unit, FP_COUNTER_TABLE_Xm, blk, index, data)
#define WRITE_FP_COUNTER_TABLE_Xm(unit, blk, index, data) \
	soc_mem_write(unit, FP_COUNTER_TABLE_Xm, blk, index, data)

#define READ_FP_COUNTER_TABLE_Ym(unit, blk, index, data) \
	soc_mem_read(unit, FP_COUNTER_TABLE_Ym, blk, index, data)
#define WRITE_FP_COUNTER_TABLE_Ym(unit, blk, index, data) \
	soc_mem_write(unit, FP_COUNTER_TABLE_Ym, blk, index, data)

#define READ_FP_EXTERNALm(unit, blk, index, data) \
	soc_mem_read(unit, FP_EXTERNALm, blk, index, data)
#define WRITE_FP_EXTERNALm(unit, blk, index, data) \
	soc_mem_write(unit, FP_EXTERNALm, blk, index, data)

#define READ_FP_GLOBAL_MASK_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, FP_GLOBAL_MASK_TCAMm, blk, index, data)
#define WRITE_FP_GLOBAL_MASK_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, FP_GLOBAL_MASK_TCAMm, blk, index, data)

#define READ_FP_INTERNALm(unit, blk, index, data) \
	soc_mem_read(unit, FP_INTERNALm, blk, index, data)
#define WRITE_FP_INTERNALm(unit, blk, index, data) \
	soc_mem_write(unit, FP_INTERNALm, blk, index, data)

#define READ_FP_METER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_METER_TABLEm, blk, index, data)
#define WRITE_FP_METER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_METER_TABLEm, blk, index, data)

#define READ_FP_METER_TABLE_EXTm(unit, blk, index, data) \
	soc_mem_read(unit, FP_METER_TABLE_EXTm, blk, index, data)
#define WRITE_FP_METER_TABLE_EXTm(unit, blk, index, data) \
	soc_mem_write(unit, FP_METER_TABLE_EXTm, blk, index, data)

#define READ_FP_METER_TABLE_INTm(unit, blk, index, data) \
	soc_mem_read(unit, FP_METER_TABLE_INTm, blk, index, data)
#define WRITE_FP_METER_TABLE_INTm(unit, blk, index, data) \
	soc_mem_write(unit, FP_METER_TABLE_INTm, blk, index, data)

#define READ_FP_METER_TABLE_Xm(unit, blk, index, data) \
	soc_mem_read(unit, FP_METER_TABLE_Xm, blk, index, data)
#define WRITE_FP_METER_TABLE_Xm(unit, blk, index, data) \
	soc_mem_write(unit, FP_METER_TABLE_Xm, blk, index, data)

#define READ_FP_METER_TABLE_Ym(unit, blk, index, data) \
	soc_mem_read(unit, FP_METER_TABLE_Ym, blk, index, data)
#define WRITE_FP_METER_TABLE_Ym(unit, blk, index, data) \
	soc_mem_write(unit, FP_METER_TABLE_Ym, blk, index, data)

#define READ_FP_POLICY_EXTERNALm(unit, blk, index, data) \
	soc_mem_read(unit, FP_POLICY_EXTERNALm, blk, index, data)
#define WRITE_FP_POLICY_EXTERNALm(unit, blk, index, data) \
	soc_mem_write(unit, FP_POLICY_EXTERNALm, blk, index, data)

#define READ_FP_POLICY_INTERNALm(unit, blk, index, data) \
	soc_mem_read(unit, FP_POLICY_INTERNALm, blk, index, data)
#define WRITE_FP_POLICY_INTERNALm(unit, blk, index, data) \
	soc_mem_write(unit, FP_POLICY_INTERNALm, blk, index, data)

#define READ_FP_POLICY_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_POLICY_TABLEm, blk, index, data)
#define WRITE_FP_POLICY_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_POLICY_TABLEm, blk, index, data)

#define READ_FP_PORT_FIELD_SELm(unit, blk, index, data) \
	soc_mem_read(unit, FP_PORT_FIELD_SELm, blk, index, data)
#define WRITE_FP_PORT_FIELD_SELm(unit, blk, index, data) \
	soc_mem_write(unit, FP_PORT_FIELD_SELm, blk, index, data)

#define READ_FP_PORT_METER_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, FP_PORT_METER_MAPm, blk, index, data)
#define WRITE_FP_PORT_METER_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, FP_PORT_METER_MAPm, blk, index, data)

#define READ_FP_RANGE_CHECKm(unit, blk, index, data) \
	soc_mem_read(unit, FP_RANGE_CHECKm, blk, index, data)
#define WRITE_FP_RANGE_CHECKm(unit, blk, index, data) \
	soc_mem_write(unit, FP_RANGE_CHECKm, blk, index, data)

#define READ_FP_SC_BCAST_METER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_SC_BCAST_METER_TABLEm, blk, index, data)
#define WRITE_FP_SC_BCAST_METER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_SC_BCAST_METER_TABLEm, blk, index, data)

#define READ_FP_SC_DLF_METER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_SC_DLF_METER_TABLEm, blk, index, data)
#define WRITE_FP_SC_DLF_METER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_SC_DLF_METER_TABLEm, blk, index, data)

#define READ_FP_SC_MCAST_METER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_SC_MCAST_METER_TABLEm, blk, index, data)
#define WRITE_FP_SC_MCAST_METER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_SC_MCAST_METER_TABLEm, blk, index, data)

#define READ_FP_SC_METER_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_SC_METER_TABLEm, blk, index, data)
#define WRITE_FP_SC_METER_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_SC_METER_TABLEm, blk, index, data)

#define READ_FP_SLICE_ENTRY_PORT_SELm(unit, blk, index, data) \
	soc_mem_read(unit, FP_SLICE_ENTRY_PORT_SELm, blk, index, data)
#define WRITE_FP_SLICE_ENTRY_PORT_SELm(unit, blk, index, data) \
	soc_mem_write(unit, FP_SLICE_ENTRY_PORT_SELm, blk, index, data)

#define READ_FP_SLICE_KEY_CONTROLm(unit, blk, index, data) \
	soc_mem_read(unit, FP_SLICE_KEY_CONTROLm, blk, index, data)
#define WRITE_FP_SLICE_KEY_CONTROLm(unit, blk, index, data) \
	soc_mem_write(unit, FP_SLICE_KEY_CONTROLm, blk, index, data)

#define READ_FP_SLICE_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, FP_SLICE_MAPm, blk, index, data)
#define WRITE_FP_SLICE_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, FP_SLICE_MAPm, blk, index, data)

#define READ_FP_STORM_CONTROL_METERSm(unit, blk, index, data) \
	soc_mem_read(unit, FP_STORM_CONTROL_METERSm, blk, index, data)
#define WRITE_FP_STORM_CONTROL_METERSm(unit, blk, index, data) \
	soc_mem_write(unit, FP_STORM_CONTROL_METERSm, blk, index, data)

#define READ_FP_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, FP_TCAMm, blk, index, data)
#define WRITE_FP_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, FP_TCAMm, blk, index, data)

#define READ_FP_TCAM_EXTERNALm(unit, blk, index, data) \
	soc_mem_read(unit, FP_TCAM_EXTERNALm, blk, index, data)
#define WRITE_FP_TCAM_EXTERNALm(unit, blk, index, data) \
	soc_mem_write(unit, FP_TCAM_EXTERNALm, blk, index, data)

#define READ_FP_TCAM_INTERNALm(unit, blk, index, data) \
	soc_mem_read(unit, FP_TCAM_INTERNALm, blk, index, data)
#define WRITE_FP_TCAM_INTERNALm(unit, blk, index, data) \
	soc_mem_write(unit, FP_TCAM_INTERNALm, blk, index, data)

#define READ_FP_TCAM_PLUS_POLICYm(unit, blk, index, data) \
	soc_mem_read(unit, FP_TCAM_PLUS_POLICYm, blk, index, data)
#define WRITE_FP_TCAM_PLUS_POLICYm(unit, blk, index, data) \
	soc_mem_write(unit, FP_TCAM_PLUS_POLICYm, blk, index, data)

#define READ_FP_TCAM_Xm(unit, blk, index, data) \
	soc_mem_read(unit, FP_TCAM_Xm, blk, index, data)
#define WRITE_FP_TCAM_Xm(unit, blk, index, data) \
	soc_mem_write(unit, FP_TCAM_Xm, blk, index, data)

#define READ_FP_TCAM_Ym(unit, blk, index, data) \
	soc_mem_read(unit, FP_TCAM_Ym, blk, index, data)
#define WRITE_FP_TCAM_Ym(unit, blk, index, data) \
	soc_mem_write(unit, FP_TCAM_Ym, blk, index, data)

#define READ_FP_TCP_UDP_PORT_RANGEm(unit, blk, index, data) \
	soc_mem_read(unit, FP_TCP_UDP_PORT_RANGEm, blk, index, data)
#define WRITE_FP_TCP_UDP_PORT_RANGEm(unit, blk, index, data) \
	soc_mem_write(unit, FP_TCP_UDP_PORT_RANGEm, blk, index, data)

#define READ_FP_UDF_OFFSETm(unit, blk, index, data) \
	soc_mem_read(unit, FP_UDF_OFFSETm, blk, index, data)
#define WRITE_FP_UDF_OFFSETm(unit, blk, index, data) \
	soc_mem_write(unit, FP_UDF_OFFSETm, blk, index, data)

#define READ_GBPm(unit, blk, index, data) \
	soc_mem_read(unit, GBPm, blk, index, data)
#define WRITE_GBPm(unit, blk, index, data) \
	soc_mem_write(unit, GBPm, blk, index, data)

#define READ_GE_IPMC_VECm(unit, blk, index, data) \
	soc_mem_read(unit, GE_IPMC_VECm, blk, index, data)
#define WRITE_GE_IPMC_VECm(unit, blk, index, data) \
	soc_mem_write(unit, GE_IPMC_VECm, blk, index, data)

#define READ_GE_IPMC_VLANm(unit, blk, index, data) \
	soc_mem_read(unit, GE_IPMC_VLANm, blk, index, data)
#define WRITE_GE_IPMC_VLANm(unit, blk, index, data) \
	soc_mem_write(unit, GE_IPMC_VLANm, blk, index, data)

#define READ_GFILTER_FFPCOUNTERSm(unit, blk, index, data) \
	soc_mem_read(unit, GFILTER_FFPCOUNTERSm, blk, index, data)
#define WRITE_GFILTER_FFPCOUNTERSm(unit, blk, index, data) \
	soc_mem_write(unit, GFILTER_FFPCOUNTERSm, blk, index, data)

#define READ_GFILTER_FFPPACKETCOUNTERSm(unit, blk, index, data) \
	soc_mem_read(unit, GFILTER_FFPPACKETCOUNTERSm, blk, index, data)
#define WRITE_GFILTER_FFPPACKETCOUNTERSm(unit, blk, index, data) \
	soc_mem_write(unit, GFILTER_FFPPACKETCOUNTERSm, blk, index, data)

#define READ_GFILTER_IMASKm(unit, blk, index, data) \
	soc_mem_read(unit, GFILTER_IMASKm, blk, index, data)
#define WRITE_GFILTER_IMASKm(unit, blk, index, data) \
	soc_mem_write(unit, GFILTER_IMASKm, blk, index, data)

#define READ_GFILTER_IRULEm(unit, blk, index, data) \
	soc_mem_read(unit, GFILTER_IRULEm, blk, index, data)
#define WRITE_GFILTER_IRULEm(unit, blk, index, data) \
	soc_mem_write(unit, GFILTER_IRULEm, blk, index, data)

#define READ_GFILTER_METERINGm(unit, blk, index, data) \
	soc_mem_read(unit, GFILTER_METERINGm, blk, index, data)
#define WRITE_GFILTER_METERINGm(unit, blk, index, data) \
	soc_mem_write(unit, GFILTER_METERINGm, blk, index, data)

#define READ_HASHINPUTm(unit, blk, index, data) \
	soc_mem_read(unit, HASHINPUTm, blk, index, data)
#define WRITE_HASHINPUTm(unit, blk, index, data) \
	soc_mem_write(unit, HASHINPUTm, blk, index, data)

#define READ_HASH_TRAP_INFOm(unit, blk, index, data) \
	soc_mem_read(unit, HASH_TRAP_INFOm, blk, index, data)
#define WRITE_HASH_TRAP_INFOm(unit, blk, index, data) \
	soc_mem_write(unit, HASH_TRAP_INFOm, blk, index, data)

#define READ_HG_PORT_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, HG_PORT_TABLEm, blk, index, data)
#define WRITE_HG_PORT_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, HG_PORT_TABLEm, blk, index, data)

#define READ_HG_TRUNK_FAILOVER_SETm(unit, blk, index, data) \
	soc_mem_read(unit, HG_TRUNK_FAILOVER_SETm, blk, index, data)
#define WRITE_HG_TRUNK_FAILOVER_SETm(unit, blk, index, data) \
	soc_mem_write(unit, HG_TRUNK_FAILOVER_SETm, blk, index, data)

#define READ_IFP_PORT_FIELD_SELm(unit, blk, index, data) \
	soc_mem_read(unit, IFP_PORT_FIELD_SELm, blk, index, data)
#define WRITE_IFP_PORT_FIELD_SELm(unit, blk, index, data) \
	soc_mem_write(unit, IFP_PORT_FIELD_SELm, blk, index, data)

#define READ_IFP_REDIRECTION_PROFILEm(unit, blk, index, data) \
	soc_mem_read(unit, IFP_REDIRECTION_PROFILEm, blk, index, data)
#define WRITE_IFP_REDIRECTION_PROFILEm(unit, blk, index, data) \
	soc_mem_write(unit, IFP_REDIRECTION_PROFILEm, blk, index, data)

#define READ_IGR_VLAN_RANGE_TBLm(unit, blk, index, data) \
	soc_mem_read(unit, IGR_VLAN_RANGE_TBLm, blk, index, data)
#define WRITE_IGR_VLAN_RANGE_TBLm(unit, blk, index, data) \
	soc_mem_write(unit, IGR_VLAN_RANGE_TBLm, blk, index, data)

#define READ_IGR_VLAN_XLATEm(unit, blk, index, data) \
	soc_mem_read(unit, IGR_VLAN_XLATEm, blk, index, data)
#define WRITE_IGR_VLAN_XLATEm(unit, blk, index, data) \
	soc_mem_write(unit, IGR_VLAN_XLATEm, blk, index, data)

#define READ_IM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_read(unit, IM_MTP_INDEXm, blk, index, data)
#define WRITE_IM_MTP_INDEXm(unit, blk, index, data) \
	soc_mem_write(unit, IM_MTP_INDEXm, blk, index, data)

#define READ_ING_DVP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, ING_DVP_TABLEm, blk, index, data)
#define WRITE_ING_DVP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, ING_DVP_TABLEm, blk, index, data)

#define READ_ING_IPFIX_DSCP_XLATE_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, ING_IPFIX_DSCP_XLATE_TABLEm, blk, index, data)
#define WRITE_ING_IPFIX_DSCP_XLATE_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, ING_IPFIX_DSCP_XLATE_TABLEm, blk, index, data)

#define READ_ING_IPFIX_EOP_BUFFERm(unit, blk, index, data) \
	soc_mem_read(unit, ING_IPFIX_EOP_BUFFERm, blk, index, data)
#define WRITE_ING_IPFIX_EOP_BUFFERm(unit, blk, index, data) \
	soc_mem_write(unit, ING_IPFIX_EOP_BUFFERm, blk, index, data)

#define READ_ING_IPFIX_EXPORT_FIFOm(unit, blk, index, data) \
	soc_mem_read(unit, ING_IPFIX_EXPORT_FIFOm, blk, index, data)
#define WRITE_ING_IPFIX_EXPORT_FIFOm(unit, blk, index, data) \
	soc_mem_write(unit, ING_IPFIX_EXPORT_FIFOm, blk, index, data)

#define READ_ING_IPFIX_IPV4_MASK_SET_Am(unit, blk, index, data) \
	soc_mem_read(unit, ING_IPFIX_IPV4_MASK_SET_Am, blk, index, data)
#define WRITE_ING_IPFIX_IPV4_MASK_SET_Am(unit, blk, index, data) \
	soc_mem_write(unit, ING_IPFIX_IPV4_MASK_SET_Am, blk, index, data)

#define READ_ING_IPFIX_IPV4_MASK_SET_Bm(unit, blk, index, data) \
	soc_mem_read(unit, ING_IPFIX_IPV4_MASK_SET_Bm, blk, index, data)
#define WRITE_ING_IPFIX_IPV4_MASK_SET_Bm(unit, blk, index, data) \
	soc_mem_write(unit, ING_IPFIX_IPV4_MASK_SET_Bm, blk, index, data)

#define READ_ING_IPFIX_IPV6_MASK_SET_Am(unit, blk, index, data) \
	soc_mem_read(unit, ING_IPFIX_IPV6_MASK_SET_Am, blk, index, data)
#define WRITE_ING_IPFIX_IPV6_MASK_SET_Am(unit, blk, index, data) \
	soc_mem_write(unit, ING_IPFIX_IPV6_MASK_SET_Am, blk, index, data)

#define READ_ING_IPFIX_IPV6_MASK_SET_Bm(unit, blk, index, data) \
	soc_mem_read(unit, ING_IPFIX_IPV6_MASK_SET_Bm, blk, index, data)
#define WRITE_ING_IPFIX_IPV6_MASK_SET_Bm(unit, blk, index, data) \
	soc_mem_write(unit, ING_IPFIX_IPV6_MASK_SET_Bm, blk, index, data)

#define READ_ING_IPFIX_PROFILEm(unit, blk, index, data) \
	soc_mem_read(unit, ING_IPFIX_PROFILEm, blk, index, data)
#define WRITE_ING_IPFIX_PROFILEm(unit, blk, index, data) \
	soc_mem_write(unit, ING_IPFIX_PROFILEm, blk, index, data)

#define READ_ING_IPFIX_SESSION_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, ING_IPFIX_SESSION_TABLEm, blk, index, data)
#define WRITE_ING_IPFIX_SESSION_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, ING_IPFIX_SESSION_TABLEm, blk, index, data)

#define READ_ING_L3_NEXT_HOPm(unit, blk, index, data) \
	soc_mem_read(unit, ING_L3_NEXT_HOPm, blk, index, data)
#define WRITE_ING_L3_NEXT_HOPm(unit, blk, index, data) \
	soc_mem_write(unit, ING_L3_NEXT_HOPm, blk, index, data)

#define READ_ING_L3_NEXT_HOP_Am(unit, blk, index, data) \
	soc_mem_read(unit, ING_L3_NEXT_HOP_Am, blk, index, data)
#define WRITE_ING_L3_NEXT_HOP_Am(unit, blk, index, data) \
	soc_mem_write(unit, ING_L3_NEXT_HOP_Am, blk, index, data)

#define READ_ING_L3_NEXT_HOP_Bm(unit, blk, index, data) \
	soc_mem_read(unit, ING_L3_NEXT_HOP_Bm, blk, index, data)
#define WRITE_ING_L3_NEXT_HOP_Bm(unit, blk, index, data) \
	soc_mem_write(unit, ING_L3_NEXT_HOP_Bm, blk, index, data)

#define READ_ING_MOD_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, ING_MOD_MAP_TABLEm, blk, index, data)
#define WRITE_ING_MOD_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, ING_MOD_MAP_TABLEm, blk, index, data)

#define READ_ING_MPLS_EXP_MAPPINGm(unit, blk, index, data) \
	soc_mem_read(unit, ING_MPLS_EXP_MAPPINGm, blk, index, data)
#define WRITE_ING_MPLS_EXP_MAPPINGm(unit, blk, index, data) \
	soc_mem_write(unit, ING_MPLS_EXP_MAPPINGm, blk, index, data)

#define READ_ING_PRI_CNG_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, ING_PRI_CNG_MAPm, blk, index, data)
#define WRITE_ING_PRI_CNG_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, ING_PRI_CNG_MAPm, blk, index, data)

#define READ_ING_PW_TERM_COUNTERSm(unit, blk, index, data) \
	soc_mem_read(unit, ING_PW_TERM_COUNTERSm, blk, index, data)
#define WRITE_ING_PW_TERM_COUNTERSm(unit, blk, index, data) \
	soc_mem_write(unit, ING_PW_TERM_COUNTERSm, blk, index, data)

#define READ_ING_PW_TERM_SEQ_NUMm(unit, blk, index, data) \
	soc_mem_read(unit, ING_PW_TERM_SEQ_NUMm, blk, index, data)
#define WRITE_ING_PW_TERM_SEQ_NUMm(unit, blk, index, data) \
	soc_mem_write(unit, ING_PW_TERM_SEQ_NUMm, blk, index, data)

#define READ_ING_VLAN_RANGEm(unit, blk, index, data) \
	soc_mem_read(unit, ING_VLAN_RANGEm, blk, index, data)
#define WRITE_ING_VLAN_RANGEm(unit, blk, index, data) \
	soc_mem_write(unit, ING_VLAN_RANGEm, blk, index, data)

#define READ_ING_VLAN_TAG_ACTION_PROFILEm(unit, blk, index, data) \
	soc_mem_read(unit, ING_VLAN_TAG_ACTION_PROFILEm, blk, index, data)
#define WRITE_ING_VLAN_TAG_ACTION_PROFILEm(unit, blk, index, data) \
	soc_mem_write(unit, ING_VLAN_TAG_ACTION_PROFILEm, blk, index, data)

#define READ_INITIAL_ING_L3_NEXT_HOPm(unit, blk, index, data) \
	soc_mem_read(unit, INITIAL_ING_L3_NEXT_HOPm, blk, index, data)
#define WRITE_INITIAL_ING_L3_NEXT_HOPm(unit, blk, index, data) \
	soc_mem_write(unit, INITIAL_ING_L3_NEXT_HOPm, blk, index, data)

#define READ_INITIAL_L3_ECMPm(unit, blk, index, data) \
	soc_mem_read(unit, INITIAL_L3_ECMPm, blk, index, data)
#define WRITE_INITIAL_L3_ECMPm(unit, blk, index, data) \
	soc_mem_write(unit, INITIAL_L3_ECMPm, blk, index, data)

#define READ_INITIAL_L3_ECMP_COUNTm(unit, blk, index, data) \
	soc_mem_read(unit, INITIAL_L3_ECMP_COUNTm, blk, index, data)
#define WRITE_INITIAL_L3_ECMP_COUNTm(unit, blk, index, data) \
	soc_mem_write(unit, INITIAL_L3_ECMP_COUNTm, blk, index, data)

#define READ_IPMC_GROUP_V4m(unit, blk, index, data) \
	soc_mem_read(unit, IPMC_GROUP_V4m, blk, index, data)
#define WRITE_IPMC_GROUP_V4m(unit, blk, index, data) \
	soc_mem_write(unit, IPMC_GROUP_V4m, blk, index, data)

#define READ_IPMC_GROUP_V6m(unit, blk, index, data) \
	soc_mem_read(unit, IPMC_GROUP_V6m, blk, index, data)
#define WRITE_IPMC_GROUP_V6m(unit, blk, index, data) \
	soc_mem_write(unit, IPMC_GROUP_V6m, blk, index, data)

#define READ_IPORT_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, IPORT_TABLEm, blk, index, data)
#define WRITE_IPORT_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, IPORT_TABLEm, blk, index, data)

#define READ_IPV4_IN_IPV6_PREFIX_MATCH_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, IPV4_IN_IPV6_PREFIX_MATCH_TABLEm, blk, index, data)
#define WRITE_IPV4_IN_IPV6_PREFIX_MATCH_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, IPV4_IN_IPV6_PREFIX_MATCH_TABLEm, blk, index, data)

#define READ_IPV6_PROXY_ENABLE_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, IPV6_PROXY_ENABLE_TABLEm, blk, index, data)
#define WRITE_IPV6_PROXY_ENABLE_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, IPV6_PROXY_ENABLE_TABLEm, blk, index, data)

#define READ_L2MCm(unit, blk, index, data) \
	soc_mem_read(unit, L2MCm, blk, index, data)
#define WRITE_L2MCm(unit, blk, index, data) \
	soc_mem_write(unit, L2MCm, blk, index, data)

#define READ_L2MC_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, L2MC_TABLEm, blk, index, data)
#define WRITE_L2MC_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, L2MC_TABLEm, blk, index, data)

#define READ_L2Xm(unit, blk, index, data) \
	soc_mem_read(unit, L2Xm, blk, index, data)
#define WRITE_L2Xm(unit, blk, index, data) \
	soc_mem_write(unit, L2Xm, blk, index, data)

#define READ_L2X_BASEm(unit, blk, index, data) \
	soc_mem_read(unit, L2X_BASEm, blk, index, data)
#define WRITE_L2X_BASEm(unit, blk, index, data) \
	soc_mem_write(unit, L2X_BASEm, blk, index, data)

#define READ_L2X_HITm(unit, blk, index, data) \
	soc_mem_read(unit, L2X_HITm, blk, index, data)
#define WRITE_L2X_HITm(unit, blk, index, data) \
	soc_mem_write(unit, L2X_HITm, blk, index, data)

#define READ_L2X_MCm(unit, blk, index, data) \
	soc_mem_read(unit, L2X_MCm, blk, index, data)
#define WRITE_L2X_MCm(unit, blk, index, data) \
	soc_mem_write(unit, L2X_MCm, blk, index, data)

#define READ_L2X_PARITYm(unit, blk, index, data) \
	soc_mem_read(unit, L2X_PARITYm, blk, index, data)
#define WRITE_L2X_PARITYm(unit, blk, index, data) \
	soc_mem_write(unit, L2X_PARITYm, blk, index, data)

#define READ_L2X_STATICm(unit, blk, index, data) \
	soc_mem_read(unit, L2X_STATICm, blk, index, data)
#define WRITE_L2X_STATICm(unit, blk, index, data) \
	soc_mem_write(unit, L2X_STATICm, blk, index, data)

#define READ_L2X_VALIDm(unit, blk, index, data) \
	soc_mem_read(unit, L2X_VALIDm, blk, index, data)
#define WRITE_L2X_VALIDm(unit, blk, index, data) \
	soc_mem_write(unit, L2X_VALIDm, blk, index, data)

#define READ_L2_ENTRY_EXTERNALm(unit, blk, index, data) \
	soc_mem_read(unit, L2_ENTRY_EXTERNALm, blk, index, data)
#define WRITE_L2_ENTRY_EXTERNALm(unit, blk, index, data) \
	soc_mem_write(unit, L2_ENTRY_EXTERNALm, blk, index, data)

#define READ_L2_ENTRY_INTERNALm(unit, blk, index, data) \
	soc_mem_read(unit, L2_ENTRY_INTERNALm, blk, index, data)
#define WRITE_L2_ENTRY_INTERNALm(unit, blk, index, data) \
	soc_mem_write(unit, L2_ENTRY_INTERNALm, blk, index, data)

#define READ_L2_ENTRY_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L2_ENTRY_ONLYm, blk, index, data)
#define WRITE_L2_ENTRY_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L2_ENTRY_ONLYm, blk, index, data)

#define READ_L2_ENTRY_OVERFLOWm(unit, blk, index, data) \
	soc_mem_read(unit, L2_ENTRY_OVERFLOWm, blk, index, data)
#define WRITE_L2_ENTRY_OVERFLOWm(unit, blk, index, data) \
	soc_mem_write(unit, L2_ENTRY_OVERFLOWm, blk, index, data)

#define READ_L2_ENTRY_SCRATCHm(unit, blk, index, data) \
	soc_mem_read(unit, L2_ENTRY_SCRATCHm, blk, index, data)
#define WRITE_L2_ENTRY_SCRATCHm(unit, blk, index, data) \
	soc_mem_write(unit, L2_ENTRY_SCRATCHm, blk, index, data)

#define READ_L2_HITDA_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L2_HITDA_ONLYm, blk, index, data)
#define WRITE_L2_HITDA_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L2_HITDA_ONLYm, blk, index, data)

#define READ_L2_HITSA_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L2_HITSA_ONLYm, blk, index, data)
#define WRITE_L2_HITSA_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L2_HITSA_ONLYm, blk, index, data)

#define READ_L2_MOD_FIFOm(unit, blk, index, data) \
	soc_mem_read(unit, L2_MOD_FIFOm, blk, index, data)
#define WRITE_L2_MOD_FIFOm(unit, blk, index, data) \
	soc_mem_write(unit, L2_MOD_FIFOm, blk, index, data)

#define READ_L2_USER_ENTRYm(unit, blk, index, data) \
	soc_mem_read(unit, L2_USER_ENTRYm, blk, index, data)
#define WRITE_L2_USER_ENTRYm(unit, blk, index, data) \
	soc_mem_write(unit, L2_USER_ENTRYm, blk, index, data)

#define READ_L2_USER_ENTRY_DATAm(unit, blk, index, data) \
	soc_mem_read(unit, L2_USER_ENTRY_DATAm, blk, index, data)
#define WRITE_L2_USER_ENTRY_DATAm(unit, blk, index, data) \
	soc_mem_write(unit, L2_USER_ENTRY_DATAm, blk, index, data)

#define READ_L2_USER_ENTRY_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L2_USER_ENTRY_DATA_ONLYm, blk, index, data)
#define WRITE_L2_USER_ENTRY_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L2_USER_ENTRY_DATA_ONLYm, blk, index, data)

#define READ_L2_USER_ENTRY_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L2_USER_ENTRY_ONLYm, blk, index, data)
#define WRITE_L2_USER_ENTRY_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L2_USER_ENTRY_ONLYm, blk, index, data)

#define READ_L2_USER_ENTRY_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, L2_USER_ENTRY_TCAMm, blk, index, data)
#define WRITE_L2_USER_ENTRY_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, L2_USER_ENTRY_TCAMm, blk, index, data)

#define READ_L3INTFm(unit, blk, index, data) \
	soc_mem_read(unit, L3INTFm, blk, index, data)
#define WRITE_L3INTFm(unit, blk, index, data) \
	soc_mem_write(unit, L3INTFm, blk, index, data)

#define READ_L3INTF_EGR_FILTER_LISTm(unit, blk, index, data) \
	soc_mem_read(unit, L3INTF_EGR_FILTER_LISTm, blk, index, data)
#define WRITE_L3INTF_EGR_FILTER_LISTm(unit, blk, index, data) \
	soc_mem_write(unit, L3INTF_EGR_FILTER_LISTm, blk, index, data)

#define READ_L3INTF_IGR_FILTER_LISTm(unit, blk, index, data) \
	soc_mem_read(unit, L3INTF_IGR_FILTER_LISTm, blk, index, data)
#define WRITE_L3INTF_IGR_FILTER_LISTm(unit, blk, index, data) \
	soc_mem_write(unit, L3INTF_IGR_FILTER_LISTm, blk, index, data)

#define READ_L3INTF_QOSm(unit, blk, index, data) \
	soc_mem_read(unit, L3INTF_QOSm, blk, index, data)
#define WRITE_L3INTF_QOSm(unit, blk, index, data) \
	soc_mem_write(unit, L3INTF_QOSm, blk, index, data)

#define READ_L3Xm(unit, blk, index, data) \
	soc_mem_read(unit, L3Xm, blk, index, data)
#define WRITE_L3Xm(unit, blk, index, data) \
	soc_mem_write(unit, L3Xm, blk, index, data)

#define READ_L3X_BASEm(unit, blk, index, data) \
	soc_mem_read(unit, L3X_BASEm, blk, index, data)
#define WRITE_L3X_BASEm(unit, blk, index, data) \
	soc_mem_write(unit, L3X_BASEm, blk, index, data)

#define READ_L3X_HITm(unit, blk, index, data) \
	soc_mem_read(unit, L3X_HITm, blk, index, data)
#define WRITE_L3X_HITm(unit, blk, index, data) \
	soc_mem_write(unit, L3X_HITm, blk, index, data)

#define READ_L3X_PARITYm(unit, blk, index, data) \
	soc_mem_read(unit, L3X_PARITYm, blk, index, data)
#define WRITE_L3X_PARITYm(unit, blk, index, data) \
	soc_mem_write(unit, L3X_PARITYm, blk, index, data)

#define READ_L3X_VALIDm(unit, blk, index, data) \
	soc_mem_read(unit, L3X_VALIDm, blk, index, data)
#define WRITE_L3X_VALIDm(unit, blk, index, data) \
	soc_mem_write(unit, L3X_VALIDm, blk, index, data)

#define READ_L3_DEFIPm(unit, blk, index, data) \
	soc_mem_read(unit, L3_DEFIPm, blk, index, data)
#define WRITE_L3_DEFIPm(unit, blk, index, data) \
	soc_mem_write(unit, L3_DEFIPm, blk, index, data)

#define READ_L3_DEFIP_128m(unit, blk, index, data) \
	soc_mem_read(unit, L3_DEFIP_128m, blk, index, data)
#define WRITE_L3_DEFIP_128m(unit, blk, index, data) \
	soc_mem_write(unit, L3_DEFIP_128m, blk, index, data)

#define READ_L3_DEFIP_128_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L3_DEFIP_128_DATA_ONLYm, blk, index, data)
#define WRITE_L3_DEFIP_128_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L3_DEFIP_128_DATA_ONLYm, blk, index, data)

#define READ_L3_DEFIP_128_HIT_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L3_DEFIP_128_HIT_ONLYm, blk, index, data)
#define WRITE_L3_DEFIP_128_HIT_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L3_DEFIP_128_HIT_ONLYm, blk, index, data)

#define READ_L3_DEFIP_128_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L3_DEFIP_128_ONLYm, blk, index, data)
#define WRITE_L3_DEFIP_128_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L3_DEFIP_128_ONLYm, blk, index, data)

#define READ_L3_DEFIP_ALGm(unit, blk, index, data) \
	soc_mem_read(unit, L3_DEFIP_ALGm, blk, index, data)
#define WRITE_L3_DEFIP_ALGm(unit, blk, index, data) \
	soc_mem_write(unit, L3_DEFIP_ALGm, blk, index, data)

#define READ_L3_DEFIP_CAMm(unit, blk, index, data) \
	soc_mem_read(unit, L3_DEFIP_CAMm, blk, index, data)
#define WRITE_L3_DEFIP_CAMm(unit, blk, index, data) \
	soc_mem_write(unit, L3_DEFIP_CAMm, blk, index, data)

#define READ_L3_DEFIP_DATAm(unit, blk, index, data) \
	soc_mem_read(unit, L3_DEFIP_DATAm, blk, index, data)
#define WRITE_L3_DEFIP_DATAm(unit, blk, index, data) \
	soc_mem_write(unit, L3_DEFIP_DATAm, blk, index, data)

#define READ_L3_DEFIP_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L3_DEFIP_DATA_ONLYm, blk, index, data)
#define WRITE_L3_DEFIP_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L3_DEFIP_DATA_ONLYm, blk, index, data)

#define READ_L3_DEFIP_HIT_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L3_DEFIP_HIT_ONLYm, blk, index, data)
#define WRITE_L3_DEFIP_HIT_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L3_DEFIP_HIT_ONLYm, blk, index, data)

#define READ_L3_DEFIP_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L3_DEFIP_ONLYm, blk, index, data)
#define WRITE_L3_DEFIP_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L3_DEFIP_ONLYm, blk, index, data)

#define READ_L3_DEFIP_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, L3_DEFIP_TCAMm, blk, index, data)
#define WRITE_L3_DEFIP_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, L3_DEFIP_TCAMm, blk, index, data)

#define READ_L3_DEF_IPm(unit, blk, index, data) \
	soc_mem_read(unit, L3_DEF_IPm, blk, index, data)
#define WRITE_L3_DEF_IPm(unit, blk, index, data) \
	soc_mem_write(unit, L3_DEF_IPm, blk, index, data)

#define READ_L3_ECMPm(unit, blk, index, data) \
	soc_mem_read(unit, L3_ECMPm, blk, index, data)
#define WRITE_L3_ECMPm(unit, blk, index, data) \
	soc_mem_write(unit, L3_ECMPm, blk, index, data)

#define READ_L3_ECMP_COUNTm(unit, blk, index, data) \
	soc_mem_read(unit, L3_ECMP_COUNTm, blk, index, data)
#define WRITE_L3_ECMP_COUNTm(unit, blk, index, data) \
	soc_mem_write(unit, L3_ECMP_COUNTm, blk, index, data)

#define READ_L3_ENTRY_HIT_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L3_ENTRY_HIT_ONLYm, blk, index, data)
#define WRITE_L3_ENTRY_HIT_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L3_ENTRY_HIT_ONLYm, blk, index, data)

#define READ_L3_ENTRY_IPV4_MULTICASTm(unit, blk, index, data) \
	soc_mem_read(unit, L3_ENTRY_IPV4_MULTICASTm, blk, index, data)
#define WRITE_L3_ENTRY_IPV4_MULTICASTm(unit, blk, index, data) \
	soc_mem_write(unit, L3_ENTRY_IPV4_MULTICASTm, blk, index, data)

#define READ_L3_ENTRY_IPV4_MULTICAST_SCRATCHm(unit, blk, index, data) \
	soc_mem_read(unit, L3_ENTRY_IPV4_MULTICAST_SCRATCHm, blk, index, data)
#define WRITE_L3_ENTRY_IPV4_MULTICAST_SCRATCHm(unit, blk, index, data) \
	soc_mem_write(unit, L3_ENTRY_IPV4_MULTICAST_SCRATCHm, blk, index, data)

#define READ_L3_ENTRY_IPV4_UNICASTm(unit, blk, index, data) \
	soc_mem_read(unit, L3_ENTRY_IPV4_UNICASTm, blk, index, data)
#define WRITE_L3_ENTRY_IPV4_UNICASTm(unit, blk, index, data) \
	soc_mem_write(unit, L3_ENTRY_IPV4_UNICASTm, blk, index, data)

#define READ_L3_ENTRY_IPV4_UNICAST_SCRATCHm(unit, blk, index, data) \
	soc_mem_read(unit, L3_ENTRY_IPV4_UNICAST_SCRATCHm, blk, index, data)
#define WRITE_L3_ENTRY_IPV4_UNICAST_SCRATCHm(unit, blk, index, data) \
	soc_mem_write(unit, L3_ENTRY_IPV4_UNICAST_SCRATCHm, blk, index, data)

#define READ_L3_ENTRY_IPV6_MULTICASTm(unit, blk, index, data) \
	soc_mem_read(unit, L3_ENTRY_IPV6_MULTICASTm, blk, index, data)
#define WRITE_L3_ENTRY_IPV6_MULTICASTm(unit, blk, index, data) \
	soc_mem_write(unit, L3_ENTRY_IPV6_MULTICASTm, blk, index, data)

#define READ_L3_ENTRY_IPV6_MULTICAST_SCRATCHm(unit, blk, index, data) \
	soc_mem_read(unit, L3_ENTRY_IPV6_MULTICAST_SCRATCHm, blk, index, data)
#define WRITE_L3_ENTRY_IPV6_MULTICAST_SCRATCHm(unit, blk, index, data) \
	soc_mem_write(unit, L3_ENTRY_IPV6_MULTICAST_SCRATCHm, blk, index, data)

#define READ_L3_ENTRY_IPV6_UNICASTm(unit, blk, index, data) \
	soc_mem_read(unit, L3_ENTRY_IPV6_UNICASTm, blk, index, data)
#define WRITE_L3_ENTRY_IPV6_UNICASTm(unit, blk, index, data) \
	soc_mem_write(unit, L3_ENTRY_IPV6_UNICASTm, blk, index, data)

#define READ_L3_ENTRY_IPV6_UNICAST_SCRATCHm(unit, blk, index, data) \
	soc_mem_read(unit, L3_ENTRY_IPV6_UNICAST_SCRATCHm, blk, index, data)
#define WRITE_L3_ENTRY_IPV6_UNICAST_SCRATCHm(unit, blk, index, data) \
	soc_mem_write(unit, L3_ENTRY_IPV6_UNICAST_SCRATCHm, blk, index, data)

#define READ_L3_ENTRY_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L3_ENTRY_ONLYm, blk, index, data)
#define WRITE_L3_ENTRY_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L3_ENTRY_ONLYm, blk, index, data)

#define READ_L3_ENTRY_V4m(unit, blk, index, data) \
	soc_mem_read(unit, L3_ENTRY_V4m, blk, index, data)
#define WRITE_L3_ENTRY_V4m(unit, blk, index, data) \
	soc_mem_write(unit, L3_ENTRY_V4m, blk, index, data)

#define READ_L3_ENTRY_V6m(unit, blk, index, data) \
	soc_mem_read(unit, L3_ENTRY_V6m, blk, index, data)
#define WRITE_L3_ENTRY_V6m(unit, blk, index, data) \
	soc_mem_write(unit, L3_ENTRY_V6m, blk, index, data)

#define READ_L3_ENTRY_VALID_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, L3_ENTRY_VALID_ONLYm, blk, index, data)
#define WRITE_L3_ENTRY_VALID_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, L3_ENTRY_VALID_ONLYm, blk, index, data)

#define READ_L3_IIFm(unit, blk, index, data) \
	soc_mem_read(unit, L3_IIFm, blk, index, data)
#define WRITE_L3_IIFm(unit, blk, index, data) \
	soc_mem_write(unit, L3_IIFm, blk, index, data)

#define READ_L3_INTFm(unit, blk, index, data) \
	soc_mem_read(unit, L3_INTFm, blk, index, data)
#define WRITE_L3_INTFm(unit, blk, index, data) \
	soc_mem_write(unit, L3_INTFm, blk, index, data)

#define READ_L3_IPMCm(unit, blk, index, data) \
	soc_mem_read(unit, L3_IPMCm, blk, index, data)
#define WRITE_L3_IPMCm(unit, blk, index, data) \
	soc_mem_write(unit, L3_IPMCm, blk, index, data)

#define READ_L3_L3m(unit, blk, index, data) \
	soc_mem_read(unit, L3_L3m, blk, index, data)
#define WRITE_L3_L3m(unit, blk, index, data) \
	soc_mem_write(unit, L3_L3m, blk, index, data)

#define READ_L3_L3INTFm(unit, blk, index, data) \
	soc_mem_read(unit, L3_L3INTFm, blk, index, data)
#define WRITE_L3_L3INTFm(unit, blk, index, data) \
	soc_mem_write(unit, L3_L3INTFm, blk, index, data)

#define READ_L3_LPM_HITBITm(unit, blk, index, data) \
	soc_mem_read(unit, L3_LPM_HITBITm, blk, index, data)
#define WRITE_L3_LPM_HITBITm(unit, blk, index, data) \
	soc_mem_write(unit, L3_LPM_HITBITm, blk, index, data)

#define READ_L3_MTU_VALUESm(unit, blk, index, data) \
	soc_mem_read(unit, L3_MTU_VALUESm, blk, index, data)
#define WRITE_L3_MTU_VALUESm(unit, blk, index, data) \
	soc_mem_write(unit, L3_MTU_VALUESm, blk, index, data)

#define READ_L3_TUNNELm(unit, blk, index, data) \
	soc_mem_read(unit, L3_TUNNELm, blk, index, data)
#define WRITE_L3_TUNNELm(unit, blk, index, data) \
	soc_mem_write(unit, L3_TUNNELm, blk, index, data)

#define READ_L3_TUNNEL_DATAm(unit, blk, index, data) \
	soc_mem_read(unit, L3_TUNNEL_DATAm, blk, index, data)
#define WRITE_L3_TUNNEL_DATAm(unit, blk, index, data) \
	soc_mem_write(unit, L3_TUNNEL_DATAm, blk, index, data)

#define READ_L3_TUNNEL_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, L3_TUNNEL_TCAMm, blk, index, data)
#define WRITE_L3_TUNNEL_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, L3_TUNNEL_TCAMm, blk, index, data)

#define READ_LPORT_TABm(unit, blk, index, data) \
	soc_mem_read(unit, LPORT_TABm, blk, index, data)
#define WRITE_LPORT_TABm(unit, blk, index, data) \
	soc_mem_write(unit, LPORT_TABm, blk, index, data)

#define READ_MAC_BLOCKm(unit, blk, index, data) \
	soc_mem_read(unit, MAC_BLOCKm, blk, index, data)
#define WRITE_MAC_BLOCKm(unit, blk, index, data) \
	soc_mem_write(unit, MAC_BLOCKm, blk, index, data)

#define READ_MAC_LIMIT_PORT_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, MAC_LIMIT_PORT_MAP_TABLEm, blk, index, data)
#define WRITE_MAC_LIMIT_PORT_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, MAC_LIMIT_PORT_MAP_TABLEm, blk, index, data)

#define READ_MAC_LIMIT_TRUNK_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, MAC_LIMIT_TRUNK_MAP_TABLEm, blk, index, data)
#define WRITE_MAC_LIMIT_TRUNK_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, MAC_LIMIT_TRUNK_MAP_TABLEm, blk, index, data)

#define READ_MARLm(unit, blk, index, data) \
	soc_mem_read(unit, MARLm, blk, index, data)
#define WRITE_MARLm(unit, blk, index, data) \
	soc_mem_write(unit, MARLm, blk, index, data)

#define READ_MCU_CHANNEL3_DATAm(unit, blk, index, data) \
	soc_mem_read(unit, MCU_CHANNEL3_DATAm, blk, index, data)
#define WRITE_MCU_CHANNEL3_DATAm(unit, blk, index, data) \
	soc_mem_write(unit, MCU_CHANNEL3_DATAm, blk, index, data)

#define READ_MEM_EGR_MODMAPm(unit, blk, index, data) \
	soc_mem_read(unit, MEM_EGR_MODMAPm, blk, index, data)
#define WRITE_MEM_EGR_MODMAPm(unit, blk, index, data) \
	soc_mem_write(unit, MEM_EGR_MODMAPm, blk, index, data)

#define READ_MEM_INGBUFm(unit, blk, index, data) \
	soc_mem_read(unit, MEM_INGBUFm, blk, index, data)
#define WRITE_MEM_INGBUFm(unit, blk, index, data) \
	soc_mem_write(unit, MEM_INGBUFm, blk, index, data)

#define READ_MEM_ING_MODMAPm(unit, blk, index, data) \
	soc_mem_read(unit, MEM_ING_MODMAPm, blk, index, data)
#define WRITE_MEM_ING_MODMAPm(unit, blk, index, data) \
	soc_mem_write(unit, MEM_ING_MODMAPm, blk, index, data)

#define READ_MEM_ING_SRCMODBLKm(unit, blk, index, data) \
	soc_mem_read(unit, MEM_ING_SRCMODBLKm, blk, index, data)
#define WRITE_MEM_ING_SRCMODBLKm(unit, blk, index, data) \
	soc_mem_write(unit, MEM_ING_SRCMODBLKm, blk, index, data)

#define READ_MEM_IPMCm(unit, blk, index, data) \
	soc_mem_read(unit, MEM_IPMCm, blk, index, data)
#define WRITE_MEM_IPMCm(unit, blk, index, data) \
	soc_mem_write(unit, MEM_IPMCm, blk, index, data)

#define READ_MEM_LLAm(unit, blk, index, data) \
	soc_mem_read(unit, MEM_LLAm, blk, index, data)
#define WRITE_MEM_LLAm(unit, blk, index, data) \
	soc_mem_write(unit, MEM_LLAm, blk, index, data)

#define READ_MEM_MCm(unit, blk, index, data) \
	soc_mem_read(unit, MEM_MCm, blk, index, data)
#define WRITE_MEM_MCm(unit, blk, index, data) \
	soc_mem_write(unit, MEM_MCm, blk, index, data)

#define READ_MEM_PPm(unit, blk, index, data) \
	soc_mem_read(unit, MEM_PPm, blk, index, data)
#define WRITE_MEM_PPm(unit, blk, index, data) \
	soc_mem_write(unit, MEM_PPm, blk, index, data)

#define READ_MEM_TRUNK_PORT_POOLm(unit, blk, index, data) \
	soc_mem_read(unit, MEM_TRUNK_PORT_POOLm, blk, index, data)
#define WRITE_MEM_TRUNK_PORT_POOLm(unit, blk, index, data) \
	soc_mem_write(unit, MEM_TRUNK_PORT_POOLm, blk, index, data)

#define READ_MEM_UCm(unit, blk, index, data) \
	soc_mem_read(unit, MEM_UCm, blk, index, data)
#define WRITE_MEM_UCm(unit, blk, index, data) \
	soc_mem_write(unit, MEM_UCm, blk, index, data)

#define READ_MEM_VIDm(unit, blk, index, data) \
	soc_mem_read(unit, MEM_VIDm, blk, index, data)
#define WRITE_MEM_VIDm(unit, blk, index, data) \
	soc_mem_write(unit, MEM_VIDm, blk, index, data)

#define READ_MEM_XQm(unit, blk, index, data) \
	soc_mem_read(unit, MEM_XQm, blk, index, data)
#define WRITE_MEM_XQm(unit, blk, index, data) \
	soc_mem_write(unit, MEM_XQm, blk, index, data)

#define READ_MEM_XQ_PTRSm(unit, blk, index, data) \
	soc_mem_read(unit, MEM_XQ_PTRSm, blk, index, data)
#define WRITE_MEM_XQ_PTRSm(unit, blk, index, data) \
	soc_mem_write(unit, MEM_XQ_PTRSm, blk, index, data)

#define READ_MMU_AGING_CTRm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_AGING_CTRm, blk, index, data)
#define WRITE_MMU_AGING_CTRm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_AGING_CTRm, blk, index, data)

#define READ_MMU_AGING_EXPm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_AGING_EXPm, blk, index, data)
#define WRITE_MMU_AGING_EXPm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_AGING_EXPm, blk, index, data)

#define READ_MMU_CBPCELLHEADERm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPCELLHEADERm, blk, index, data)
#define WRITE_MMU_CBPCELLHEADERm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPCELLHEADERm, blk, index, data)

#define READ_MMU_CBPDATA0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA0m, blk, index, data)
#define WRITE_MMU_CBPDATA0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA0m, blk, index, data)

#define READ_MMU_CBPDATA1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA1m, blk, index, data)
#define WRITE_MMU_CBPDATA1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA1m, blk, index, data)

#define READ_MMU_CBPDATA2m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA2m, blk, index, data)
#define WRITE_MMU_CBPDATA2m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA2m, blk, index, data)

#define READ_MMU_CBPDATA3m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA3m, blk, index, data)
#define WRITE_MMU_CBPDATA3m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA3m, blk, index, data)

#define READ_MMU_CBPDATA4m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA4m, blk, index, data)
#define WRITE_MMU_CBPDATA4m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA4m, blk, index, data)

#define READ_MMU_CBPDATA5m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA5m, blk, index, data)
#define WRITE_MMU_CBPDATA5m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA5m, blk, index, data)

#define READ_MMU_CBPDATA6m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA6m, blk, index, data)
#define WRITE_MMU_CBPDATA6m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA6m, blk, index, data)

#define READ_MMU_CBPDATA7m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA7m, blk, index, data)
#define WRITE_MMU_CBPDATA7m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA7m, blk, index, data)

#define READ_MMU_CBPDATA8m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA8m, blk, index, data)
#define WRITE_MMU_CBPDATA8m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA8m, blk, index, data)

#define READ_MMU_CBPDATA9m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA9m, blk, index, data)
#define WRITE_MMU_CBPDATA9m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA9m, blk, index, data)

#define READ_MMU_CBPDATA10m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA10m, blk, index, data)
#define WRITE_MMU_CBPDATA10m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA10m, blk, index, data)

#define READ_MMU_CBPDATA11m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA11m, blk, index, data)
#define WRITE_MMU_CBPDATA11m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA11m, blk, index, data)

#define READ_MMU_CBPDATA12m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA12m, blk, index, data)
#define WRITE_MMU_CBPDATA12m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA12m, blk, index, data)

#define READ_MMU_CBPDATA13m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA13m, blk, index, data)
#define WRITE_MMU_CBPDATA13m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA13m, blk, index, data)

#define READ_MMU_CBPDATA14m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA14m, blk, index, data)
#define WRITE_MMU_CBPDATA14m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA14m, blk, index, data)

#define READ_MMU_CBPDATA15m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA15m, blk, index, data)
#define WRITE_MMU_CBPDATA15m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA15m, blk, index, data)

#define READ_MMU_CBPDATA16m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA16m, blk, index, data)
#define WRITE_MMU_CBPDATA16m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA16m, blk, index, data)

#define READ_MMU_CBPDATA17m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA17m, blk, index, data)
#define WRITE_MMU_CBPDATA17m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA17m, blk, index, data)

#define READ_MMU_CBPDATA18m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA18m, blk, index, data)
#define WRITE_MMU_CBPDATA18m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA18m, blk, index, data)

#define READ_MMU_CBPDATA19m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA19m, blk, index, data)
#define WRITE_MMU_CBPDATA19m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA19m, blk, index, data)

#define READ_MMU_CBPDATA20m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA20m, blk, index, data)
#define WRITE_MMU_CBPDATA20m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA20m, blk, index, data)

#define READ_MMU_CBPDATA21m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA21m, blk, index, data)
#define WRITE_MMU_CBPDATA21m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA21m, blk, index, data)

#define READ_MMU_CBPDATA22m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA22m, blk, index, data)
#define WRITE_MMU_CBPDATA22m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA22m, blk, index, data)

#define READ_MMU_CBPDATA23m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA23m, blk, index, data)
#define WRITE_MMU_CBPDATA23m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA23m, blk, index, data)

#define READ_MMU_CBPDATA24m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA24m, blk, index, data)
#define WRITE_MMU_CBPDATA24m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA24m, blk, index, data)

#define READ_MMU_CBPDATA25m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA25m, blk, index, data)
#define WRITE_MMU_CBPDATA25m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA25m, blk, index, data)

#define READ_MMU_CBPDATA26m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA26m, blk, index, data)
#define WRITE_MMU_CBPDATA26m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA26m, blk, index, data)

#define READ_MMU_CBPDATA27m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA27m, blk, index, data)
#define WRITE_MMU_CBPDATA27m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA27m, blk, index, data)

#define READ_MMU_CBPDATA28m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA28m, blk, index, data)
#define WRITE_MMU_CBPDATA28m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA28m, blk, index, data)

#define READ_MMU_CBPDATA29m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA29m, blk, index, data)
#define WRITE_MMU_CBPDATA29m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA29m, blk, index, data)

#define READ_MMU_CBPDATA30m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA30m, blk, index, data)
#define WRITE_MMU_CBPDATA30m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA30m, blk, index, data)

#define READ_MMU_CBPDATA31m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPDATA31m, blk, index, data)
#define WRITE_MMU_CBPDATA31m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPDATA31m, blk, index, data)

#define READ_MMU_CBPPKTHEADER0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTHEADER0m, blk, index, data)
#define WRITE_MMU_CBPPKTHEADER0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTHEADER0m, blk, index, data)

#define READ_MMU_CBPPKTHEADER1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTHEADER1m, blk, index, data)
#define WRITE_MMU_CBPPKTHEADER1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTHEADER1m, blk, index, data)

#define READ_MMU_CBPPKTHEADER2m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTHEADER2m, blk, index, data)
#define WRITE_MMU_CBPPKTHEADER2m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTHEADER2m, blk, index, data)

#define READ_MMU_CBPPKTHEADER0_MEM0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTHEADER0_MEM0m, blk, index, data)
#define WRITE_MMU_CBPPKTHEADER0_MEM0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTHEADER0_MEM0m, blk, index, data)

#define READ_MMU_CBPPKTHEADER0_MEM1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTHEADER0_MEM1m, blk, index, data)
#define WRITE_MMU_CBPPKTHEADER0_MEM1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTHEADER0_MEM1m, blk, index, data)

#define READ_MMU_CBPPKTHEADER0_MEM2m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTHEADER0_MEM2m, blk, index, data)
#define WRITE_MMU_CBPPKTHEADER0_MEM2m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTHEADER0_MEM2m, blk, index, data)

#define READ_MMU_CBPPKTHEADER0_MEM3m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTHEADER0_MEM3m, blk, index, data)
#define WRITE_MMU_CBPPKTHEADER0_MEM3m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTHEADER0_MEM3m, blk, index, data)

#define READ_MMU_CBPPKTHEADER1_MEM0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTHEADER1_MEM0m, blk, index, data)
#define WRITE_MMU_CBPPKTHEADER1_MEM0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTHEADER1_MEM0m, blk, index, data)

#define READ_MMU_CBPPKTHEADER1_MEM1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTHEADER1_MEM1m, blk, index, data)
#define WRITE_MMU_CBPPKTHEADER1_MEM1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTHEADER1_MEM1m, blk, index, data)

#define READ_MMU_CBPPKTHEADER1_MEM2m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTHEADER1_MEM2m, blk, index, data)
#define WRITE_MMU_CBPPKTHEADER1_MEM2m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTHEADER1_MEM2m, blk, index, data)

#define READ_MMU_CBPPKTHEADERCPUm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTHEADERCPUm, blk, index, data)
#define WRITE_MMU_CBPPKTHEADERCPUm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTHEADERCPUm, blk, index, data)

#define READ_MMU_CBPPKTLENGTHm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CBPPKTLENGTHm, blk, index, data)
#define WRITE_MMU_CBPPKTLENGTHm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CBPPKTLENGTHm, blk, index, data)

#define READ_MMU_CCPm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CCPm, blk, index, data)
#define WRITE_MMU_CCPm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CCPm, blk, index, data)

#define READ_MMU_CCPTRm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CCPTRm, blk, index, data)
#define WRITE_MMU_CCPTRm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CCPTRm, blk, index, data)

#define READ_MMU_CCP_MEMm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CCP_MEMm, blk, index, data)
#define WRITE_MMU_CCP_MEMm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CCP_MEMm, blk, index, data)

#define READ_MMU_CELLCHKm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CELLCHKm, blk, index, data)
#define WRITE_MMU_CELLCHKm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CELLCHKm, blk, index, data)

#define READ_MMU_CELLLINKm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CELLLINKm, blk, index, data)
#define WRITE_MMU_CELLLINKm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CELLLINKm, blk, index, data)

#define READ_MMU_CELLPTRSWAP_CG0_CH0_HIm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CELLPTRSWAP_CG0_CH0_HIm, blk, index, data)
#define WRITE_MMU_CELLPTRSWAP_CG0_CH0_HIm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CELLPTRSWAP_CG0_CH0_HIm, blk, index, data)

#define READ_MMU_CELLPTRSWAP_CG0_CH0_LOm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CELLPTRSWAP_CG0_CH0_LOm, blk, index, data)
#define WRITE_MMU_CELLPTRSWAP_CG0_CH0_LOm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CELLPTRSWAP_CG0_CH0_LOm, blk, index, data)

#define READ_MMU_CELLPTRSWAP_CG0_CH1_HIm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CELLPTRSWAP_CG0_CH1_HIm, blk, index, data)
#define WRITE_MMU_CELLPTRSWAP_CG0_CH1_HIm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CELLPTRSWAP_CG0_CH1_HIm, blk, index, data)

#define READ_MMU_CELLPTRSWAP_CG0_CH1_LOm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CELLPTRSWAP_CG0_CH1_LOm, blk, index, data)
#define WRITE_MMU_CELLPTRSWAP_CG0_CH1_LOm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CELLPTRSWAP_CG0_CH1_LOm, blk, index, data)

#define READ_MMU_CELLPTRSWAP_CG1_CH0_HIm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CELLPTRSWAP_CG1_CH0_HIm, blk, index, data)
#define WRITE_MMU_CELLPTRSWAP_CG1_CH0_HIm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CELLPTRSWAP_CG1_CH0_HIm, blk, index, data)

#define READ_MMU_CELLPTRSWAP_CG1_CH0_LOm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CELLPTRSWAP_CG1_CH0_LOm, blk, index, data)
#define WRITE_MMU_CELLPTRSWAP_CG1_CH0_LOm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CELLPTRSWAP_CG1_CH0_LOm, blk, index, data)

#define READ_MMU_CELLPTRSWAP_CG1_CH1_LOm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CELLPTRSWAP_CG1_CH1_LOm, blk, index, data)
#define WRITE_MMU_CELLPTRSWAP_CG1_CH1_LOm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CELLPTRSWAP_CG1_CH1_LOm, blk, index, data)

#define READ_MMU_CELLPTRSWAP_CH0_HIm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CELLPTRSWAP_CH0_HIm, blk, index, data)
#define WRITE_MMU_CELLPTRSWAP_CH0_HIm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CELLPTRSWAP_CH0_HIm, blk, index, data)

#define READ_MMU_CELLPTRSWAP_CH0_LOm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CELLPTRSWAP_CH0_LOm, blk, index, data)
#define WRITE_MMU_CELLPTRSWAP_CH0_LOm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CELLPTRSWAP_CH0_LOm, blk, index, data)

#define READ_MMU_CELLPTRSWAP_CH1_HIm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CELLPTRSWAP_CH1_HIm, blk, index, data)
#define WRITE_MMU_CELLPTRSWAP_CH1_HIm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CELLPTRSWAP_CH1_HIm, blk, index, data)

#define READ_MMU_CELLPTRSWAP_CH1_LOm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CELLPTRSWAP_CH1_LOm, blk, index, data)
#define WRITE_MMU_CELLPTRSWAP_CH1_LOm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CELLPTRSWAP_CH1_LOm, blk, index, data)

#define READ_MMU_CFAPm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CFAPm, blk, index, data)
#define WRITE_MMU_CFAPm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CFAPm, blk, index, data)

#define READ_MMU_CFAP_MEMm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_CFAP_MEMm, blk, index, data)
#define WRITE_MMU_CFAP_MEMm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_CFAP_MEMm, blk, index, data)

#define READ_MMU_FIRSTCELLPTR_CG0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_FIRSTCELLPTR_CG0m, blk, index, data)
#define WRITE_MMU_FIRSTCELLPTR_CG0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_FIRSTCELLPTR_CG0m, blk, index, data)

#define READ_MMU_FIRSTCELLPTR_CG1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_FIRSTCELLPTR_CG1m, blk, index, data)
#define WRITE_MMU_FIRSTCELLPTR_CG1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_FIRSTCELLPTR_CG1m, blk, index, data)

#define READ_MMU_IBPSTATUSm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IBPSTATUSm, blk, index, data)
#define WRITE_MMU_IBPSTATUSm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IBPSTATUSm, blk, index, data)

#define READ_MMU_IBSm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IBSm, blk, index, data)
#define WRITE_MMU_IBSm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IBSm, blk, index, data)

#define READ_MMU_IBS_CG0_CH0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IBS_CG0_CH0m, blk, index, data)
#define WRITE_MMU_IBS_CG0_CH0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IBS_CG0_CH0m, blk, index, data)

#define READ_MMU_IBS_CG0_CH1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IBS_CG0_CH1m, blk, index, data)
#define WRITE_MMU_IBS_CG0_CH1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IBS_CG0_CH1m, blk, index, data)

#define READ_MMU_IBS_CG1_CH0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IBS_CG1_CH0m, blk, index, data)
#define WRITE_MMU_IBS_CG1_CH0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IBS_CG1_CH0m, blk, index, data)

#define READ_MMU_IBS_CG1_CH1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IBS_CG1_CH1m, blk, index, data)
#define WRITE_MMU_IBS_CG1_CH1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IBS_CG1_CH1m, blk, index, data)

#define READ_MMU_INGPKTCELLLIMITIBPm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_INGPKTCELLLIMITIBPm, blk, index, data)
#define WRITE_MMU_INGPKTCELLLIMITIBPm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_INGPKTCELLLIMITIBPm, blk, index, data)

#define READ_MMU_INGPKTCELLUSEm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_INGPKTCELLUSEm, blk, index, data)
#define WRITE_MMU_INGPKTCELLUSEm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_INGPKTCELLUSEm, blk, index, data)

#define READ_MMU_IPMCBITMAP_CG0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMCBITMAP_CG0m, blk, index, data)
#define WRITE_MMU_IPMCBITMAP_CG0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMCBITMAP_CG0m, blk, index, data)

#define READ_MMU_IPMCBITMAP_CG1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMCBITMAP_CG1m, blk, index, data)
#define WRITE_MMU_IPMCBITMAP_CG1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMCBITMAP_CG1m, blk, index, data)

#define READ_MMU_IPMC_GROUP_TBL0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_GROUP_TBL0m, blk, index, data)
#define WRITE_MMU_IPMC_GROUP_TBL0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_GROUP_TBL0m, blk, index, data)

#define READ_MMU_IPMC_GROUP_TBL1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_GROUP_TBL1m, blk, index, data)
#define WRITE_MMU_IPMC_GROUP_TBL1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_GROUP_TBL1m, blk, index, data)

#define READ_MMU_IPMC_GROUP_TBL2m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_GROUP_TBL2m, blk, index, data)
#define WRITE_MMU_IPMC_GROUP_TBL2m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_GROUP_TBL2m, blk, index, data)

#define READ_MMU_IPMC_GROUP_TBL3m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_GROUP_TBL3m, blk, index, data)
#define WRITE_MMU_IPMC_GROUP_TBL3m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_GROUP_TBL3m, blk, index, data)

#define READ_MMU_IPMC_GROUP_TBL4m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_GROUP_TBL4m, blk, index, data)
#define WRITE_MMU_IPMC_GROUP_TBL4m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_GROUP_TBL4m, blk, index, data)

#define READ_MMU_IPMC_GROUP_TBL5m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_GROUP_TBL5m, blk, index, data)
#define WRITE_MMU_IPMC_GROUP_TBL5m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_GROUP_TBL5m, blk, index, data)

#define READ_MMU_IPMC_GROUP_TBL6m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_GROUP_TBL6m, blk, index, data)
#define WRITE_MMU_IPMC_GROUP_TBL6m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_GROUP_TBL6m, blk, index, data)

#define READ_MMU_IPMC_GROUP_TBL7m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_GROUP_TBL7m, blk, index, data)
#define WRITE_MMU_IPMC_GROUP_TBL7m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_GROUP_TBL7m, blk, index, data)

#define READ_MMU_IPMC_GROUP_TBL8m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_GROUP_TBL8m, blk, index, data)
#define WRITE_MMU_IPMC_GROUP_TBL8m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_GROUP_TBL8m, blk, index, data)

#define READ_MMU_IPMC_INDEXm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_INDEXm, blk, index, data)
#define WRITE_MMU_IPMC_INDEXm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_INDEXm, blk, index, data)

#define READ_MMU_IPMC_PTRm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_PTRm, blk, index, data)
#define WRITE_MMU_IPMC_PTRm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_PTRm, blk, index, data)

#define READ_MMU_IPMC_REP_10G_MEMORYm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_REP_10G_MEMORYm, blk, index, data)
#define WRITE_MMU_IPMC_REP_10G_MEMORYm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_REP_10G_MEMORYm, blk, index, data)

#define READ_MMU_IPMC_VLAN_TBLm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_VLAN_TBLm, blk, index, data)
#define WRITE_MMU_IPMC_VLAN_TBLm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_VLAN_TBLm, blk, index, data)

#define READ_MMU_IPMC_VLAN_TBL_MEM0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_VLAN_TBL_MEM0m, blk, index, data)
#define WRITE_MMU_IPMC_VLAN_TBL_MEM0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_VLAN_TBL_MEM0m, blk, index, data)

#define READ_MMU_IPMC_VLAN_TBL_MEM1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_IPMC_VLAN_TBL_MEM1m, blk, index, data)
#define WRITE_MMU_IPMC_VLAN_TBL_MEM1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_IPMC_VLAN_TBL_MEM1m, blk, index, data)

#define READ_MMU_MAX_BUCKET_GPORTm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MAX_BUCKET_GPORTm, blk, index, data)
#define WRITE_MMU_MAX_BUCKET_GPORTm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MAX_BUCKET_GPORTm, blk, index, data)

#define READ_MMU_MEMORIES1_AGING_CTRm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MEMORIES1_AGING_CTRm, blk, index, data)
#define WRITE_MMU_MEMORIES1_AGING_CTRm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MEMORIES1_AGING_CTRm, blk, index, data)

#define READ_MMU_MEMORIES1_AGING_EXPm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MEMORIES1_AGING_EXPm, blk, index, data)
#define WRITE_MMU_MEMORIES1_AGING_EXPm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MEMORIES1_AGING_EXPm, blk, index, data)

#define READ_MMU_MEMORIES1_E2EHOL_BM_0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MEMORIES1_E2EHOL_BM_0m, blk, index, data)
#define WRITE_MMU_MEMORIES1_E2EHOL_BM_0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MEMORIES1_E2EHOL_BM_0m, blk, index, data)

#define READ_MMU_MEMORIES1_E2EHOL_BM_1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MEMORIES1_E2EHOL_BM_1m, blk, index, data)
#define WRITE_MMU_MEMORIES1_E2EHOL_BM_1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MEMORIES1_E2EHOL_BM_1m, blk, index, data)

#define READ_MMU_MEMORIES1_E2EHOL_BM_2m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MEMORIES1_E2EHOL_BM_2m, blk, index, data)
#define WRITE_MMU_MEMORIES1_E2EHOL_BM_2m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MEMORIES1_E2EHOL_BM_2m, blk, index, data)

#define READ_MMU_MEMORIES1_IPMCREPm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MEMORIES1_IPMCREPm, blk, index, data)
#define WRITE_MMU_MEMORIES1_IPMCREPm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MEMORIES1_IPMCREPm, blk, index, data)

#define READ_MMU_MEMORIES1_IPMC_GROUP_TBLm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MEMORIES1_IPMC_GROUP_TBLm, blk, index, data)
#define WRITE_MMU_MEMORIES1_IPMC_GROUP_TBLm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MEMORIES1_IPMC_GROUP_TBLm, blk, index, data)

#define READ_MMU_MEMORIES1_IPMC_VLAN_TBLm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MEMORIES1_IPMC_VLAN_TBLm, blk, index, data)
#define WRITE_MMU_MEMORIES1_IPMC_VLAN_TBLm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MEMORIES1_IPMC_VLAN_TBLm, blk, index, data)

#define READ_MMU_MEMORIES1_MSTP_TBLm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MEMORIES1_MSTP_TBLm, blk, index, data)
#define WRITE_MMU_MEMORIES1_MSTP_TBLm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MEMORIES1_MSTP_TBLm, blk, index, data)

#define READ_MMU_MEMORIES1_ST_PORT_TBLm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MEMORIES1_ST_PORT_TBLm, blk, index, data)
#define WRITE_MMU_MEMORIES1_ST_PORT_TBLm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MEMORIES1_ST_PORT_TBLm, blk, index, data)

#define READ_MMU_MEMORIES2_EGR_TRUNK_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MEMORIES2_EGR_TRUNK_MAPm, blk, index, data)
#define WRITE_MMU_MEMORIES2_EGR_TRUNK_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MEMORIES2_EGR_TRUNK_MAPm, blk, index, data)

#define READ_MMU_MEMORIES2_SRC_TRUNK_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MEMORIES2_SRC_TRUNK_MAPm, blk, index, data)
#define WRITE_MMU_MEMORIES2_SRC_TRUNK_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MEMORIES2_SRC_TRUNK_MAPm, blk, index, data)

#define READ_MMU_MIN_BUCKET_GPORTm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_MIN_BUCKET_GPORTm, blk, index, data)
#define WRITE_MMU_MIN_BUCKET_GPORTm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_MIN_BUCKET_GPORTm, blk, index, data)

#define READ_MMU_PBM_COS_CCPTR_STATUS_CG0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PBM_COS_CCPTR_STATUS_CG0m, blk, index, data)
#define WRITE_MMU_PBM_COS_CCPTR_STATUS_CG0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PBM_COS_CCPTR_STATUS_CG0m, blk, index, data)

#define READ_MMU_PBM_COS_CCPTR_STATUS_CG1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PBM_COS_CCPTR_STATUS_CG1m, blk, index, data)
#define WRITE_MMU_PBM_COS_CCPTR_STATUS_CG1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PBM_COS_CCPTR_STATUS_CG1m, blk, index, data)

#define READ_MMU_PFAP_MEMm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PFAP_MEMm, blk, index, data)
#define WRITE_MMU_PFAP_MEMm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PFAP_MEMm, blk, index, data)

#define READ_MMU_PKTLINK0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK0m, blk, index, data)
#define WRITE_MMU_PKTLINK0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK0m, blk, index, data)

#define READ_MMU_PKTLINK1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK1m, blk, index, data)
#define WRITE_MMU_PKTLINK1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK1m, blk, index, data)

#define READ_MMU_PKTLINK2m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK2m, blk, index, data)
#define WRITE_MMU_PKTLINK2m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK2m, blk, index, data)

#define READ_MMU_PKTLINK3m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK3m, blk, index, data)
#define WRITE_MMU_PKTLINK3m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK3m, blk, index, data)

#define READ_MMU_PKTLINK4m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK4m, blk, index, data)
#define WRITE_MMU_PKTLINK4m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK4m, blk, index, data)

#define READ_MMU_PKTLINK5m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK5m, blk, index, data)
#define WRITE_MMU_PKTLINK5m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK5m, blk, index, data)

#define READ_MMU_PKTLINK6m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK6m, blk, index, data)
#define WRITE_MMU_PKTLINK6m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK6m, blk, index, data)

#define READ_MMU_PKTLINK7m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK7m, blk, index, data)
#define WRITE_MMU_PKTLINK7m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK7m, blk, index, data)

#define READ_MMU_PKTLINK8m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK8m, blk, index, data)
#define WRITE_MMU_PKTLINK8m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK8m, blk, index, data)

#define READ_MMU_PKTLINK9m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK9m, blk, index, data)
#define WRITE_MMU_PKTLINK9m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK9m, blk, index, data)

#define READ_MMU_PKTLINK10m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK10m, blk, index, data)
#define WRITE_MMU_PKTLINK10m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK10m, blk, index, data)

#define READ_MMU_PKTLINK11m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK11m, blk, index, data)
#define WRITE_MMU_PKTLINK11m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK11m, blk, index, data)

#define READ_MMU_PKTLINK12m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK12m, blk, index, data)
#define WRITE_MMU_PKTLINK12m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK12m, blk, index, data)

#define READ_MMU_PKTLINK13m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK13m, blk, index, data)
#define WRITE_MMU_PKTLINK13m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK13m, blk, index, data)

#define READ_MMU_PKTLINK14m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK14m, blk, index, data)
#define WRITE_MMU_PKTLINK14m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK14m, blk, index, data)

#define READ_MMU_PKTLINK15m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK15m, blk, index, data)
#define WRITE_MMU_PKTLINK15m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK15m, blk, index, data)

#define READ_MMU_PKTLINK16m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK16m, blk, index, data)
#define WRITE_MMU_PKTLINK16m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK16m, blk, index, data)

#define READ_MMU_PKTLINK17m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK17m, blk, index, data)
#define WRITE_MMU_PKTLINK17m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK17m, blk, index, data)

#define READ_MMU_PKTLINK18m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK18m, blk, index, data)
#define WRITE_MMU_PKTLINK18m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK18m, blk, index, data)

#define READ_MMU_PKTLINK19m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK19m, blk, index, data)
#define WRITE_MMU_PKTLINK19m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK19m, blk, index, data)

#define READ_MMU_PKTLINK20m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK20m, blk, index, data)
#define WRITE_MMU_PKTLINK20m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK20m, blk, index, data)

#define READ_MMU_PKTLINK21m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK21m, blk, index, data)
#define WRITE_MMU_PKTLINK21m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK21m, blk, index, data)

#define READ_MMU_PKTLINK22m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK22m, blk, index, data)
#define WRITE_MMU_PKTLINK22m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK22m, blk, index, data)

#define READ_MMU_PKTLINK23m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK23m, blk, index, data)
#define WRITE_MMU_PKTLINK23m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK23m, blk, index, data)

#define READ_MMU_PKTLINK24m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK24m, blk, index, data)
#define WRITE_MMU_PKTLINK24m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK24m, blk, index, data)

#define READ_MMU_PKTLINK25m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK25m, blk, index, data)
#define WRITE_MMU_PKTLINK25m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK25m, blk, index, data)

#define READ_MMU_PKTLINK26m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK26m, blk, index, data)
#define WRITE_MMU_PKTLINK26m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK26m, blk, index, data)

#define READ_MMU_PKTLINK27m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK27m, blk, index, data)
#define WRITE_MMU_PKTLINK27m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK27m, blk, index, data)

#define READ_MMU_PKTLINK28m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK28m, blk, index, data)
#define WRITE_MMU_PKTLINK28m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK28m, blk, index, data)

#define READ_MMU_PKTLINK29m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK29m, blk, index, data)
#define WRITE_MMU_PKTLINK29m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK29m, blk, index, data)

#define READ_MMU_PKTLINK30m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK30m, blk, index, data)
#define WRITE_MMU_PKTLINK30m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK30m, blk, index, data)

#define READ_MMU_PKTLINK31m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK31m, blk, index, data)
#define WRITE_MMU_PKTLINK31m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK31m, blk, index, data)

#define READ_MMU_PKTLINK32m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK32m, blk, index, data)
#define WRITE_MMU_PKTLINK32m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK32m, blk, index, data)

#define READ_MMU_PKTLINK33m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK33m, blk, index, data)
#define WRITE_MMU_PKTLINK33m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK33m, blk, index, data)

#define READ_MMU_PKTLINK34m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK34m, blk, index, data)
#define WRITE_MMU_PKTLINK34m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK34m, blk, index, data)

#define READ_MMU_PKTLINK35m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK35m, blk, index, data)
#define WRITE_MMU_PKTLINK35m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK35m, blk, index, data)

#define READ_MMU_PKTLINK36m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK36m, blk, index, data)
#define WRITE_MMU_PKTLINK36m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK36m, blk, index, data)

#define READ_MMU_PKTLINK37m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK37m, blk, index, data)
#define WRITE_MMU_PKTLINK37m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK37m, blk, index, data)

#define READ_MMU_PKTLINK38m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK38m, blk, index, data)
#define WRITE_MMU_PKTLINK38m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK38m, blk, index, data)

#define READ_MMU_PKTLINK39m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK39m, blk, index, data)
#define WRITE_MMU_PKTLINK39m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK39m, blk, index, data)

#define READ_MMU_PKTLINK40m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK40m, blk, index, data)
#define WRITE_MMU_PKTLINK40m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK40m, blk, index, data)

#define READ_MMU_PKTLINK41m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK41m, blk, index, data)
#define WRITE_MMU_PKTLINK41m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK41m, blk, index, data)

#define READ_MMU_PKTLINK42m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK42m, blk, index, data)
#define WRITE_MMU_PKTLINK42m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK42m, blk, index, data)

#define READ_MMU_PKTLINK43m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK43m, blk, index, data)
#define WRITE_MMU_PKTLINK43m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK43m, blk, index, data)

#define READ_MMU_PKTLINK44m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK44m, blk, index, data)
#define WRITE_MMU_PKTLINK44m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK44m, blk, index, data)

#define READ_MMU_PKTLINK45m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK45m, blk, index, data)
#define WRITE_MMU_PKTLINK45m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK45m, blk, index, data)

#define READ_MMU_PKTLINK46m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK46m, blk, index, data)
#define WRITE_MMU_PKTLINK46m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK46m, blk, index, data)

#define READ_MMU_PKTLINK47m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK47m, blk, index, data)
#define WRITE_MMU_PKTLINK47m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK47m, blk, index, data)

#define READ_MMU_PKTLINK48m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK48m, blk, index, data)
#define WRITE_MMU_PKTLINK48m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK48m, blk, index, data)

#define READ_MMU_PKTLINK49m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK49m, blk, index, data)
#define WRITE_MMU_PKTLINK49m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK49m, blk, index, data)

#define READ_MMU_PKTLINK50m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK50m, blk, index, data)
#define WRITE_MMU_PKTLINK50m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK50m, blk, index, data)

#define READ_MMU_PKTLINK51m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK51m, blk, index, data)
#define WRITE_MMU_PKTLINK51m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK51m, blk, index, data)

#define READ_MMU_PKTLINK52m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK52m, blk, index, data)
#define WRITE_MMU_PKTLINK52m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK52m, blk, index, data)

#define READ_MMU_PKTLINK53m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PKTLINK53m, blk, index, data)
#define WRITE_MMU_PKTLINK53m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PKTLINK53m, blk, index, data)

#define READ_MMU_PTRCACHE_CG0_CH0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PTRCACHE_CG0_CH0m, blk, index, data)
#define WRITE_MMU_PTRCACHE_CG0_CH0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PTRCACHE_CG0_CH0m, blk, index, data)

#define READ_MMU_PTRCACHE_CG0_CH1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PTRCACHE_CG0_CH1m, blk, index, data)
#define WRITE_MMU_PTRCACHE_CG0_CH1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PTRCACHE_CG0_CH1m, blk, index, data)

#define READ_MMU_PTRCACHE_CG1_CH0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PTRCACHE_CG1_CH0m, blk, index, data)
#define WRITE_MMU_PTRCACHE_CG1_CH0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PTRCACHE_CG1_CH0m, blk, index, data)

#define READ_MMU_PTRCACHE_CG1_CH1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PTRCACHE_CG1_CH1m, blk, index, data)
#define WRITE_MMU_PTRCACHE_CG1_CH1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PTRCACHE_CG1_CH1m, blk, index, data)

#define READ_MMU_PTRCACHE_CH0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PTRCACHE_CH0m, blk, index, data)
#define WRITE_MMU_PTRCACHE_CH0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PTRCACHE_CH0m, blk, index, data)

#define READ_MMU_PTRCACHE_CH1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_PTRCACHE_CH1m, blk, index, data)
#define WRITE_MMU_PTRCACHE_CH1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_PTRCACHE_CH1m, blk, index, data)

#define READ_MMU_WAIT_QUEUE_BITMAP_CG0_CH0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_BITMAP_CG0_CH0m, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_BITMAP_CG0_CH0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_BITMAP_CG0_CH0m, blk, index, data)

#define READ_MMU_WAIT_QUEUE_BITMAP_CG0_CH1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_BITMAP_CG0_CH1m, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_BITMAP_CG0_CH1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_BITMAP_CG0_CH1m, blk, index, data)

#define READ_MMU_WAIT_QUEUE_BITMAP_CG1_CH0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_BITMAP_CG1_CH0m, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_BITMAP_CG1_CH0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_BITMAP_CG1_CH0m, blk, index, data)

#define READ_MMU_WAIT_QUEUE_BITMAP_CG1_CH1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_BITMAP_CG1_CH1m, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_BITMAP_CG1_CH1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_BITMAP_CG1_CH1m, blk, index, data)

#define READ_MMU_WAIT_QUEUE_CG0_CH0_HIm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_CG0_CH0_HIm, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_CG0_CH0_HIm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_CG0_CH0_HIm, blk, index, data)

#define READ_MMU_WAIT_QUEUE_CG0_CH0_LOm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_CG0_CH0_LOm, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_CG0_CH0_LOm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_CG0_CH0_LOm, blk, index, data)

#define READ_MMU_WAIT_QUEUE_CG0_CH1_HIm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_CG0_CH1_HIm, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_CG0_CH1_HIm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_CG0_CH1_HIm, blk, index, data)

#define READ_MMU_WAIT_QUEUE_CG0_CH1_LOm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_CG0_CH1_LOm, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_CG0_CH1_LOm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_CG0_CH1_LOm, blk, index, data)

#define READ_MMU_WAIT_QUEUE_CG1_CH0_HIm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_CG1_CH0_HIm, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_CG1_CH0_HIm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_CG1_CH0_HIm, blk, index, data)

#define READ_MMU_WAIT_QUEUE_CG1_CH0_LOm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_CG1_CH0_LOm, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_CG1_CH0_LOm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_CG1_CH0_LOm, blk, index, data)

#define READ_MMU_WAIT_QUEUE_CG1_CH1_HIm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_CG1_CH1_HIm, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_CG1_CH1_HIm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_CG1_CH1_HIm, blk, index, data)

#define READ_MMU_WAIT_QUEUE_CG1_CH1_LOm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_CG1_CH1_LOm, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_CG1_CH1_LOm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_CG1_CH1_LOm, blk, index, data)

#define READ_MMU_WAIT_QUEUE_CH0_HIm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_CH0_HIm, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_CH0_HIm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_CH0_HIm, blk, index, data)

#define READ_MMU_WAIT_QUEUE_CH0_LOm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_CH0_LOm, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_CH0_LOm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_CH0_LOm, blk, index, data)

#define READ_MMU_WAIT_QUEUE_CH1_HIm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_CH1_HIm, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_CH1_HIm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_CH1_HIm, blk, index, data)

#define READ_MMU_WAIT_QUEUE_CH1_LOm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WAIT_QUEUE_CH1_LOm, blk, index, data)
#define WRITE_MMU_WAIT_QUEUE_CH1_LOm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WAIT_QUEUE_CH1_LOm, blk, index, data)

#define READ_MMU_WRED_CFG_CELLm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WRED_CFG_CELLm, blk, index, data)
#define WRITE_MMU_WRED_CFG_CELLm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WRED_CFG_CELLm, blk, index, data)

#define READ_MMU_WRED_CFG_PACKETm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WRED_CFG_PACKETm, blk, index, data)
#define WRITE_MMU_WRED_CFG_PACKETm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WRED_CFG_PACKETm, blk, index, data)

#define READ_MMU_WRED_PORT_CFG_CELLm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WRED_PORT_CFG_CELLm, blk, index, data)
#define WRITE_MMU_WRED_PORT_CFG_CELLm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WRED_PORT_CFG_CELLm, blk, index, data)

#define READ_MMU_WRED_PORT_CFG_PACKETm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WRED_PORT_CFG_PACKETm, blk, index, data)
#define WRITE_MMU_WRED_PORT_CFG_PACKETm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WRED_PORT_CFG_PACKETm, blk, index, data)

#define READ_MMU_WRED_PORT_THD_0_CELLm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WRED_PORT_THD_0_CELLm, blk, index, data)
#define WRITE_MMU_WRED_PORT_THD_0_CELLm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WRED_PORT_THD_0_CELLm, blk, index, data)

#define READ_MMU_WRED_PORT_THD_0_PACKETm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WRED_PORT_THD_0_PACKETm, blk, index, data)
#define WRITE_MMU_WRED_PORT_THD_0_PACKETm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WRED_PORT_THD_0_PACKETm, blk, index, data)

#define READ_MMU_WRED_PORT_THD_1_CELLm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WRED_PORT_THD_1_CELLm, blk, index, data)
#define WRITE_MMU_WRED_PORT_THD_1_CELLm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WRED_PORT_THD_1_CELLm, blk, index, data)

#define READ_MMU_WRED_PORT_THD_1_PACKETm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WRED_PORT_THD_1_PACKETm, blk, index, data)
#define WRITE_MMU_WRED_PORT_THD_1_PACKETm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WRED_PORT_THD_1_PACKETm, blk, index, data)

#define READ_MMU_WRED_THD_0_CELLm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WRED_THD_0_CELLm, blk, index, data)
#define WRITE_MMU_WRED_THD_0_CELLm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WRED_THD_0_CELLm, blk, index, data)

#define READ_MMU_WRED_THD_0_PACKETm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WRED_THD_0_PACKETm, blk, index, data)
#define WRITE_MMU_WRED_THD_0_PACKETm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WRED_THD_0_PACKETm, blk, index, data)

#define READ_MMU_WRED_THD_1_CELLm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WRED_THD_1_CELLm, blk, index, data)
#define WRITE_MMU_WRED_THD_1_CELLm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WRED_THD_1_CELLm, blk, index, data)

#define READ_MMU_WRED_THD_1_PACKETm(unit, blk, index, data) \
	soc_mem_read(unit, MMU_WRED_THD_1_PACKETm, blk, index, data)
#define WRITE_MMU_WRED_THD_1_PACKETm(unit, blk, index, data) \
	soc_mem_write(unit, MMU_WRED_THD_1_PACKETm, blk, index, data)

#define READ_MMU_XQ0m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ0m, blk, index, data)
#define WRITE_MMU_XQ0m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ0m, blk, index, data)

#define READ_MMU_XQ1m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ1m, blk, index, data)
#define WRITE_MMU_XQ1m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ1m, blk, index, data)

#define READ_MMU_XQ2m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ2m, blk, index, data)
#define WRITE_MMU_XQ2m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ2m, blk, index, data)

#define READ_MMU_XQ3m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ3m, blk, index, data)
#define WRITE_MMU_XQ3m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ3m, blk, index, data)

#define READ_MMU_XQ4m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ4m, blk, index, data)
#define WRITE_MMU_XQ4m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ4m, blk, index, data)

#define READ_MMU_XQ5m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ5m, blk, index, data)
#define WRITE_MMU_XQ5m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ5m, blk, index, data)

#define READ_MMU_XQ6m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ6m, blk, index, data)
#define WRITE_MMU_XQ6m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ6m, blk, index, data)

#define READ_MMU_XQ7m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ7m, blk, index, data)
#define WRITE_MMU_XQ7m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ7m, blk, index, data)

#define READ_MMU_XQ8m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ8m, blk, index, data)
#define WRITE_MMU_XQ8m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ8m, blk, index, data)

#define READ_MMU_XQ9m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ9m, blk, index, data)
#define WRITE_MMU_XQ9m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ9m, blk, index, data)

#define READ_MMU_XQ10m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ10m, blk, index, data)
#define WRITE_MMU_XQ10m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ10m, blk, index, data)

#define READ_MMU_XQ11m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ11m, blk, index, data)
#define WRITE_MMU_XQ11m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ11m, blk, index, data)

#define READ_MMU_XQ12m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ12m, blk, index, data)
#define WRITE_MMU_XQ12m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ12m, blk, index, data)

#define READ_MMU_XQ13m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ13m, blk, index, data)
#define WRITE_MMU_XQ13m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ13m, blk, index, data)

#define READ_MMU_XQ14m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ14m, blk, index, data)
#define WRITE_MMU_XQ14m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ14m, blk, index, data)

#define READ_MMU_XQ15m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ15m, blk, index, data)
#define WRITE_MMU_XQ15m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ15m, blk, index, data)

#define READ_MMU_XQ16m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ16m, blk, index, data)
#define WRITE_MMU_XQ16m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ16m, blk, index, data)

#define READ_MMU_XQ17m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ17m, blk, index, data)
#define WRITE_MMU_XQ17m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ17m, blk, index, data)

#define READ_MMU_XQ18m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ18m, blk, index, data)
#define WRITE_MMU_XQ18m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ18m, blk, index, data)

#define READ_MMU_XQ19m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ19m, blk, index, data)
#define WRITE_MMU_XQ19m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ19m, blk, index, data)

#define READ_MMU_XQ20m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ20m, blk, index, data)
#define WRITE_MMU_XQ20m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ20m, blk, index, data)

#define READ_MMU_XQ21m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ21m, blk, index, data)
#define WRITE_MMU_XQ21m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ21m, blk, index, data)

#define READ_MMU_XQ22m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ22m, blk, index, data)
#define WRITE_MMU_XQ22m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ22m, blk, index, data)

#define READ_MMU_XQ23m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ23m, blk, index, data)
#define WRITE_MMU_XQ23m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ23m, blk, index, data)

#define READ_MMU_XQ24m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ24m, blk, index, data)
#define WRITE_MMU_XQ24m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ24m, blk, index, data)

#define READ_MMU_XQ25m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ25m, blk, index, data)
#define WRITE_MMU_XQ25m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ25m, blk, index, data)

#define READ_MMU_XQ26m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ26m, blk, index, data)
#define WRITE_MMU_XQ26m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ26m, blk, index, data)

#define READ_MMU_XQ27m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ27m, blk, index, data)
#define WRITE_MMU_XQ27m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ27m, blk, index, data)

#define READ_MMU_XQ28m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ28m, blk, index, data)
#define WRITE_MMU_XQ28m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ28m, blk, index, data)

#define READ_MMU_XQ29m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ29m, blk, index, data)
#define WRITE_MMU_XQ29m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ29m, blk, index, data)

#define READ_MMU_XQ30m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ30m, blk, index, data)
#define WRITE_MMU_XQ30m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ30m, blk, index, data)

#define READ_MMU_XQ31m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ31m, blk, index, data)
#define WRITE_MMU_XQ31m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ31m, blk, index, data)

#define READ_MMU_XQ32m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ32m, blk, index, data)
#define WRITE_MMU_XQ32m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ32m, blk, index, data)

#define READ_MMU_XQ33m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ33m, blk, index, data)
#define WRITE_MMU_XQ33m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ33m, blk, index, data)

#define READ_MMU_XQ34m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ34m, blk, index, data)
#define WRITE_MMU_XQ34m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ34m, blk, index, data)

#define READ_MMU_XQ35m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ35m, blk, index, data)
#define WRITE_MMU_XQ35m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ35m, blk, index, data)

#define READ_MMU_XQ36m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ36m, blk, index, data)
#define WRITE_MMU_XQ36m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ36m, blk, index, data)

#define READ_MMU_XQ37m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ37m, blk, index, data)
#define WRITE_MMU_XQ37m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ37m, blk, index, data)

#define READ_MMU_XQ38m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ38m, blk, index, data)
#define WRITE_MMU_XQ38m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ38m, blk, index, data)

#define READ_MMU_XQ39m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ39m, blk, index, data)
#define WRITE_MMU_XQ39m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ39m, blk, index, data)

#define READ_MMU_XQ40m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ40m, blk, index, data)
#define WRITE_MMU_XQ40m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ40m, blk, index, data)

#define READ_MMU_XQ41m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ41m, blk, index, data)
#define WRITE_MMU_XQ41m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ41m, blk, index, data)

#define READ_MMU_XQ42m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ42m, blk, index, data)
#define WRITE_MMU_XQ42m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ42m, blk, index, data)

#define READ_MMU_XQ43m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ43m, blk, index, data)
#define WRITE_MMU_XQ43m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ43m, blk, index, data)

#define READ_MMU_XQ44m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ44m, blk, index, data)
#define WRITE_MMU_XQ44m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ44m, blk, index, data)

#define READ_MMU_XQ45m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ45m, blk, index, data)
#define WRITE_MMU_XQ45m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ45m, blk, index, data)

#define READ_MMU_XQ46m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ46m, blk, index, data)
#define WRITE_MMU_XQ46m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ46m, blk, index, data)

#define READ_MMU_XQ47m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ47m, blk, index, data)
#define WRITE_MMU_XQ47m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ47m, blk, index, data)

#define READ_MMU_XQ48m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ48m, blk, index, data)
#define WRITE_MMU_XQ48m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ48m, blk, index, data)

#define READ_MMU_XQ49m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ49m, blk, index, data)
#define WRITE_MMU_XQ49m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ49m, blk, index, data)

#define READ_MMU_XQ50m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ50m, blk, index, data)
#define WRITE_MMU_XQ50m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ50m, blk, index, data)

#define READ_MMU_XQ51m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ51m, blk, index, data)
#define WRITE_MMU_XQ51m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ51m, blk, index, data)

#define READ_MMU_XQ52m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ52m, blk, index, data)
#define WRITE_MMU_XQ52m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ52m, blk, index, data)

#define READ_MMU_XQ53m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ53m, blk, index, data)
#define WRITE_MMU_XQ53m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ53m, blk, index, data)

#define READ_MMU_XQ54m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ54m, blk, index, data)
#define WRITE_MMU_XQ54m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ54m, blk, index, data)

#define READ_MMU_XQ55m(unit, blk, index, data) \
	soc_mem_read(unit, MMU_XQ55m, blk, index, data)
#define WRITE_MMU_XQ55m(unit, blk, index, data) \
	soc_mem_write(unit, MMU_XQ55m, blk, index, data)

#define READ_MODPORT_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, MODPORT_MAPm, blk, index, data)
#define WRITE_MODPORT_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, MODPORT_MAPm, blk, index, data)

#define READ_MODPORT_MAP_EMm(unit, blk, index, data) \
	soc_mem_read(unit, MODPORT_MAP_EMm, blk, index, data)
#define WRITE_MODPORT_MAP_EMm(unit, blk, index, data) \
	soc_mem_write(unit, MODPORT_MAP_EMm, blk, index, data)

#define READ_MODPORT_MAP_IMm(unit, blk, index, data) \
	soc_mem_read(unit, MODPORT_MAP_IMm, blk, index, data)
#define WRITE_MODPORT_MAP_IMm(unit, blk, index, data) \
	soc_mem_write(unit, MODPORT_MAP_IMm, blk, index, data)

#define READ_MODPORT_MAP_SWm(unit, blk, index, data) \
	soc_mem_read(unit, MODPORT_MAP_SWm, blk, index, data)
#define WRITE_MODPORT_MAP_SWm(unit, blk, index, data) \
	soc_mem_write(unit, MODPORT_MAP_SWm, blk, index, data)

#define READ_MPLS_ENTRYm(unit, blk, index, data) \
	soc_mem_read(unit, MPLS_ENTRYm, blk, index, data)
#define WRITE_MPLS_ENTRYm(unit, blk, index, data) \
	soc_mem_write(unit, MPLS_ENTRYm, blk, index, data)

#define READ_MPLS_ENTRY_SCRATCHm(unit, blk, index, data) \
	soc_mem_read(unit, MPLS_ENTRY_SCRATCHm, blk, index, data)
#define WRITE_MPLS_ENTRY_SCRATCHm(unit, blk, index, data) \
	soc_mem_write(unit, MPLS_ENTRY_SCRATCHm, blk, index, data)

#define READ_MPLS_EXPm(unit, blk, index, data) \
	soc_mem_read(unit, MPLS_EXPm, blk, index, data)
#define WRITE_MPLS_EXPm(unit, blk, index, data) \
	soc_mem_write(unit, MPLS_EXPm, blk, index, data)

#define READ_MPLS_STATION_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, MPLS_STATION_TCAMm, blk, index, data)
#define WRITE_MPLS_STATION_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, MPLS_STATION_TCAMm, blk, index, data)

#define READ_MY_STATIONm(unit, blk, index, data) \
	soc_mem_read(unit, MY_STATIONm, blk, index, data)
#define WRITE_MY_STATIONm(unit, blk, index, data) \
	soc_mem_write(unit, MY_STATIONm, blk, index, data)

#define READ_NEXT_HOP_EXTm(unit, blk, index, data) \
	soc_mem_read(unit, NEXT_HOP_EXTm, blk, index, data)
#define WRITE_NEXT_HOP_EXTm(unit, blk, index, data) \
	soc_mem_write(unit, NEXT_HOP_EXTm, blk, index, data)

#define READ_NEXT_HOP_INTm(unit, blk, index, data) \
	soc_mem_read(unit, NEXT_HOP_INTm, blk, index, data)
#define WRITE_NEXT_HOP_INTm(unit, blk, index, data) \
	soc_mem_write(unit, NEXT_HOP_INTm, blk, index, data)

#define READ_NONUCAST_TRUNK_BLOCK_MASKm(unit, blk, index, data) \
	soc_mem_read(unit, NONUCAST_TRUNK_BLOCK_MASKm, blk, index, data)
#define WRITE_NONUCAST_TRUNK_BLOCK_MASKm(unit, blk, index, data) \
	soc_mem_write(unit, NONUCAST_TRUNK_BLOCK_MASKm, blk, index, data)

#define READ_PORT_CBL_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, PORT_CBL_TABLEm, blk, index, data)
#define WRITE_PORT_CBL_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, PORT_CBL_TABLEm, blk, index, data)

#define READ_PORT_COS_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, PORT_COS_MAPm, blk, index, data)
#define WRITE_PORT_COS_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, PORT_COS_MAPm, blk, index, data)

#define READ_PORT_LAG_FAILOVER_SETm(unit, blk, index, data) \
	soc_mem_read(unit, PORT_LAG_FAILOVER_SETm, blk, index, data)
#define WRITE_PORT_LAG_FAILOVER_SETm(unit, blk, index, data) \
	soc_mem_write(unit, PORT_LAG_FAILOVER_SETm, blk, index, data)

#define READ_PORT_OR_TRUNK_MAC_ACTIONm(unit, blk, index, data) \
	soc_mem_read(unit, PORT_OR_TRUNK_MAC_ACTIONm, blk, index, data)
#define WRITE_PORT_OR_TRUNK_MAC_ACTIONm(unit, blk, index, data) \
	soc_mem_write(unit, PORT_OR_TRUNK_MAC_ACTIONm, blk, index, data)

#define READ_PORT_OR_TRUNK_MAC_COUNTm(unit, blk, index, data) \
	soc_mem_read(unit, PORT_OR_TRUNK_MAC_COUNTm, blk, index, data)
#define WRITE_PORT_OR_TRUNK_MAC_COUNTm(unit, blk, index, data) \
	soc_mem_write(unit, PORT_OR_TRUNK_MAC_COUNTm, blk, index, data)

#define READ_PORT_OR_TRUNK_MAC_LIMITm(unit, blk, index, data) \
	soc_mem_read(unit, PORT_OR_TRUNK_MAC_LIMITm, blk, index, data)
#define WRITE_PORT_OR_TRUNK_MAC_LIMITm(unit, blk, index, data) \
	soc_mem_write(unit, PORT_OR_TRUNK_MAC_LIMITm, blk, index, data)

#define READ_PORT_TABm(unit, blk, index, data) \
	soc_mem_read(unit, PORT_TABm, blk, index, data)
#define WRITE_PORT_TABm(unit, blk, index, data) \
	soc_mem_write(unit, PORT_TABm, blk, index, data)

#define READ_PORT_TAB1m(unit, blk, index, data) \
	soc_mem_read(unit, PORT_TAB1m, blk, index, data)
#define WRITE_PORT_TAB1m(unit, blk, index, data) \
	soc_mem_write(unit, PORT_TAB1m, blk, index, data)

#define READ_PR_TABm(unit, blk, index, data) \
	soc_mem_read(unit, PR_TABm, blk, index, data)
#define WRITE_PR_TABm(unit, blk, index, data) \
	soc_mem_write(unit, PR_TABm, blk, index, data)

#define READ_PTABLEm(unit, blk, index, data) \
	soc_mem_read(unit, PTABLEm, blk, index, data)
#define WRITE_PTABLEm(unit, blk, index, data) \
	soc_mem_write(unit, PTABLEm, blk, index, data)

#define READ_SOURCE_TRUNK_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, SOURCE_TRUNK_MAP_TABLEm, blk, index, data)
#define WRITE_SOURCE_TRUNK_MAP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, SOURCE_TRUNK_MAP_TABLEm, blk, index, data)

#define READ_SOURCE_VPm(unit, blk, index, data) \
	soc_mem_read(unit, SOURCE_VPm, blk, index, data)
#define WRITE_SOURCE_VPm(unit, blk, index, data) \
	soc_mem_write(unit, SOURCE_VPm, blk, index, data)

#define READ_SRC_MODID_BLOCKm(unit, blk, index, data) \
	soc_mem_read(unit, SRC_MODID_BLOCKm, blk, index, data)
#define WRITE_SRC_MODID_BLOCKm(unit, blk, index, data) \
	soc_mem_write(unit, SRC_MODID_BLOCKm, blk, index, data)

#define READ_STGm(unit, blk, index, data) \
	soc_mem_read(unit, STGm, blk, index, data)
#define WRITE_STGm(unit, blk, index, data) \
	soc_mem_write(unit, STGm, blk, index, data)

#define READ_STG_TABm(unit, blk, index, data) \
	soc_mem_read(unit, STG_TABm, blk, index, data)
#define WRITE_STG_TABm(unit, blk, index, data) \
	soc_mem_write(unit, STG_TABm, blk, index, data)

#define READ_SYSTEM_CONFIG_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, SYSTEM_CONFIG_TABLEm, blk, index, data)
#define WRITE_SYSTEM_CONFIG_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, SYSTEM_CONFIG_TABLEm, blk, index, data)

#define READ_TCP_FNm(unit, blk, index, data) \
	soc_mem_read(unit, TCP_FNm, blk, index, data)
#define WRITE_TCP_FNm(unit, blk, index, data) \
	soc_mem_write(unit, TCP_FNm, blk, index, data)

#define READ_TOS_FNm(unit, blk, index, data) \
	soc_mem_read(unit, TOS_FNm, blk, index, data)
#define WRITE_TOS_FNm(unit, blk, index, data) \
	soc_mem_write(unit, TOS_FNm, blk, index, data)

#define READ_TRNK_DSTm(unit, blk, index, data) \
	soc_mem_read(unit, TRNK_DSTm, blk, index, data)
#define WRITE_TRNK_DSTm(unit, blk, index, data) \
	soc_mem_write(unit, TRNK_DSTm, blk, index, data)

#define READ_TRUNK32_CONFIG_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, TRUNK32_CONFIG_TABLEm, blk, index, data)
#define WRITE_TRUNK32_CONFIG_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, TRUNK32_CONFIG_TABLEm, blk, index, data)

#define READ_TRUNK32_PORT_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, TRUNK32_PORT_TABLEm, blk, index, data)
#define WRITE_TRUNK32_PORT_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, TRUNK32_PORT_TABLEm, blk, index, data)

#define READ_TRUNK_BITMAPm(unit, blk, index, data) \
	soc_mem_read(unit, TRUNK_BITMAPm, blk, index, data)
#define WRITE_TRUNK_BITMAPm(unit, blk, index, data) \
	soc_mem_write(unit, TRUNK_BITMAPm, blk, index, data)

#define READ_TRUNK_CBL_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, TRUNK_CBL_TABLEm, blk, index, data)
#define WRITE_TRUNK_CBL_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, TRUNK_CBL_TABLEm, blk, index, data)

#define READ_TRUNK_EGR_MASKm(unit, blk, index, data) \
	soc_mem_read(unit, TRUNK_EGR_MASKm, blk, index, data)
#define WRITE_TRUNK_EGR_MASKm(unit, blk, index, data) \
	soc_mem_write(unit, TRUNK_EGR_MASKm, blk, index, data)

#define READ_TRUNK_GROUPm(unit, blk, index, data) \
	soc_mem_read(unit, TRUNK_GROUPm, blk, index, data)
#define WRITE_TRUNK_GROUPm(unit, blk, index, data) \
	soc_mem_write(unit, TRUNK_GROUPm, blk, index, data)

#define READ_TRUNK_VLAN_RANGE_IDXm(unit, blk, index, data) \
	soc_mem_read(unit, TRUNK_VLAN_RANGE_IDXm, blk, index, data)
#define WRITE_TRUNK_VLAN_RANGE_IDXm(unit, blk, index, data) \
	soc_mem_write(unit, TRUNK_VLAN_RANGE_IDXm, blk, index, data)

#define READ_TTABLE_TBMAPm(unit, blk, index, data) \
	soc_mem_read(unit, TTABLE_TBMAPm, blk, index, data)
#define WRITE_TTABLE_TBMAPm(unit, blk, index, data) \
	soc_mem_write(unit, TTABLE_TBMAPm, blk, index, data)

#define READ_TTABLE_TTRm(unit, blk, index, data) \
	soc_mem_read(unit, TTABLE_TTRm, blk, index, data)
#define WRITE_TTABLE_TTRm(unit, blk, index, data) \
	soc_mem_write(unit, TTABLE_TTRm, blk, index, data)

#define READ_TTL_FNm(unit, blk, index, data) \
	soc_mem_read(unit, TTL_FNm, blk, index, data)
#define WRITE_TTL_FNm(unit, blk, index, data) \
	soc_mem_write(unit, TTL_FNm, blk, index, data)

#define READ_UDF_OFFSETm(unit, blk, index, data) \
	soc_mem_read(unit, UDF_OFFSETm, blk, index, data)
#define WRITE_UDF_OFFSETm(unit, blk, index, data) \
	soc_mem_write(unit, UDF_OFFSETm, blk, index, data)

#define READ_VFIm(unit, blk, index, data) \
	soc_mem_read(unit, VFIm, blk, index, data)
#define WRITE_VFIm(unit, blk, index, data) \
	soc_mem_write(unit, VFIm, blk, index, data)

#define READ_VFI_BITMAPm(unit, blk, index, data) \
	soc_mem_read(unit, VFI_BITMAPm, blk, index, data)
#define WRITE_VFI_BITMAPm(unit, blk, index, data) \
	soc_mem_write(unit, VFI_BITMAPm, blk, index, data)

#define READ_VFP_POLICY_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, VFP_POLICY_TABLEm, blk, index, data)
#define WRITE_VFP_POLICY_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, VFP_POLICY_TABLEm, blk, index, data)

#define READ_VFP_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, VFP_TCAMm, blk, index, data)
#define WRITE_VFP_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, VFP_TCAMm, blk, index, data)

#define READ_VLAN_COS_MAPm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_COS_MAPm, blk, index, data)
#define WRITE_VLAN_COS_MAPm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_COS_MAPm, blk, index, data)

#define READ_VLAN_DATAm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_DATAm, blk, index, data)
#define WRITE_VLAN_DATAm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_DATAm, blk, index, data)

#define READ_VLAN_MACm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_MACm, blk, index, data)
#define WRITE_VLAN_MACm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_MACm, blk, index, data)

#define READ_VLAN_MAC_ENTRYm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_MAC_ENTRYm, blk, index, data)
#define WRITE_VLAN_MAC_ENTRYm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_MAC_ENTRYm, blk, index, data)

#define READ_VLAN_MAC_SCRATCHm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_MAC_SCRATCHm, blk, index, data)
#define WRITE_VLAN_MAC_SCRATCHm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_MAC_SCRATCHm, blk, index, data)

#define READ_VLAN_MAC_VALIDm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_MAC_VALIDm, blk, index, data)
#define WRITE_VLAN_MAC_VALIDm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_MAC_VALIDm, blk, index, data)

#define READ_VLAN_OR_VFI_MAC_COUNTm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_OR_VFI_MAC_COUNTm, blk, index, data)
#define WRITE_VLAN_OR_VFI_MAC_COUNTm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_OR_VFI_MAC_COUNTm, blk, index, data)

#define READ_VLAN_OR_VFI_MAC_LIMITm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_OR_VFI_MAC_LIMITm, blk, index, data)
#define WRITE_VLAN_OR_VFI_MAC_LIMITm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_OR_VFI_MAC_LIMITm, blk, index, data)

#define READ_VLAN_PROFILE_2m(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_PROFILE_2m, blk, index, data)
#define WRITE_VLAN_PROFILE_2m(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_PROFILE_2m, blk, index, data)

#define READ_VLAN_PROFILE_TABm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_PROFILE_TABm, blk, index, data)
#define WRITE_VLAN_PROFILE_TABm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_PROFILE_TABm, blk, index, data)

#define READ_VLAN_PROTOCOLm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_PROTOCOLm, blk, index, data)
#define WRITE_VLAN_PROTOCOLm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_PROTOCOLm, blk, index, data)

#define READ_VLAN_PROTOCOL_DATAm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_PROTOCOL_DATAm, blk, index, data)
#define WRITE_VLAN_PROTOCOL_DATAm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_PROTOCOL_DATAm, blk, index, data)

#define READ_VLAN_RANGE_IDXm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_RANGE_IDXm, blk, index, data)
#define WRITE_VLAN_RANGE_IDXm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_RANGE_IDXm, blk, index, data)

#define READ_VLAN_SUBNETm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_SUBNETm, blk, index, data)
#define WRITE_VLAN_SUBNETm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_SUBNETm, blk, index, data)

#define READ_VLAN_SUBNET_DATAm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_SUBNET_DATAm, blk, index, data)
#define WRITE_VLAN_SUBNET_DATAm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_SUBNET_DATAm, blk, index, data)

#define READ_VLAN_SUBNET_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_SUBNET_DATA_ONLYm, blk, index, data)
#define WRITE_VLAN_SUBNET_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_SUBNET_DATA_ONLYm, blk, index, data)

#define READ_VLAN_SUBNET_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_SUBNET_ONLYm, blk, index, data)
#define WRITE_VLAN_SUBNET_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_SUBNET_ONLYm, blk, index, data)

#define READ_VLAN_SUBNET_TCAMm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_SUBNET_TCAMm, blk, index, data)
#define WRITE_VLAN_SUBNET_TCAMm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_SUBNET_TCAMm, blk, index, data)

#define READ_VLAN_TABm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_TABm, blk, index, data)
#define WRITE_VLAN_TABm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_TABm, blk, index, data)

#define READ_VLAN_XLATEm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_XLATEm, blk, index, data)
#define WRITE_VLAN_XLATEm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_XLATEm, blk, index, data)

#define READ_VLAN_XLATE_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_XLATE_DATA_ONLYm, blk, index, data)
#define WRITE_VLAN_XLATE_DATA_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_XLATE_DATA_ONLYm, blk, index, data)

#define READ_VLAN_XLATE_MASKm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_XLATE_MASKm, blk, index, data)
#define WRITE_VLAN_XLATE_MASKm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_XLATE_MASKm, blk, index, data)

#define READ_VLAN_XLATE_ONLYm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_XLATE_ONLYm, blk, index, data)
#define WRITE_VLAN_XLATE_ONLYm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_XLATE_ONLYm, blk, index, data)

#define READ_VLAN_XLATE_SCRATCHm(unit, blk, index, data) \
	soc_mem_read(unit, VLAN_XLATE_SCRATCHm, blk, index, data)
#define WRITE_VLAN_XLATE_SCRATCHm(unit, blk, index, data) \
	soc_mem_write(unit, VLAN_XLATE_SCRATCHm, blk, index, data)

#define READ_VPLSTABLEm(unit, blk, index, data) \
	soc_mem_read(unit, VPLSTABLEm, blk, index, data)
#define WRITE_VPLSTABLEm(unit, blk, index, data) \
	soc_mem_write(unit, VPLSTABLEm, blk, index, data)

#define READ_VPLS_BITMAP_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, VPLS_BITMAP_TABLEm, blk, index, data)
#define WRITE_VPLS_BITMAP_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, VPLS_BITMAP_TABLEm, blk, index, data)

#define READ_VPLS_LABELm(unit, blk, index, data) \
	soc_mem_read(unit, VPLS_LABELm, blk, index, data)
#define WRITE_VPLS_LABELm(unit, blk, index, data) \
	soc_mem_write(unit, VPLS_LABELm, blk, index, data)

#define READ_VRF_VFI_INTFm(unit, blk, index, data) \
	soc_mem_read(unit, VRF_VFI_INTFm, blk, index, data)
#define WRITE_VRF_VFI_INTFm(unit, blk, index, data) \
	soc_mem_write(unit, VRF_VFI_INTFm, blk, index, data)

#define READ_VTABLEm(unit, blk, index, data) \
	soc_mem_read(unit, VTABLEm, blk, index, data)
#define WRITE_VTABLEm(unit, blk, index, data) \
	soc_mem_write(unit, VTABLEm, blk, index, data)

#define READ_XFILTER_FFPCOUNTERSm(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPCOUNTERSm, blk, index, data)
#define WRITE_XFILTER_FFPCOUNTERSm(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPCOUNTERSm, blk, index, data)

#define READ_XFILTER_FFPCOUNTERS_TEST0m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPCOUNTERS_TEST0m, blk, index, data)
#define WRITE_XFILTER_FFPCOUNTERS_TEST0m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPCOUNTERS_TEST0m, blk, index, data)

#define READ_XFILTER_FFPCOUNTERS_TEST1m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPCOUNTERS_TEST1m, blk, index, data)
#define WRITE_XFILTER_FFPCOUNTERS_TEST1m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPCOUNTERS_TEST1m, blk, index, data)

#define READ_XFILTER_FFPIPBYTECOUNTERSm(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPIPBYTECOUNTERSm, blk, index, data)
#define WRITE_XFILTER_FFPIPBYTECOUNTERSm(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPIPBYTECOUNTERSm, blk, index, data)

#define READ_XFILTER_FFPIPBYTECOUNTERS_TEST0m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPIPBYTECOUNTERS_TEST0m, blk, index, data)
#define WRITE_XFILTER_FFPIPBYTECOUNTERS_TEST0m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPIPBYTECOUNTERS_TEST0m, blk, index, data)

#define READ_XFILTER_FFPIPBYTECOUNTERS_TEST1m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPIPBYTECOUNTERS_TEST1m, blk, index, data)
#define WRITE_XFILTER_FFPIPBYTECOUNTERS_TEST1m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPIPBYTECOUNTERS_TEST1m, blk, index, data)

#define READ_XFILTER_FFPIPPACKETCOUNTERSm(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPIPPACKETCOUNTERSm, blk, index, data)
#define WRITE_XFILTER_FFPIPPACKETCOUNTERSm(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPIPPACKETCOUNTERSm, blk, index, data)

#define READ_XFILTER_FFPIPPACKETCOUNTERS_TEST0m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPIPPACKETCOUNTERS_TEST0m, blk, index, data)
#define WRITE_XFILTER_FFPIPPACKETCOUNTERS_TEST0m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPIPPACKETCOUNTERS_TEST0m, blk, index, data)

#define READ_XFILTER_FFPIPPACKETCOUNTERS_TEST1m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPIPPACKETCOUNTERS_TEST1m, blk, index, data)
#define WRITE_XFILTER_FFPIPPACKETCOUNTERS_TEST1m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPIPPACKETCOUNTERS_TEST1m, blk, index, data)

#define READ_XFILTER_FFPOPBYTECOUNTERSm(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPOPBYTECOUNTERSm, blk, index, data)
#define WRITE_XFILTER_FFPOPBYTECOUNTERSm(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPOPBYTECOUNTERSm, blk, index, data)

#define READ_XFILTER_FFPOPBYTECOUNTERS_TEST0m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPOPBYTECOUNTERS_TEST0m, blk, index, data)
#define WRITE_XFILTER_FFPOPBYTECOUNTERS_TEST0m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPOPBYTECOUNTERS_TEST0m, blk, index, data)

#define READ_XFILTER_FFPOPBYTECOUNTERS_TEST1m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPOPBYTECOUNTERS_TEST1m, blk, index, data)
#define WRITE_XFILTER_FFPOPBYTECOUNTERS_TEST1m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPOPBYTECOUNTERS_TEST1m, blk, index, data)

#define READ_XFILTER_FFPOPPACKETCOUNTERSm(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPOPPACKETCOUNTERSm, blk, index, data)
#define WRITE_XFILTER_FFPOPPACKETCOUNTERSm(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPOPPACKETCOUNTERSm, blk, index, data)

#define READ_XFILTER_FFPOPPACKETCOUNTERS_TEST0m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPOPPACKETCOUNTERS_TEST0m, blk, index, data)
#define WRITE_XFILTER_FFPOPPACKETCOUNTERS_TEST0m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPOPPACKETCOUNTERS_TEST0m, blk, index, data)

#define READ_XFILTER_FFPOPPACKETCOUNTERS_TEST1m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_FFPOPPACKETCOUNTERS_TEST1m, blk, index, data)
#define WRITE_XFILTER_FFPOPPACKETCOUNTERS_TEST1m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_FFPOPPACKETCOUNTERS_TEST1m, blk, index, data)

#define READ_XFILTER_METERINGm(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_METERINGm, blk, index, data)
#define WRITE_XFILTER_METERINGm(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_METERINGm, blk, index, data)

#define READ_XFILTER_METERING_TEST0m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_METERING_TEST0m, blk, index, data)
#define WRITE_XFILTER_METERING_TEST0m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_METERING_TEST0m, blk, index, data)

#define READ_XFILTER_METERING_TEST1m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_METERING_TEST1m, blk, index, data)
#define WRITE_XFILTER_METERING_TEST1m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_METERING_TEST1m, blk, index, data)

#define READ_XFILTER_METERING_TEST2m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_METERING_TEST2m, blk, index, data)
#define WRITE_XFILTER_METERING_TEST2m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_METERING_TEST2m, blk, index, data)

#define READ_XFILTER_METERING_TEST3m(unit, blk, index, data) \
	soc_mem_read(unit, XFILTER_METERING_TEST3m, blk, index, data)
#define WRITE_XFILTER_METERING_TEST3m(unit, blk, index, data) \
	soc_mem_write(unit, XFILTER_METERING_TEST3m, blk, index, data)

#define READ_X_ARB_TDM_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, X_ARB_TDM_TABLEm, blk, index, data)
#define WRITE_X_ARB_TDM_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, X_ARB_TDM_TABLEm, blk, index, data)

#define READ_Y_ARB_TDM_TABLEm(unit, blk, index, data) \
	soc_mem_read(unit, Y_ARB_TDM_TABLEm, blk, index, data)
#define WRITE_Y_ARB_TDM_TABLEm(unit, blk, index, data) \
	soc_mem_write(unit, Y_ARB_TDM_TABLEm, blk, index, data)


#endif	/* !_SOC_MEMREGS_H */
