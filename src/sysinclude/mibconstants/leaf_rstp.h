/******************************************************************************
 ******************************************************************************
 **** This file was automatically generated by Epilogue Technology's
 **** Emissary SNMP MIB Compiler, version 6.3.
 **** This file was generated using the -leaf switch.
 **** 
 **** This file #defines C preprocessor macros providing a variety of
 **** information for the leaf objects in the MIB.
 **** 
 **** The file includes a LEAF_xxx macro for each leaf object in the
 **** MIB (xxx is replaced by the object's name).  The value of the
 **** LEAF_xxx macro is the final component of the object's object
 **** identifier.
 **** 
 **** If the object's SYNTAX clause included named INTEGER values,
 **** then there is a VAL_xxx_yyy macro for each named value (xxx is
 **** replaced by the object's name and yyy by the value's name).  The
 **** value of the VAL_xxx_yyy macro is the value associated with the
 **** named value.
 **** 
 **** If the object's SYNTAX clause specified a set of range limitations
 **** for the value of the object, then there are one or more sets of
 **** MIN_xxx and MAX_xxx macros specifying the lower and upper bound of
 **** each range limitation.
 **** 
 **** If the object's SYNTAX clause specified a set of size constraints
 **** for the value of the object, then there are one or more sets of
 **** MINSIZE_xxx and MAXSIZE_xxx macros specifying the lower and upper
 **** bound of each size constraint.  (If the size constraint is a single
 **** value rather than a range then the MINSIZE_xxx and MAXSIZE_xxx
 **** macros are replaced by a single SIZE_xxx macro.)
 **** 
 **** DO NOT MODIFY THIS FILE BY HAND.
 **** 
 **** Last build date: Fri Nov  9 18:12:50 2001
 **** from files:
 ****  Rfc1213.mib, Rfc1493-BRIDGE.mib, RSTP.mib, rstp.ctl
 ******************************************************************************
 ******************************************************************************
 */
#ifndef  LEAF_RSTP_H
#define  LEAF_RSTP_H

#define LEAF_dot1dStpProtocolSpecification	1
#define VAL_dot1dStpProtocolSpecification_unknown	1L
#define VAL_dot1dStpProtocolSpecification_decLb100	2L
#define VAL_dot1dStpProtocolSpecification_ieee8021d	3L
#define LEAF_dot1dStpPriority	2
#define MIN_dot1dStpPriority	0L
#define MAX_dot1dStpPriority	65535L
#define LEAF_dot1dStpTimeSinceTopologyChange	3
#define LEAF_dot1dStpTopChanges	4
#define LEAF_dot1dStpDesignatedRoot	5
#define SIZE_dot1dStpDesignatedRoot	8L
#define LEAF_dot1dStpRootCost	6
#define LEAF_dot1dStpRootPort	7
#define LEAF_dot1dStpMaxAge	8
#define LEAF_dot1dStpHelloTime	9
#define LEAF_dot1dStpHoldTime	10
#define LEAF_dot1dStpForwardDelay	11
#define LEAF_dot1dStpBridgeMaxAge	12
#define MIN_dot1dStpBridgeMaxAge	600L
#define MAX_dot1dStpBridgeMaxAge	4000L
#define LEAF_dot1dStpBridgeHelloTime	13
#define MIN_dot1dStpBridgeHelloTime	100L
#define MAX_dot1dStpBridgeHelloTime	1000L
#define LEAF_dot1dStpBridgeForwardDelay	14
#define MIN_dot1dStpBridgeForwardDelay	400L
#define MAX_dot1dStpBridgeForwardDelay	3000L
#define LEAF_dot1dStpVersion	16
#define VAL_dot1dStpVersion_stpCompatible	0L
#define VAL_dot1dStpVersion_rstp	2L
#define LEAF_dot1dStpPathCostDefault	17
#define VAL_dot1dStpPathCostDefault_stp8021d1998	1L
#define VAL_dot1dStpPathCostDefault_stp8021t2001	2L
#define LEAF_dot1dStpPortProtocolMigration	1
#define VAL_dot1dStpPortProtocolMigration_true	1L
#define VAL_dot1dStpPortProtocolMigration_false	2L
#define LEAF_dot1dStpPortAdminEdgePort	2
#define VAL_dot1dStpPortAdminEdgePort_true	1L
#define VAL_dot1dStpPortAdminEdgePort_false	2L
#define LEAF_dot1dStpPortOperEdgePort	3
#define VAL_dot1dStpPortOperEdgePort_true	1L
#define VAL_dot1dStpPortOperEdgePort_false	2L
#define LEAF_dot1dStpPortAdminPointToPoint	4
#define VAL_dot1dStpPortAdminPointToPoint_forceTrue	0L
#define VAL_dot1dStpPortAdminPointToPoint_forceFalse	1L
#define VAL_dot1dStpPortAdminPointToPoint_auto	2L
#define LEAF_dot1dStpPortOperPointToPoint	5
#define VAL_dot1dStpPortOperPointToPoint_true	1L
#define VAL_dot1dStpPortOperPointToPoint_false	2L

#endif /* end of #ifndef  LEAF_RSTP_H */

